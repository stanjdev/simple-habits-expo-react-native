{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/SignInScreen.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AppButton from \"../components/AppButton\";\nimport { AuthContext } from \"../components/context\";\nimport { useFonts } from 'expo-font';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _React$useState = React.useState({\n    firstName: '',\n    email: '',\n    password: '',\n    passwordConfirm: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userInfo = _React$useState2[0],\n      setUserInfo = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var emailInputChange = function emailInputChange(val) {\n    if (val.length !== 0) {\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        email: val\n      }));\n    } else {\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        email: \"\"\n      }));\n    }\n  };\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    if (val.length !== 0) {\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        password: val\n      }));\n    } else {\n      setUserInfo(_objectSpread(_objectSpread({}, userInfo), {}, {\n        password: \"\"\n      }));\n    }\n  };\n\n  var handleLogin = function handleLogin(email, password) {\n    signIn(email, password);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    hidden: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.footerIntro,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/memoir-logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 26,\n      color: \"#717171\",\n      textAlign: \"center\",\n      fontFamily: \"Assistant-SemiBold\",\n      width: 247\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Sign In Screen\")), React.createElement(View, {\n    style: {\n      height: 300,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    style: styles.inputs,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    autoFocus: true,\n    onChangeText: function onChangeText(val) {\n      return emailInputChange(val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    style: styles.inputs,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(val) {\n      return handlePasswordChange(val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(AppButton, {\n    title: \"Sign In\",\n    buttonStyles: styles.blueButton,\n    buttonTextStyles: styles.buttonText,\n    onPress: function onPress() {\n      handleLogin(userInfo.email, userInfo.password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    height: height,\n    width: width\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  body: {\n    flex: 2,\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n  },\n  footerIntro: {\n    fontFamily: \"Assistant\",\n    flex: 1,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingVertical: 50,\n    paddingHorizontal: 45,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    backgroundColor: \"#EAEAEA\",\n    height: 69,\n    width: 327,\n    borderRadius: 20,\n    padding: 20,\n    fontSize: 24,\n    fontFamily: \"Assistant-Regular\"\n  },\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 69,\n    width: 327,\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 24,\n    fontFamily: \"Assistant-SemiBold\"\n  }\n});","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/SignInScreen.jsx"],"names":["React","useContext","AppButton","AuthContext","useFonts","Dimensions","get","width","height","SignInScreen","navigation","require","fontsLoaded","useState","firstName","email","password","passwordConfirm","userInfo","setUserInfo","signIn","emailInputChange","val","length","handlePasswordChange","handleLogin","styles","container","footerIntro","fontSize","color","textAlign","fontFamily","justifyContent","inputs","blueButton","buttonText","StyleSheet","create","flex","image","bgImage","resizeMode","body","alignItems","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingVertical","paddingHorizontal","borderRadius","padding"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Text, View, StyleSheet, StatusBar, Image, Dimensions, ImageBackground, TextInput } from 'react-native';\n\nimport AppButton from '../components/AppButton';\nimport { AuthContext } from '../components/context';\nimport { useFonts } from 'expo-font';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function SignInScreen ({navigation}) {\n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n\n  \n  const [userInfo, setUserInfo] = React.useState({\n    firstName: '',\n    email: '',\n    password: '',\n    passwordConfirm: ''\n  })\n  \n  const { signIn } = React.useContext(AuthContext);\n\n\n  const emailInputChange = (val) => {\n    if (val.length !== 0) {\n      setUserInfo({\n        ...userInfo,\n        email: val\n      })\n    } else {\n      setUserInfo({\n        ...userInfo,\n        email: \"\"\n      })\n    }\n  }\n\n  const handlePasswordChange = (val) => {\n    if (val.length !== 0) {\n      setUserInfo({\n        ...userInfo,\n        password: val\n      })\n    } else {\n      setUserInfo({\n        ...userInfo,\n        password: \"\"\n      })\n    }\n  }\n\n\n  const handleLogin = (email, password) => {\n    signIn(email, password)\n  }\n\n\n\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden={false}/>\n        <View style={styles.footerIntro}>\n          <Image source={require(\"../assets/memoir-logo.png\")} />\n          <View>\n            <Text style={{fontSize: 26, color: \"#717171\", textAlign: \"center\", fontFamily: \"Assistant-SemiBold\", width: 247}}>Sign In Screen</Text>\n            {/* <Text>firstName: {userInfo.firstName}</Text>\n            <Text>email: {userInfo.email}</Text>\n            <Text>pw: {userInfo.password}</Text>\n            <Text>pwAgain: {userInfo.passwordConfirm}</Text> */}\n          </View>\n          <View style={{height: 300, justifyContent: \"space-between\"}}>\n\n            <TextInput \n              placeholder=\"Email\"\n              style={styles.inputs} \n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              autoFocus={true}\n              onChangeText={(val) => emailInputChange(val)}\n            />\n            <TextInput \n              placeholder=\"Password\"\n              secureTextEntry={true}\n              style={styles.inputs} \n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              onChangeText={(val) => handlePasswordChange(val)}\n              />\n\n            <AppButton \n              title=\"Sign In\" \n              buttonStyles={styles.blueButton} \n              buttonTextStyles={styles.buttonText} \n              // onPress={() => navigation.navigate('UserWelcomeScreen')}\n              onPress={() => {handleLogin(userInfo.email, userInfo.password)}}\n            />\n          </View>\n        </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    height: height,\n    width: width,\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  body: {\n    flex: 2,\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    // borderColor: \"pink\",\n    // borderWidth: 2,\n  },\n  footerIntro: {\n    fontFamily: \"Assistant\",\n    flex: 1,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingVertical: 50,\n    paddingHorizontal: 45,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  inputs: {\n    backgroundColor: \"#EAEAEA\",\n    height: 69,\n    width: 327,\n    borderRadius: 20,\n    padding: 20,\n    fontSize: 24,\n    fontFamily: \"Assistant-Regular\"\n  },\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 69,\n    width: 327,\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 24,\n    fontFamily: \"Assistant-SemiBold\"\n  }\n});"]},"metadata":{},"sourceType":"module"}
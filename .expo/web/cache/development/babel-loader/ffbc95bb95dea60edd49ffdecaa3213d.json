{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/BottomTabNavigator.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { createStackNavigator, CreateStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { BottomTabView, createBottomTabNavigator, CreateBottomTagNavigator } from '@react-navigation/bottom-tabs';\nimport BreatheScreen from \"./tab-screens/BreatheScreen\";\nimport ExerciseVideo from \"../components/ExerciseVideo\";\nimport MeditateScreen from \"./tab-screens/MeditateScreen\";\nimport MeditateTimerSetScreen from \"./tab-screens/meditate-screens-more/MeditateTimerSetScreen\";\nimport MeditateExerciseScreen from \"./tab-screens/meditate-screens-more/MeditateExerciseScreen\";\nimport FavoritesScreen from \"./tab-screens/FavoritesScreen\";\nimport ProfileScreen from \"./tab-screens/ProfileScreen\";\nimport ProMemberScreen from \"./tab-screens/ProMemberScreen\";\nimport SettingsScreen from \"./tab-screens/profile-screens-more/SettingsScreen\";\nimport AccountInfoScreen from \"./tab-screens/profile-screens-more/setting-options/AccountInfoScreen\";\nimport ChangePasswordScreen from \"./tab-screens/profile-screens-more/setting-options/ChangePasswordScreen\";\nimport { createIconSetFromIcoMoon } from \"@expo/vector-icons\";\nimport icoMoonConfig from \"../assets/tabIcons/icomoon/selection.json\";\nimport { Entypo } from '@expo/vector-icons';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nvar BottomTab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n  var _this = this;\n\n  createIconSetFromIcoMoon(icoMoonConfig, 'memoir-tab-icons');\n\n  var _useFonts = useFonts({\n    'memoir-tab-icons': require(\"../assets/tabIcons/icomoon/fonts/icomoon.ttf\"),\n    'Assistant': require(\"../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      tabIconsLoaded = _useFonts2[0];\n\n  var CustomIcon = createIconSetFromIcoMoon(icoMoonConfig, 'memoir-tab-icons');\n  return tabIconsLoaded ? React.createElement(BottomTab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: \"black\",\n      inactiveTintColor: \"#717171\",\n      labelStyle: {\n        marginBottom: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Explore\",\n    component: BreatheStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(CustomIcon, {\n          size: 14,\n          name: \"breathe-grey\",\n          style: {\n            marginBottom: -5\n          },\n          color: focused ? \"black\" : \"#717171\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    fontFamily: \"Assistant-SemiBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Meditate\",\n    component: MeditateStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(CustomIcon, {\n          size: 18,\n          name: \"meditate-grey\",\n          style: {\n            marginBottom: -5\n          },\n          color: focused ? \"black\" : \"#717171\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Favorites\",\n    component: FavoritesStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(CustomIcon, {\n          size: 18,\n          name: \"favorites-grey\",\n          style: {\n            marginBottom: -5\n          },\n          color: focused ? \"black\" : \"#717171\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Profile\",\n    component: ProfileStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(CustomIcon, {\n          size: 18,\n          name: \"profile-grey\",\n          style: {\n            marginBottom: -5\n          },\n          color: focused ? \"black\" : \"#717171\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  })) : React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  });\n}\n\nfunction TabBarIcon(_ref5) {\n  var name = _ref5.name;\n  return React.createElement(Entypo, {\n    name: name,\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  });\n}\n\nvar BreatheStack = createStackNavigator();\n\nfunction BreatheStackScreen() {\n  return React.createElement(BreatheStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(BreatheStack.Screen, {\n    name: \"Breathe\",\n    component: BreatheScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar MeditateStack = createStackNavigator();\n\nfunction MeditateStackScreen() {\n  return React.createElement(MeditateStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, React.createElement(MeditateStack.Screen, {\n    name: \"Meditate\",\n    component: MeditateScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), React.createElement(MeditateStack.Screen, {\n    name: \"MeditateTimerSetScreen\",\n    component: MeditateTimerSetScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar FavoritesStack = createStackNavigator();\n\nfunction FavoritesStackScreen() {\n  return React.createElement(FavoritesStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, React.createElement(FavoritesStack.Screen, {\n    name: \"Favorite\",\n    component: FavoritesScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileStackScreen() {\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"ProMemberScreen\",\n    component: ProMemberScreen,\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ScaleFromCenterAndroid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"SettingsScreen\",\n    component: SettingsScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"AccountInfoScreen\",\n    component: AccountInfoScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"ChangePasswordScreen\",\n    component: ChangePasswordScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/BottomTabNavigator.jsx"],"names":["React","createStackNavigator","CreateStackNavigator","TransitionPresets","BottomTabView","createBottomTabNavigator","CreateBottomTagNavigator","BreatheScreen","ExerciseVideo","MeditateScreen","MeditateTimerSetScreen","MeditateExerciseScreen","FavoritesScreen","ProfileScreen","ProMemberScreen","SettingsScreen","AccountInfoScreen","ChangePasswordScreen","createIconSetFromIcoMoon","icoMoonConfig","Entypo","useFonts","AppLoading","BottomTab","BottomTabNavigator","require","tabIconsLoaded","CustomIcon","activeTintColor","inactiveTintColor","labelStyle","marginBottom","BreatheStackScreen","tabBarIcon","focused","MeditateStackScreen","FavoritesStackScreen","ProfileStackScreen","TabBarIcon","name","BreatheStack","headerShown","MeditateStack","FavoritesStack","ProfileStack","ScaleFromCenterAndroid"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createStackNavigator, CreateStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { BottomTabView, createBottomTabNavigator, CreateBottomTagNavigator } from '@react-navigation/bottom-tabs';\n\n// ACTUAL SCREENS\nimport BreatheScreen from './tab-screens/BreatheScreen';\nimport ExerciseVideo from '../components/ExerciseVideo';\n\nimport MeditateScreen from './tab-screens/MeditateScreen';\nimport MeditateTimerSetScreen from './tab-screens/meditate-screens-more/MeditateTimerSetScreen';\nimport MeditateExerciseScreen from './tab-screens/meditate-screens-more/MeditateExerciseScreen';\n\nimport FavoritesScreen from './tab-screens/FavoritesScreen';\n\nimport ProfileScreen from './tab-screens/ProfileScreen';\nimport ProMemberScreen from './tab-screens/ProMemberScreen';\nimport SettingsScreen from './tab-screens/profile-screens-more/SettingsScreen';\nimport AccountInfoScreen from './tab-screens/profile-screens-more/setting-options/AccountInfoScreen';\nimport ChangePasswordScreen from './tab-screens/profile-screens-more/setting-options/ChangePasswordScreen';\n\n// Custom Tab Icons\nimport { createIconSetFromIcoMoon } from 'react-native-vector-icons';\nimport icoMoonConfig from '../assets/tabIcons/icomoon/selection.json';\n\n\n// Stock Tab Icons\nimport { Entypo } from '@expo/vector-icons'; \n\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\n\n\n\n\n\n\n\n\n\n\n\n\n// ACTUAL TAB NAVIGATOR\nconst BottomTab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n\n  createIconSetFromIcoMoon(icoMoonConfig, 'memoir-tab-icons')\n\n  let [tabIconsLoaded] = useFonts({\n    'memoir-tab-icons': require('../assets/tabIcons/icomoon/fonts/icomoon.ttf'),\n    'Assistant': require('../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n  \n  const CustomIcon = createIconSetFromIcoMoon(icoMoonConfig, 'memoir-tab-icons');\n\n  return(\n    tabIconsLoaded ? \n\n    <BottomTab.Navigator\n      tabBarOptions={{\n        activeTintColor: \"black\",\n        inactiveTintColor: \"#717171\",\n        labelStyle: { marginBottom: 5 },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Explore\"\n        component={BreatheStackScreen}\n        options={{\n          // tabBarIcon: () => <TabBarIcon name=\"air\" />\n          tabBarIcon: ({ focused }) => <CustomIcon size={14} name=\"breathe-grey\" style={{marginBottom: -5}} color={ focused ? \"black\" : \"#717171\"}/>\n        }}\n        fontFamily=\"Assistant-SemiBold\"\n      />\n      <BottomTab.Screen \n        name=\"Meditate\"\n        component={MeditateStackScreen}\n        options={{\n          // tabBarIcon: () => <TabBarIcon name=\"dots-two-horizontal\" />\n          tabBarIcon: ({ focused }) => <CustomIcon size={18} name=\"meditate-grey\" style={{marginBottom: -5}} color={ focused ? \"black\" : \"#717171\"} />\n        }}\n        \n      />\n      <BottomTab.Screen \n        name=\"Favorites\"\n        component={FavoritesStackScreen}\n        options={{\n          // tabBarIcon: () => <TabBarIcon name=\"heart-outlined\" />\n          tabBarIcon: ({ focused }) => <CustomIcon size={18} name=\"favorites-grey\" style={{marginBottom: -5}} color={ focused ? \"black\" : \"#717171\"} />,\n          // tabBarLabel: \"Favorites\",\n        }}\n      />\n      <BottomTab.Screen \n        name=\"Profile\"\n        component={ProfileStackScreen}\n        options={{\n          // tabBarIcon: () => <TabBarIcon name=\"user\" />\n          tabBarIcon: ({ focused }) => <CustomIcon size={18} name=\"profile-grey\" style={{marginBottom: -5}} color={ focused ? \"black\" : \"#717171\"} /> \n        }}\n      />\n    </BottomTab.Navigator>\n\n    : <AppLoading />\n  )\n}\n\nfunction TabBarIcon({name}) {\n  return <Entypo name={name} size={24} color=\"black\" />\n}\n\n\n\n\n\n\n\n\n\n\n\n// STACK NAVIGATORS\nconst BreatheStack = createStackNavigator();\nfunction BreatheStackScreen() {\n  return (\n    <BreatheStack.Navigator>\n      <BreatheStack.Screen name=\"Breathe\" component={BreatheScreen} options={{headerShown: false}}/>\n      {/* <BreatheStack.Screen name=\"ExerciseVideo\" component={ExerciseVideo} options={{headerShown: false}}/> */}\n    </BreatheStack.Navigator>\n  )\n}\n\nconst MeditateStack = createStackNavigator();\nfunction MeditateStackScreen() {\n  return (\n    <MeditateStack.Navigator>\n      <MeditateStack.Screen name=\"Meditate\" component={MeditateScreen} options={{headerShown: false}}/>\n      <MeditateStack.Screen name=\"MeditateTimerSetScreen\" component={MeditateTimerSetScreen} options={{headerShown: false}}/>\n      {/* <MeditateStack.Screen name=\"MeditateExerciseScreen\" component={MeditateExerciseScreen} options={{headerShown: false}}/> */}\n    </MeditateStack.Navigator>\n  )\n}\n\nconst FavoritesStack = createStackNavigator();\nfunction FavoritesStackScreen() {\n  return (\n    <FavoritesStack.Navigator>\n      <FavoritesStack.Screen name=\"Favorite\" component={FavoritesScreen} options={{headerShown: false}}/>\n    </FavoritesStack.Navigator>\n  )\n}\n\nconst ProfileStack = createStackNavigator();\nfunction ProfileStackScreen() {\n  return(\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen name=\"Profile\" component={ProfileScreen} options={{headerShown: false}}/>\n      <ProfileStack.Screen name=\"ProMemberScreen\" component={ProMemberScreen} options={{headerShown: false, ...TransitionPresets.ScaleFromCenterAndroid}}/>\n      <ProfileStack.Screen name=\"SettingsScreen\" component={SettingsScreen} options={{headerShown: false}}/>\n      <ProfileStack.Screen name=\"AccountInfoScreen\" component={AccountInfoScreen} options={{headerShown: false}}/>\n      <ProfileStack.Screen name=\"ChangePasswordScreen\" component={ChangePasswordScreen} options={{headerShown: false}}/>\n    </ProfileStack.Navigator>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}
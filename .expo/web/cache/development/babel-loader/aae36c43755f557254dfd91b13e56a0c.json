{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/components/ExerciseVideo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useRef, useContext, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { useFonts } from 'expo-font';\nimport { useIsFocused } from '@react-navigation/native';\nimport { useKeepAwake } from 'expo-keep-awake';\nimport { AuthContext } from \"../components/context\";\nimport AppButton from \"./AppButton\";\nimport DoubleClick from 'react-native-double-tap';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Audio, Video } from 'expo-av';\nimport { PitchCorrectionQuality, setAudioModeAsync } from 'expo-av/build/Audio';\nimport { fireApp } from \"../firebase\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport default function ExerciseVideo(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  useKeepAwake();\n  var isFocused = useIsFocused();\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _route$params = route.params,\n      id = _route$params.id,\n      videoFile = _route$params.videoFile,\n      videoUrl = _route$params.videoUrl,\n      cachedVideo = _route$params.cachedVideo,\n      modalIcon = _route$params.modalIcon,\n      iconHeight = _route$params.iconHeight,\n      autoCountDown = _route$params.autoCountDown,\n      customVolume = _route$params.customVolume,\n      noFinishBell = _route$params.noFinishBell,\n      modalText = _route$params.modalText,\n      uniqueImgEvening = _route$params.uniqueImgEvening;\n\n  var _useContext = useContext(AuthContext),\n      signOut = _useContext.signOut,\n      userToken = _useContext.userToken,\n      userFirstName = _useContext.userFirstName;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exerciseFinished = _useState4[0],\n      setExerciseFinished = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paused = _useState6[0],\n      setPaused = _useState6[1];\n\n  var _useState7 = useState(0.0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      videoBellVolume = _useState8[0],\n      setVideoBellVolume = _useState8[1];\n\n  var _useState9 = useState(\"1.0\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bellVolume = _useState10[0],\n      setBellVolume = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showTimerScroller = _useState12[0],\n      setShowTimerScroller = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      displayTimerDuration = _useState14[0],\n      setDisplayTimerDuration = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      overlay = _useState16[0],\n      setOverlay = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sessionSecs = _useState18[0],\n      setSessionSecs = _useState18[1];\n\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var overlayFade = useRef(new Animated.Value(0)).current;\n\n  var fade = function fade() {\n    Animated.timing(fadeAnim, {\n      toValue: showTimerScroller ? 1 : 0,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var overlayFader = function overlayFader() {\n    Animated.timing(overlayFade, {\n      toValue: overlay ? 1 : 0,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var lastPress = null;\n\n  var handlePress = function handlePress() {\n    var time = new Date().getTime();\n    var delta = time - lastPress;\n    var DOUBLE_PRESS_DELAY = 400;\n\n    if (lastPress && delta < DOUBLE_PRESS_DELAY) {\n      handleDoublePress();\n    } else {\n      touchScreenToggleControls();\n      console.log('single press!');\n      lastPress = time;\n    }\n  };\n\n  var handleDoublePress = function handleDoublePress() {\n    console.log(\"double pressed!\");\n    pause();\n  };\n\n  var handleSinglePress = function handleSinglePress() {\n    touchScreenToggleControls();\n  };\n\n  var touchScreenToggleControls = function touchScreenToggleControls() {\n    setOverlay(!overlay);\n    overlayFader();\n  };\n\n  var toggleShowTimerScroller = function toggleShowTimerScroller() {\n    if (displayTimerDuration) {\n      setDisplayTimerDuration(false);\n    }\n\n    if (!showTimerScroller && timerDuration) {\n      setDisplayTimerDuration(true);\n    }\n\n    setShowTimerScroller(!showTimerScroller);\n    fade();\n  };\n\n  var _useState19 = useState(1),\n      _useState20 = _slicedToArray(_useState19, 2),\n      mins = _useState20[0],\n      setMins = _useState20[1];\n\n  var _useState21 = useState(5),\n      _useState22 = _slicedToArray(_useState21, 2),\n      secs = _useState22[0],\n      setSecs = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      timerRunning = _useState24[0],\n      setTimerRunning = _useState24[1];\n\n  var _useState25 = useState(null),\n      _useState26 = _slicedToArray(_useState25, 2),\n      timerDuration = _useState26[0],\n      setTimerDuration = _useState26[1];\n\n  var timerDurationsOptions = {\n    \"30s\": {\n      mins: 0,\n      secs: 30\n    },\n    \"1m\": {\n      mins: 1,\n      secs: 0\n    },\n    \"2m\": {\n      mins: 2,\n      secs: 0\n    },\n    \"3m\": {\n      mins: 3,\n      secs: 0\n    },\n    \"5m\": {\n      mins: 5,\n      secs: 0\n    },\n    \"10m\": {\n      mins: 10,\n      secs: 0\n    },\n    \"15m\": {\n      mins: 15,\n      secs: 0\n    },\n    \"20m\": {\n      mins: 20,\n      secs: 0\n    },\n    \"30m\": {\n      mins: 30,\n      secs: 0\n    }\n  };\n\n  var renderTimerOptions = function renderTimerOptions() {\n    var options = [];\n\n    var _loop = function _loop(time) {\n      options.push(React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return pressTimerChoice(time);\n        },\n        key: time,\n        style: {\n          padding: 10,\n          paddingRight: 27,\n          paddingLeft: 27\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: \"Assistant-SemiBold\",\n          fontSize: 19,\n          color: \"white\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, time)));\n    };\n\n    for (var time in timerDurationsOptions) {\n      _loop(time);\n    }\n\n    return options;\n  };\n\n  var pressTimerChoice = function pressTimerChoice(time) {\n    setTimerDuration(timerDurationsOptions[time]);\n    setDisplayTimerDuration(true);\n    toggleShowTimerScroller();\n    setTimerRunning(true);\n\n    if (!runningClock) {\n      toggleClock();\n    }\n  };\n\n  var runAutoCountDown = function runAutoCountDown(time) {\n    setTimerDuration(timerDurationsOptions[time]);\n    setDisplayTimerDuration(true);\n    setTimerRunning(true);\n  };\n\n  useEffect(function () {\n    if (timerDuration) {\n      setMins(timerDuration[\"mins\"]);\n      setSecs(timerDuration[\"secs\"]);\n      console.log(\"mins: \" + mins);\n      console.log(\"secs: \" + secs);\n    }\n  }, [timerDuration]);\n  useEffect(function () {\n    if (runningClock) toggleClock();\n    return function () {\n      return clearInterval(exerciseInterv.current);\n    };\n  }, []);\n\n  var startExercise = function startExercise() {\n    setModalVisible(!modalVisible);\n    console.log(\"exercise started!\");\n    incrementStreak();\n    if (!runningClock && autoCountDown) toggleClock();\n  };\n\n  var exerciseInterv = useRef(null);\n  useEffect(function () {\n    if (exerciseInterv.current) clearInterval(exerciseInterv.current);\n\n    if (timerDuration) {\n      if (paused) setTimerRunning(false);else setTimerRunning(true);\n    }\n\n    if (timerRunning) {\n      setExerciseFinished(false);\n    }\n\n    if (!timerRunning) {\n      clearInterval(exerciseInterv.current);\n    }\n  });\n\n  var _useInterval = useInterval(function () {\n    runExerciseClock();\n  }, 1000),\n      _useInterval2 = _slicedToArray(_useInterval, 3),\n      toggleClock = _useInterval2[0],\n      runningClock = _useInterval2[1],\n      clear = _useInterval2[2];\n\n  var runExerciseClock = function runExerciseClock() {\n    if (secs > 0) {\n      setSecs(secs - 1);\n    } else if (mins >= 1 && secs == 0) {\n      setSecs(59);\n      setMins(mins - 1);\n    } else {\n      updateUserTime();\n      incrementSessionsCompleted();\n      setTimerDuration(null);\n      setTimerRunning(false);\n      setExerciseFinished(true);\n      clear();\n      Alert.alert(\"Timer Complete\", \"Great job, you’ve completed your breath work session!\", [{\n        text: \"Keep Going\",\n        onPress: function onPress() {\n          return keepGoing();\n        }\n      }, {\n        text: \"Finish\",\n        style: \"cancel\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }]);\n      touchScreenToggleControls();\n      console.log('else hit! Finished!');\n      loadFinishedSound();\n      clearInterval(exerciseInterv.current);\n      bellSound.unloadAsync();\n      playingAudio.current.stopAsync();\n    }\n\n    console.log(\"runExerciseClock sessionSecs: \" + sessionSecs);\n    setSessionSecs(function (sessionSecs) {\n      return sessionSecs += 1;\n    });\n  };\n\n  function leadingZero(time) {\n    if (time <= 9) {\n      time = \"0\" + time;\n    }\n\n    return time;\n  }\n\n  function keepGoing() {\n    setDisplayTimerDuration(false);\n    setExerciseFinished(false);\n    toggleClock();\n  }\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      volumeOn = _useState28[0],\n      setVolumeOn = _useState28[1];\n\n  var fadeBellVolume = function fadeBellVolume() {\n    setVolumeOn(!volumeOn);\n    var fadeEffect = setInterval(function () {\n      if (!volumeOn) {\n        if (bellVolume > 0) {\n          setBellVolume(function (bellVolume) {\n            return bellVolume - 0.1;\n          });\n        } else {\n          clearInterval(fadeEffect);\n        }\n      }\n\n      if (volumeOn) {\n        if (bellVolume < 1) {\n          setBellVolume(function (bellVolume) {\n            return bellVolume + 0.1;\n          });\n        } else {\n          clearInterval(fadeEffect);\n        }\n      }\n    }, 500);\n  };\n\n  var bellSound = new Audio.Sound();\n  var music = new Audio.Sound();\n  Audio.setAudioModeAsync({\n    playsInSilentModeIOS: true\n  });\n  var playingAudio = useRef();\n\n  var loadFinishedSound = function loadFinishedSound() {\n    return _regeneratorRuntime.async(function loadFinishedSound$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!noFinishBell) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(bellSound.loadAsync(require(\"../assets/audio/meditation-finished-sound.mp3\")));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(bellSound.playAsync());\n\n          case 7:\n            console.log(\"load sound!\");\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  var loadAndPlayMusic = function loadAndPlayMusic() {\n    return _regeneratorRuntime.async(function loadAndPlayMusic$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(music.loadAsync(require(\"../assets/audio/bg-music.mp3\")));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(music.playAsync());\n\n          case 5:\n            playingAudio.current = music;\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    if (!modalVisible && !exerciseFinished && !paused) {\n      loadAndPlayMusic();\n\n      if (autoCountDown) {\n        console.log(\"autoCountdown!\", autoCountDown);\n        runAutoCountDown(autoCountDown);\n      }\n    }\n\n    return function () {\n      return music.unloadAsync();\n    };\n  }, [modalVisible]);\n  useEffect(function () {\n    if (playingAudio.current && !exerciseFinished) {\n      playingAudio.current.setIsMutedAsync(musicMuted);\n\n      if (paused) {\n        playingAudio.current.pauseAsync();\n      } else {\n        playingAudio.current.playAsync();\n      }\n    }\n  });\n  var currUser = fireApp.auth().currentUser;\n  var progressRef = currUser ? fireApp.database().ref(currUser.uid).child('progress') : null;\n\n  function incrementUserTime() {\n    var timeSoFar;\n    return _regeneratorRuntime.async(function incrementUserTime$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!currUser) {\n              _context3.next = 4;\n              break;\n            }\n\n            progressRef.once('value', function (snapshot) {\n              timeSoFar = snapshot.val().practiceTime;\n            });\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(progressRef.update({\n              practiceTime: timeSoFar += sessionSecs\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function updateUserTime() {\n    var timeSoFar;\n    return _regeneratorRuntime.async(function updateUserTime$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!currUser) {\n              _context5.next = 4;\n              break;\n            }\n\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(progressRef.once('value', function _callee(snapshot) {\n              return _regeneratorRuntime.async(function _callee$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      if (!(snapshot.val() === null)) {\n                        _context4.next = 13;\n                        break;\n                      }\n\n                      progressRef.set({\n                        practiceTime: 0,\n                        sessionsCompleted: 0,\n                        currentStreak: 0,\n                        bestStreak: 0\n                      });\n                      _context4.next = 4;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 4:\n                      _context4.t0 = _context4.sent;\n\n                      if (!(_context4.t0 !== null)) {\n                        _context4.next = 9;\n                        break;\n                      }\n\n                      _context4.t1 = snapshot.val().practiceTime;\n                      _context4.next = 10;\n                      break;\n\n                    case 9:\n                      _context4.t1 = 0;\n\n                    case 10:\n                      timeSoFar = _context4.t1;\n                      _context4.next = 22;\n                      break;\n\n                    case 13:\n                      _context4.next = 15;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 15:\n                      _context4.t2 = _context4.sent;\n\n                      if (!(_context4.t2 !== null)) {\n                        _context4.next = 20;\n                        break;\n                      }\n\n                      _context4.t3 = snapshot.val().practiceTime;\n                      _context4.next = 21;\n                      break;\n\n                    case 20:\n                      _context4.t3 = 0;\n\n                    case 21:\n                      timeSoFar = _context4.t3;\n\n                    case 22:\n                      _context4.next = 24;\n                      return _regeneratorRuntime.awrap(progressRef.update({\n                        practiceTime: timeSoFar += sessionSecs\n                      }));\n\n                    case 24:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n            setSessionSecs(0);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var goBack = function goBack() {\n    updateUserTime();\n    navigation.goBack();\n  };\n\n  var fromModalGoBack = function fromModalGoBack() {\n    navigation.goBack();\n    setModalVisible(!modalVisible);\n  };\n\n  function incrementSessionsCompleted() {\n    var sessionsCompletedSoFar;\n    return _regeneratorRuntime.async(function incrementSessionsCompleted$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!currUser) {\n              _context7.next = 3;\n              break;\n            }\n\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(progressRef.once('value', function _callee2(snapshot) {\n              return _regeneratorRuntime.async(function _callee2$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      if (!(snapshot.val() === null)) {\n                        _context6.next = 13;\n                        break;\n                      }\n\n                      progressRef.set({\n                        practiceTime: 0,\n                        sessionsCompleted: 0,\n                        currentStreak: 0,\n                        bestStreak: 0,\n                        lastDateExercised: new Date().getDate(),\n                        bestStreakDate: new Date().getDate(),\n                        bestStreakMonth: new Date().getMonth() + 1,\n                        bestStreakYear: new Date().getFullYear()\n                      });\n                      _context6.next = 4;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 4:\n                      _context6.t0 = _context6.sent;\n\n                      if (!(_context6.t0 !== null)) {\n                        _context6.next = 9;\n                        break;\n                      }\n\n                      _context6.t1 = snapshot.val().sessionsCompleted;\n                      _context6.next = 10;\n                      break;\n\n                    case 9:\n                      _context6.t1 = 0;\n\n                    case 10:\n                      sessionsCompletedSoFar = _context6.t1;\n                      _context6.next = 22;\n                      break;\n\n                    case 13:\n                      _context6.next = 15;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 15:\n                      _context6.t2 = _context6.sent;\n\n                      if (!(_context6.t2 !== null)) {\n                        _context6.next = 20;\n                        break;\n                      }\n\n                      _context6.t3 = snapshot.val().sessionsCompleted;\n                      _context6.next = 21;\n                      break;\n\n                    case 20:\n                      _context6.t3 = 0;\n\n                    case 21:\n                      sessionsCompletedSoFar = _context6.t3;\n\n                    case 22:\n                      _context6.next = 24;\n                      return _regeneratorRuntime.awrap(progressRef.update({\n                        sessionsCompleted: sessionsCompletedSoFar += 1\n                      }));\n\n                    case 24:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  var incrementStreak = function incrementStreak() {\n    var currentStreakSoFar, lastDateExercised, bestStreakSoFar;\n    return _regeneratorRuntime.async(function incrementStreak$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            if (!currUser) {\n              _context9.next = 3;\n              break;\n            }\n\n            _context9.next = 3;\n            return _regeneratorRuntime.awrap(progressRef.once('value', function _callee3(snapshot) {\n              var dateNow;\n              return _regeneratorRuntime.async(function _callee3$(_context8) {\n                while (1) {\n                  switch (_context8.prev = _context8.next) {\n                    case 0:\n                      _context8.next = 2;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 2:\n                      _context8.t0 = _context8.sent;\n\n                      if (!(_context8.t0 === null)) {\n                        _context8.next = 34;\n                        break;\n                      }\n\n                      progressRef.set({\n                        practiceTime: 0,\n                        sessionsCompleted: 0,\n                        currentStreak: 1,\n                        bestStreak: 1,\n                        lastDateExercised: new Date().getDate(),\n                        bestStreakDate: new Date().getDate(),\n                        bestStreakMonth: new Date().getMonth() + 1,\n                        bestStreakYear: new Date().getFullYear()\n                      });\n                      _context8.next = 7;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 7:\n                      _context8.t1 = _context8.sent;\n\n                      if (!(_context8.t1 !== null)) {\n                        _context8.next = 12;\n                        break;\n                      }\n\n                      _context8.t2 = snapshot.val().currentStreak;\n                      _context8.next = 13;\n                      break;\n\n                    case 12:\n                      _context8.t2 = 0;\n\n                    case 13:\n                      currentStreakSoFar = _context8.t2;\n                      _context8.next = 16;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 16:\n                      _context8.t3 = _context8.sent;\n\n                      if (!(_context8.t3 !== null)) {\n                        _context8.next = 21;\n                        break;\n                      }\n\n                      _context8.t4 = snapshot.val().lastDateExercised;\n                      _context8.next = 22;\n                      break;\n\n                    case 21:\n                      _context8.t4 = new Date().getDate();\n\n                    case 22:\n                      lastDateExercised = _context8.t4;\n                      _context8.next = 25;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 25:\n                      _context8.t5 = _context8.sent;\n\n                      if (!(_context8.t5 !== null)) {\n                        _context8.next = 30;\n                        break;\n                      }\n\n                      _context8.t6 = snapshot.val().bestStreak;\n                      _context8.next = 31;\n                      break;\n\n                    case 30:\n                      _context8.t6 = 1;\n\n                    case 31:\n                      bestStreakSoFar = _context8.t6;\n                      _context8.next = 61;\n                      break;\n\n                    case 34:\n                      _context8.next = 36;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 36:\n                      _context8.t7 = _context8.sent;\n\n                      if (!(_context8.t7 !== null)) {\n                        _context8.next = 41;\n                        break;\n                      }\n\n                      _context8.t8 = snapshot.val().currentStreak;\n                      _context8.next = 42;\n                      break;\n\n                    case 41:\n                      _context8.t8 = 0;\n\n                    case 42:\n                      currentStreakSoFar = _context8.t8;\n                      _context8.next = 45;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 45:\n                      _context8.t9 = _context8.sent;\n\n                      if (!(_context8.t9 !== null)) {\n                        _context8.next = 50;\n                        break;\n                      }\n\n                      _context8.t10 = snapshot.val().lastDateExercised;\n                      _context8.next = 51;\n                      break;\n\n                    case 50:\n                      _context8.t10 = new Date().getDate();\n\n                    case 51:\n                      lastDateExercised = _context8.t10;\n                      _context8.next = 54;\n                      return _regeneratorRuntime.awrap(snapshot.val());\n\n                    case 54:\n                      _context8.t11 = _context8.sent;\n\n                      if (!(_context8.t11 !== null)) {\n                        _context8.next = 59;\n                        break;\n                      }\n\n                      _context8.t12 = snapshot.val().bestStreak;\n                      _context8.next = 60;\n                      break;\n\n                    case 59:\n                      _context8.t12 = 1;\n\n                    case 60:\n                      bestStreakSoFar = _context8.t12;\n\n                    case 61:\n                      dateNow = new Date().getDate();\n\n                      if (!(dateNow - lastDateExercised > 1 || currentStreakSoFar == 0)) {\n                        _context8.next = 67;\n                        break;\n                      }\n\n                      _context8.next = 65;\n                      return _regeneratorRuntime.awrap(progressRef.update({\n                        currentStreak: 1,\n                        bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n                        lastDateExercised: dateNow\n                      }));\n\n                    case 65:\n                      _context8.next = 70;\n                      break;\n\n                    case 67:\n                      if (!(dateNow - lastDateExercised === 1 || dateNow - lastDateExercised <= -26)) {\n                        _context8.next = 70;\n                        break;\n                      }\n\n                      _context8.next = 70;\n                      return _regeneratorRuntime.awrap(progressRef.update({\n                        currentStreak: currentStreakSoFar += 1,\n                        bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n                        lastDateExercised: dateNow\n                      }));\n\n                    case 70:\n                      if (!(bestStreakSoFar < currentStreakSoFar)) {\n                        _context8.next = 73;\n                        break;\n                      }\n\n                      _context8.next = 73;\n                      return _regeneratorRuntime.awrap(progressRef.update({\n                        lastDateExercised: dateNow,\n                        bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n                        bestStreakDate: new Date().getDate(),\n                        bestStreakMonth: new Date().getMonth() + 1,\n                        bestStreakYear: new Date().getFullYear()\n                      }));\n\n                    case 73:\n                    case \"end\":\n                      return _context8.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var favRef = currUser && fireApp.database().ref(currUser.uid).child('favorites');\n  var favIds = [];\n\n  if (currUser) {\n    favRef.on(\"value\", function (snapshot) {\n      snapshot.forEach(function (node) {\n        favIds.push(node.val().id);\n      });\n    });\n  }\n\n  var toggleFavorite = function toggleFavorite() {\n    var databaseRef, key, favs;\n    return _regeneratorRuntime.async(function toggleFavorite$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!(currUser !== null)) {\n              _context10.next = 8;\n              break;\n            }\n\n            _context10.next = 3;\n            return _regeneratorRuntime.awrap(fireApp.database().ref(currUser.uid).child('favorites').push());\n\n          case 3:\n            databaseRef = _context10.sent;\n            key = databaseRef.key;\n            favs = [];\n            favRef.on(\"value\", function (snapshot) {\n              snapshot.forEach(function (node) {\n                favs.push(node.val().id);\n              });\n            });\n            favRef.once(\"value\", function (snapshot) {\n              console.log(favs);\n\n              if (!favs.includes(id)) {\n                databaseRef.set({\n                  \"id\": id\n                }).then(function () {\n                  return console.log(\"favorited video \" + id + \"!\");\n                });\n                toggleLike(favs.includes(id));\n              } else {\n                snapshot.forEach(function (child) {\n                  var exId = child.val().id;\n                  var key = child.key;\n\n                  if (id === exId) {\n                    fireApp.database().ref(currUser.uid).child(\"favorites/\" + key).remove().then(function () {\n                      return console.log(\"Unfavorited video \" + exId + \"!\");\n                    });\n                  }\n                });\n                toggleLike(!favs.includes(id));\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.log(\"fav ids: \" + favIds + \" and id: \" + id + \" = \" + favIds.includes(id));\n    setLiked(favIds.includes(id));\n  }, []);\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      liked = _useState30[0],\n      setLiked = _useState30[1];\n\n  var toggleLike = function toggleLike(bool) {\n    setLiked(bool);\n  };\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      bellMuted = _useState32[0],\n      setBellMuted = _useState32[1];\n\n  var bellMute = function bellMute() {\n    setBellMuted(!bellMuted);\n  };\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      musicMuted = _useState34[0],\n      setMusicMuted = _useState34[1];\n\n  var toggleMusic = function toggleMusic() {\n    setMusicMuted(!musicMuted);\n  };\n\n  var pause = function pause() {\n    toggleClock();\n    setPaused(!paused);\n  };\n\n  var audioPrefRef = currUser && fireApp.database().ref(currUser.uid).child('audioPreferences');\n\n  function toggleUserAudioPrefs(audioSource, state, setter) {\n    return _regeneratorRuntime.async(function toggleUserAudioPrefs$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (currUser) {\n              audioPrefRef.on('value', function _callee4(snapshot) {\n                return _regeneratorRuntime.async(function _callee4$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (snapshot.val() === null) {\n                          audioPrefRef.set({\n                            bellMuted: false,\n                            musicMuted: false\n                          });\n                        }\n\n                        if (!(audioSource === \"bell\")) {\n                          _context11.next = 6;\n                          break;\n                        }\n\n                        _context11.next = 4;\n                        return _regeneratorRuntime.awrap(audioPrefRef.update({\n                          bellMuted: !state\n                        }));\n\n                      case 4:\n                        _context11.next = 8;\n                        break;\n\n                      case 6:\n                        _context11.next = 8;\n                        return _regeneratorRuntime.awrap(audioPrefRef.update({\n                          musicMuted: !state\n                        }));\n\n                      case 8:\n                        console.log(state);\n                        _context11.next = 11;\n                        return _regeneratorRuntime.awrap(setter(!state));\n\n                      case 11:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  var _useState35 = useState(1.0),\n      _useState36 = _slicedToArray(_useState35, 2),\n      videoSpeed = _useState36[0],\n      setVideoSpeed = _useState36[1];\n\n  var _useState37 = useState(true),\n      _useState38 = _slicedToArray(_useState37, 2),\n      correctPitch = _useState38[0],\n      setCorrectPitch = _useState38[1];\n\n  var speeds = {\n    \"Slow\": 0.75,\n    \"Medium\": 1.0,\n    \"Fast\": 1.25\n  };\n\n  var renderSpeedOptions = function renderSpeedOptions() {\n    var options = [];\n\n    var _loop2 = function _loop2(speed) {\n      options.push(React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setVideoSpeed(speeds[speed]);\n          setCorrectPitch(false);\n          setTimeout(function () {\n            setCorrectPitch(true);\n          }, 100);\n        },\n        key: speed,\n        style: {\n          padding: 10,\n          paddingRight: 27,\n          paddingLeft: 27\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: \"Assistant-SemiBold\",\n          fontSize: 19,\n          color: \"white\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 9\n        }\n      }, speed)));\n    };\n\n    for (var speed in speeds) {\n      _loop2(speed);\n    }\n\n    return options;\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      resizeMode: \"cover\",\n      position: \"relative\",\n      zIndex: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 5\n    }\n  }, React.createElement(Video, {\n    source: cachedVideo,\n    volume: customVolume || 0.75,\n    isMuted: bellMuted,\n    resizeMode: \"cover\",\n    shouldPlay: !modalVisible && !exerciseFinished && !paused && isFocused,\n    isLooping: true,\n    style: {\n      width: width,\n      height: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }\n  }), isFocused ? React.createElement(StatusBar, {\n    hidden: false,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 20\n    }\n  }) : null, React.createElement(View, {\n    style: {\n      height: height * 0.67,\n      width: width,\n      position: \"absolute\",\n      top: height * 0.15,\n      zIndex: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 7\n    }\n  }, React.createElement(DoubleClick, {\n    singleTap: touchScreenToggleControls,\n    doubleTap: pause,\n    delay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: height * 0.67,\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 11\n    }\n  }))), React.createElement(Animated.View, {\n    style: {\n      height: height,\n      width: width,\n      position: \"absolute\",\n      opacity: overlayFade\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      borderColor: \"white\",\n      position: \"absolute\",\n      height: height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: height * 0.07,\n      zIndex: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: goBack,\n    style: {\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/screen-icons/back-arrow-white.png\"),\n    style: {\n      height: 20,\n      marginLeft: 0\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 15\n    }\n  }))), React.createElement(Animated.View, {\n    style: [{\n      position: \"absolute\",\n      bottom: height * 0.18,\n      width: width\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 13\n    }\n  }, displayTimerDuration ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-Regular\",\n      fontSize: 35,\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 17\n    }\n  }, mins + \":\" + leadingZero(secs)), React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-Regular\",\n      fontSize: 19,\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 17\n    }\n  }, \"Timer\")) : null)), React.createElement(Animated.View, {\n    style: [{\n      position: \"absolute\",\n      bottom: height * 0.12,\n      width: width,\n      opacity: fadeAnim,\n      display: showTimerScroller ? \"none\" : \"flex\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-SemiBold\",\n      fontSize: 17,\n      color: \"white\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 13\n    }\n  }, \"Select Timer Duration\"), React.createElement(View, {\n    style: {\n      height: height < 600 ? height * 0.07 : height * 0.06,\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 15\n    }\n  }, renderTimerOptions()))), React.createElement(View, {\n    style: (_objectSpread({}, styles.borderControl), {\n      position: \"absolute\",\n      bottom: 0,\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      width: width,\n      height: height * 0.12\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: (styles.exerciseControls, {\n      padding: 13,\n      paddingLeft: 11\n    }),\n    onPress: toggleFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 13\n    }\n  }, liked ? React.createElement(Image, {\n    source: require(\"../assets/screen-icons/1-like-heart-filled.png\"),\n    resizeMode: \"contain\",\n    style: {\n      margin: 4,\n      height: 27,\n      width: 27\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 15\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/screen-icons/1-like-heart.png\"),\n    resizeMode: \"contain\",\n    style: {\n      margin: 4,\n      height: 27,\n      width: 27\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: (styles.exerciseControls, {\n      padding: 13\n    }),\n    onPress: bellMute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 13\n    }\n  }, bellMuted ? React.createElement(Image, {\n    source: require(\"../assets/screen-icons/2-bell-muted.png\"),\n    resizeMode: \"contain\",\n    style: {\n      height: 38,\n      width: 38\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 15\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/screen-icons/2-bell-toggle-2.png\"),\n    resizeMode: \"contain\",\n    style: {\n      height: 38,\n      width: 38\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 16\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: (styles.exerciseControls, {\n      padding: 13\n    }),\n    onPress: toggleMusic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 13\n    }\n  }, musicMuted ? React.createElement(Image, {\n    source: require(\"../assets/screen-icons/3-music-muted-2.png\"),\n    resizeMode: \"contain\",\n    style: {\n      marginTop: 3,\n      height: 32,\n      width: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 15\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../assets/screen-icons/3-music-note.png\"),\n    resizeMode: \"contain\",\n    style: {\n      marginTop: 3,\n      height: 32,\n      width: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: (styles.exerciseControls, {\n      padding: 13\n    }),\n    onPress: toggleShowTimerScroller,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/screen-icons/4-breathe-timer.png\"),\n    resizeMode: \"contain\",\n    style: {\n      marginTop: 5,\n      height: 30,\n      width: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 15\n    }\n  }))))), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: fromModalGoBack,\n    style: {\n      padding: 15,\n      width: width * 0.2,\n      position: \"absolute\",\n      top: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/screen-icons/back-arrow-white.png\"),\n    style: {\n      height: 20,\n      marginLeft: 0\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({\n      backgroundColor: \"white\",\n      height: height * 0.74,\n      borderRadius: 20,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      width: width * 0.9\n    }, styles.modalView),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 380 ? width * 0.69 : width * 0.63,\n      height: height * 0.45,\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: modalIcon,\n    style: {\n      height: iconHeight || 31\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-SemiBold\",\n      fontSize: height < 600 ? 20 : height < 700 ? 23 : 28,\n      textAlign: \"center\",\n      width: 205\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 15\n    }\n  }, \"Inhale, Hold, Exhale, Repeat\"), modalText == \"dailyExhale\" ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 19\n    }\n  }, \"Welcome to your Daily Exhale.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 19\n    }\n  }, \"This breathing exercise is designed to bring you stress-relief and inner peace.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 19\n    }\n  }, \"We\\u2019ll start you off today with a 2-minute timer.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 19\n    }\n  }, \"You can adjust the timer and other settings by tapping on the screen.\")) : modalText == \"eveningWindDown\" ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 19\n    }\n  }, \"Welcome to your Evening Wind-Down.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 19\n    }\n  }, \"This breathing exercise is designed to bring you stress-relief and inner peace.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 19\n    }\n  }, \"We\\u2019ll start you off this evening with a 2-minute timer. \"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 19\n    }\n  }, \"You can adjust the timer and other settings by tapping on the screen.\")) : uniqueImgEvening && uniqueImgEvening !== null ? React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 19\n    }\n  }, \"This breathing exercise is will help you wind down for a restful night\\u2019s sleep.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 19\n    }\n  }, \"You can watch the screen, or simply listen to the bell sound as you take deep breaths.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 19\n    }\n  }, \"Tap anywhere on the screen to view controls or return back to home.\")) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 19\n    }\n  }, \"This breathing exercise is designed to bring you calmness, relaxation, and inner peace.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 19\n    }\n  }, \"Repeat the loop at least 6 times for maximum benefit, or set a timer to make it a full session.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 19\n    }\n  }, \"Tap anywhere on the screen to view controls or return back to home.\"))), React.createElement(AppButton, {\n    title: \"Start\",\n    buttonStyles: _objectSpread({}, styles.blueButton),\n    buttonTextStyles: styles.buttonText,\n    onPress: startExercise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 51,\n    width: 234,\n    borderRadius: 17,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowRadius: 7,\n    shadowColor: \"black\",\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      width: 3,\n      height: 3\n    }\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 22,\n    letterSpacing: 1,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  modalView: {\n    margin: 20,\n    marginTop: height * 0.15,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    justifyContent: height < 600 ? \"space-between\" : height < 700 ? \"space-around\" : \"space-evenly\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  exerciseControls: {\n    padding: 10,\n    height: 50,\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  borderControl: {\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  modalTextStyle: {\n    fontFamily: \"Assistant-Regular\",\n    fontSize: height < 600 ? 14 : 16,\n    textAlign: \"center\"\n  }\n});\n\nfunction useInterval(callback, delay) {\n  var savedCallback = useRef();\n  var intervalId = useRef(null);\n\n  var _useState39 = useState(delay),\n      _useState40 = _slicedToArray(_useState39, 2),\n      currentDelay = _useState40[0],\n      setDelay = _useState40[1];\n\n  var toggleRunning = useCallback(function () {\n    return setDelay(function (currentDelay) {\n      return currentDelay === null ? delay : null;\n    });\n  }, [delay]);\n  var clear = useCallback(function () {\n    return clearInterval(intervalId.current);\n  }, []);\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (intervalId.current) clear();\n\n    if (currentDelay !== null) {\n      intervalId.current = setInterval(tick, currentDelay);\n    }\n\n    return clear;\n  }, [currentDelay, clear]);\n  return [toggleRunning, !!currentDelay, clear];\n}","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/components/ExerciseVideo.jsx"],"names":["React","useEffect","useState","useRef","useContext","useCallback","useFonts","useIsFocused","useKeepAwake","AuthContext","AppButton","DoubleClick","SplashScreen","Audio","Video","PitchCorrectionQuality","setAudioModeAsync","fireApp","AsyncStorage","Dimensions","get","width","height","ExerciseVideo","route","navigation","isFocused","require","fontsLoaded","params","id","videoFile","videoUrl","cachedVideo","modalIcon","iconHeight","autoCountDown","customVolume","noFinishBell","modalText","uniqueImgEvening","signOut","userToken","userFirstName","modalVisible","setModalVisible","exerciseFinished","setExerciseFinished","paused","setPaused","videoBellVolume","setVideoBellVolume","bellVolume","setBellVolume","showTimerScroller","setShowTimerScroller","displayTimerDuration","setDisplayTimerDuration","overlay","setOverlay","sessionSecs","setSessionSecs","fadeAnim","Animated","Value","current","overlayFade","fade","timing","toValue","duration","useNativeDriver","start","overlayFader","lastPress","handlePress","time","Date","getTime","delta","DOUBLE_PRESS_DELAY","handleDoublePress","touchScreenToggleControls","console","log","pause","handleSinglePress","toggleShowTimerScroller","timerDuration","mins","setMins","secs","setSecs","timerRunning","setTimerRunning","setTimerDuration","timerDurationsOptions","renderTimerOptions","options","push","pressTimerChoice","padding","paddingRight","paddingLeft","fontFamily","fontSize","color","runningClock","toggleClock","runAutoCountDown","clearInterval","exerciseInterv","startExercise","incrementStreak","useInterval","runExerciseClock","clear","updateUserTime","incrementSessionsCompleted","Alert","alert","text","onPress","keepGoing","style","goBack","loadFinishedSound","bellSound","unloadAsync","playingAudio","stopAsync","leadingZero","volumeOn","setVolumeOn","fadeBellVolume","fadeEffect","setInterval","Sound","music","playsInSilentModeIOS","loadAsync","playAsync","loadAndPlayMusic","setIsMutedAsync","musicMuted","pauseAsync","currUser","auth","currentUser","progressRef","database","ref","uid","child","incrementUserTime","once","snapshot","timeSoFar","val","practiceTime","update","set","sessionsCompleted","currentStreak","bestStreak","fromModalGoBack","lastDateExercised","getDate","bestStreakDate","bestStreakMonth","getMonth","bestStreakYear","getFullYear","sessionsCompletedSoFar","currentStreakSoFar","bestStreakSoFar","dateNow","Math","max","favRef","favIds","on","forEach","node","toggleFavorite","databaseRef","key","favs","includes","then","toggleLike","exId","remove","setLiked","liked","bool","bellMuted","setBellMuted","bellMute","setMusicMuted","toggleMusic","audioPrefRef","toggleUserAudioPrefs","audioSource","state","setter","videoSpeed","setVideoSpeed","correctPitch","setCorrectPitch","speeds","renderSpeedOptions","speed","setTimeout","flex","resizeMode","position","zIndex","top","opacity","borderColor","flexDirection","alignItems","marginTop","marginLeft","bottom","textAlign","display","justifyContent","styles","borderControl","exerciseControls","margin","backgroundColor","borderRadius","modalView","modalTextStyle","blueButton","buttonText","StyleSheet","create","shadowRadius","shadowColor","shadowOpacity","shadowOffset","letterSpacing","elevation","borderWidth","callback","delay","savedCallback","intervalId","currentDelay","setDelay","toggleRunning","tick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useContext, useCallback } from 'react';\nimport { Text, Modal, View, ScrollView, StatusBar, Alert, Image, Pressable, Dimensions, StyleSheet, TouchableOpacity, TouchableHighlight, TouchableWithoutFeedback, Animated, AppState } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { useIsFocused } from '@react-navigation/native';\nimport { useKeepAwake } from 'expo-keep-awake';\nimport { AuthContext } from '../components/context';\nimport AppButton from './AppButton';\nimport DoubleClick from 'react-native-double-tap';\n\nimport * as SplashScreen from 'expo-splash-screen';\n// const bgImage = require('../assets/splash/memoir-splash-thin-4x.png');\n\nimport { Audio, Video } from 'expo-av';\nimport { PitchCorrectionQuality, setAudioModeAsync } from 'expo-av/build/Audio';\n\nimport { fireApp } from '../firebase';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function ExerciseVideo({ route, navigation }) {\n  useKeepAwake();\n  \n  // useEffect(() => {\n  //   SplashScreen.preventAutoHideAsync();\n  //   setTimeout(() => {\n  //     SplashScreen.hideAsync();\n  //   }, 300);\n  // }, [])\n\n  const isFocused = useIsFocused();\n\n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n\n  const { id, videoFile, videoUrl, cachedVideo, modalIcon, iconHeight, autoCountDown, customVolume, noFinishBell, modalText, uniqueImgEvening } = route.params;\n\n  const { signOut, userToken, userFirstName } = useContext(AuthContext);\n\n  const [modalVisible, setModalVisible] = useState(true);\n  const [exerciseFinished, setExerciseFinished] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const [videoBellVolume, setVideoBellVolume] = useState(0.0);\n  const [bellVolume, setBellVolume] = useState(\"1.0\");\n  const [showTimerScroller, setShowTimerScroller] = useState(true);\n  const [displayTimerDuration, setDisplayTimerDuration] = useState(false);\n  const [overlay, setOverlay] = useState(true);\n  const [sessionSecs, setSessionSecs] = useState(0);\n\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const overlayFade = useRef(new Animated.Value(0)).current;\n\n  const fade = () => {\n    Animated.timing(fadeAnim, {\n      toValue: showTimerScroller ? 1 : 0,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  };\n\n  const overlayFader = () => {\n    Animated.timing(overlayFade, {\n      toValue: overlay ? 1 : 0,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  };\n\n\n  let lastPress = null;\n  const handlePress = () => {\n    \n    const time = new Date().getTime();\n    const delta = time - lastPress;\n    const DOUBLE_PRESS_DELAY = 400;\n  \n\n    if (lastPress && delta < DOUBLE_PRESS_DELAY) {\n      handleDoublePress();\n    } else {\n      touchScreenToggleControls();\n      console.log('single press!')\n      lastPress = time;\n    }  \n  }\n\n  const handleDoublePress = () => {\n    console.log(\"double pressed!\");\n    pause();\n  }\n\n  const handleSinglePress = () => {\n    touchScreenToggleControls();\n  }\n\n\n  const touchScreenToggleControls = () => {\n    setOverlay(!overlay);\n    overlayFader();\n  }\n\n\n  const toggleShowTimerScroller = () => {\n    if (displayTimerDuration) {\n      setDisplayTimerDuration(false);\n    }\n    if (!showTimerScroller && timerDuration) {\n      setDisplayTimerDuration(true);\n    }\n    setShowTimerScroller(!showTimerScroller);\n    fade();\n  }\n\n\n  const [ mins, setMins ] = useState(1);\n  // const [ mins, setMins ] = useState(0);\n  const [ secs, setSecs ] = useState(5);\n\n  const [ timerRunning, setTimerRunning ] = useState(false);\n  const [ timerDuration, setTimerDuration ] = useState(null);\n\n  const timerDurationsOptions = {\n    // \"30s\": {mins: 0, secs: 2},\n    \"30s\": {mins: 0, secs: 30},\n    \"1m\": {mins: 1, secs: 0},\n    \"2m\": {mins: 2, secs: 0},\n    \"3m\": {mins: 3, secs: 0},\n    \"5m\": {mins: 5, secs: 0},\n    \"10m\": {mins: 10, secs: 0},\n    \"15m\": {mins: 15, secs: 0},\n    \"20m\": {mins: 20, secs: 0},\n    \"30m\": {mins: 30, secs: 0},\n  };\n\n  const renderTimerOptions = () => {\n    const options = [];\n    for (let time in timerDurationsOptions) {\n      options.push(\n        <TouchableOpacity \n          onPress={() => pressTimerChoice(time)}\n          key={time} \n          style={{ padding: 10, paddingRight: 27, paddingLeft: 27 }}\n        >\n          <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: 19, color: \"white\"}}>{time}</Text>\n        </TouchableOpacity>\n      )\n    }\n    return options;\n  };\n\n  const pressTimerChoice = (time) => {\n    setTimerDuration(timerDurationsOptions[time]);\n    setDisplayTimerDuration(true);\n    toggleShowTimerScroller();\n    setTimerRunning(true);\n    if (!runningClock) {\n      toggleClock();\n    }\n  };\n\n  const runAutoCountDown = (time) => {\n    setTimerDuration(timerDurationsOptions[time]);\n    setDisplayTimerDuration(true);\n    // toggleShowTimerScroller();\n    setTimerRunning(true);\n  }\n\n\n  useEffect(() => {\n    if (timerDuration) {\n      setMins(timerDuration[\"mins\"])\n      setSecs(timerDuration[\"secs\"])\n      // console.log(\"current mins: \" + timerDuration[\"mins\"])\n      // toggleClock();\n      console.log(\"mins: \" + mins);\n      console.log(\"secs: \" + secs);\n    }\n  }, [timerDuration]);\n\n  \n  useEffect(() => {\n    if (runningClock) toggleClock();\n    // MOUNT\n    // console.log(\"exercise screen mounted!\");\n    // console.log(`Video File: ${videoFile}`);\n\n    // UNMOUNT\n    return () => clearInterval(exerciseInterv.current);\n  }, []);\n\n\n\n  const startExercise = () => {\n    setModalVisible(!modalVisible);\n    console.log(\"exercise started!\");\n    incrementStreak();\n    if (!runningClock && autoCountDown) toggleClock();\n  }\n\n\n  const exerciseInterv = useRef(null);\n  useEffect(() => {\n    if (exerciseInterv.current) clearInterval(exerciseInterv.current);\n    if (timerDuration) {\n      // console.log(\"timerDuration!\");\n      if (paused) setTimerRunning(false);\n      else setTimerRunning(true);\n    }\n    if (timerRunning) {\n      // console.log(\"timerRunning: \" + timerRunning);\n      // console.log(\"tracked sessionSecs: \" + sessionSecs);\n      setExerciseFinished(false);\n      // exerciseInterv.current = setInterval( async () => runExerciseClock(), 1000);\n    } \n    if (!timerRunning) {\n      clearInterval(exerciseInterv.current);\n    }\n    // console.log(\"runningClock\", runningClock);\n  })\n\n\n  const [toggleClock, runningClock, clear] = useInterval(() => {\n    runExerciseClock();\n  }, 1000);\n\n  \n  // COUNTDOWN for Exercise vids\n  const runExerciseClock = () => {\n    if (secs > 0) {\n      setSecs(secs - 1);\n    } else if (mins >= 1 && secs == 0) {\n      setSecs(59);\n      setMins(mins - 1);\n    } else {\n      updateUserTime();\n      incrementSessionsCompleted();\n      setTimerDuration(null);\n      setTimerRunning(false);\n      setExerciseFinished(true);\n      clear();\n      Alert.alert(\"Timer Complete\", \"Great job, you’ve completed your breath work session!\", [\n        {text: \"Keep Going\", onPress: () => keepGoing()}, \n        {text: \"Finish\", style: \"cancel\", onPress: () => navigation.goBack()}\n      ]);\n      // setBellMuted(true);\n      touchScreenToggleControls();\n      console.log('else hit! Finished!');\n      loadFinishedSound();\n      clearInterval(exerciseInterv.current);\n      bellSound.unloadAsync();\n      playingAudio.current.stopAsync();\n      // setTimeout(() => {\n      //   navigation.navigate(\"Memoir\");\n      // }, 2000);\n    }\n    console.log(\"runExerciseClock sessionSecs: \" + sessionSecs);\n    setSessionSecs(sessionSecs => sessionSecs += 1);\n  }\n\n  // Add leading zero to numbers 9 or below (purely for aesthetics):\n  function leadingZero(time) {\n    if (time <= 9) {\n        time = \"0\" + time;\n    }\n    return time;\n}\n  \n\nfunction keepGoing() {\n  setDisplayTimerDuration(false);\n  setExerciseFinished(false);\n  toggleClock();\n}\n\n\n\n\n  \n  // // inactivity, hide the overlay controls - DIDN'T WORK\n  // // https://codedaily.io/tutorials/140/How-to-Detect-Touch-Inactivity-with-a-PanResponder-in-React-Native\n  \n  // const [inactive, setInactive] = useState(true);\n  // let inactiveTimeout;\n  // const [panResponder, setPanresponder] = useState();\n\n  // useEffect(() => {\n  //   const panResponder = PanResponder.create({\n  //     onMoveShouldSetPanResponderCapture: () => {\n  //       clearTimeout(inactiveTimeout)\n  //       setInactive(inactive => {\n  //         if (!inactive) return null;\n  //         return false;\n  //       });\n  //       inactiveTimeout = setTimeout(() => {\n  //         setInactive(true);\n  //       }, 3000);\n  //       return false;\n  //     }\n  //   })\n  //   setPanresponder(panResponder)\n  //   console.log(\"inactive: \" + inactive)\n  //   console.log(JSON.stringify({...panResponder.panHandlers}))\n  //   return () => clearTimeout(inactiveTimeout)\n  // },)\n\n\n\n\n\n  // const fadeBellVolume = () => {\n  //   const fadeEffect = setInterval(() => {\n  //     if (videoBellVolume < 1.0) {\n  //       setVideoBellVolume(videoBellVolume => videoBellVolume + 0.1);\n  //       clearInterval(fadeEffect);\n  //     } else {\n  //       clearInterval(fadeEffect);\n  //     }\n  //     console.log(videoBellVolume);\n  //     clearInterval(fadeEffect);\n  //   }, 200);\n  // }\n\n  const [volumeOn, setVolumeOn] = useState(false);\n\n  // const fadeBellVolume = () => {\n  //   bellVolume = volumeOn ? 1.0 : 0.0;\n  //   setVolumeOn(!volumeOn);\n  //   const fadeEffect = setInterval(() => {\n  //     if (!volumeOn) {\n  //       if (bellVolume < 1.0) {\n  //         bellVolume = bellVolume + 0.1;\n  //       } else {\n  //         clearInterval(fadeEffect);\n  //       }\n  //     }\n  //     if (volumeOn) {\n  //       if (bellVolume > 0.0) {\n  //         bellVolume = bellVolume - 0.1;\n  //       } else {\n  //         clearInterval(fadeEffect);\n  //       }\n  //     }\n  //     console.log(bellVolume);\n  //     console.log(volumeOn);\n  //   }, 50);\n  // };\n\n\n  // LAST ATTEMPT: https://stackblitz.com/edit/react-rj8nrb https://docs.expo.io/versions/latest/sdk/video/ \n  const fadeBellVolume = () => {\n    setVolumeOn(!volumeOn);\n\n    // volumeOn ? setBellVolume(\"1.0\") : setBellVolume(\"0.0\");\n    // if (bellVolume > 1.0) clearInterval(fadeEffect);\n    // if (bellVolume < 0.0) clearInterval(fadeEffect);\n    const fadeEffect = setInterval(() => {\n      if (!volumeOn) {\n        if (bellVolume > 0) {\n          setBellVolume(bellVolume => bellVolume - 0.1);\n        } else {\n          clearInterval(fadeEffect);\n          // setVolumeOn(!volumeOn);\n        }\n      }\n\n      if (volumeOn) {\n        if (bellVolume < 1) {\n          setBellVolume(bellVolume => bellVolume + 0.1);\n        } else {\n          clearInterval(fadeEffect);\n          // setVolumeOn(!volumeOn);\n        }\n      }\n    }, 500);\n    // if (fadeEffect) clearInterval(fadeEffect);\n  };\n\n\n\n\n\n\n\n\n\n\n  // MAY BE USEFUL FOR MUSIC / WHITE NOISE audio\n  // BELL SOUND - useInterval()\n  const bellSound = new Audio.Sound();\n  const music = new Audio.Sound();\n  Audio.setAudioModeAsync({playsInSilentModeIOS: true});\n\n  const playingAudio = useRef();\n\n  const loadFinishedSound = async () => {\n    if (noFinishBell) return;\n    try {\n      await bellSound.loadAsync(require('../assets/audio/meditation-finished-sound.mp3'));\n      await bellSound.playAsync();\n      console.log(\"load sound!\");\n    } catch (error) {\n      console.log(error);\n    }\n    // // https://docs.expo.io/versions/latest/sdk/audio/?redirected#parameters\n  }\n\n  const loadAndPlayMusic = async () => {\n    try {\n      await music.loadAsync(require('../assets/audio/bg-music.mp3'));\n      await music.playAsync();\n      playingAudio.current = music;\n      // console.log(\"music loaded and playing!\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    if (!modalVisible && !exerciseFinished && !paused) {\n      loadAndPlayMusic();\n      if (autoCountDown) {\n        console.log(\"autoCountdown!\", autoCountDown);\n        runAutoCountDown(autoCountDown);\n      }\n    }\n    return () => music.unloadAsync();\n  }, [modalVisible]);\n\n\n  useEffect(() => {\n    if (playingAudio.current && !exerciseFinished) {\n      playingAudio.current.setIsMutedAsync(musicMuted);\n      if (paused) {\n        playingAudio.current.pauseAsync();\n      } else {\n        // loadAndPlayMusic();\n        playingAudio.current.playAsync();\n      }\n    }\n  });\n\n\n\n\n\n\n\n\n\n  const currUser = fireApp.auth().currentUser;\n  const progressRef = currUser ? fireApp.database().ref(currUser.uid).child('progress') : null;\n\n  // Increment User Practice Time - THIS WAY POST REQUESTS THE DB EVERY SECOND. NOT OPTIMAL\n  async function incrementUserTime() {\n    if (currUser) {\n      let timeSoFar;\n      progressRef.once('value', snapshot => {\n        timeSoFar = snapshot.val().practiceTime;\n      })\n\n      await progressRef.update({\n        practiceTime: timeSoFar += sessionSecs\n      })\n    }\n  }\n\n\n  // WITH SAFETY CHECK ADDED - for users with no existing progress data objects\n  // INSTEAD OF DB POST REQUESTING EVERY SECOND with incrementUserTime(), THIS INCREMENTS LOCALLY, THEN WHEN USER FINISHES EXERCISE WITH ALERT POPUP ORRR UNMOUNTS EXERCISE, THEN UPDATE THE PRACTICE TIME BY ADDING THE SO FAR WITH THIS LOCALLY INCREMENTED SECONDS TRACKER.\n  async function updateUserTime() {\n    if (currUser ) {\n      let timeSoFar;\n      await progressRef.once('value', async snapshot => {\n        if (snapshot.val() === null) {\n          progressRef.set({\n            practiceTime: 0,\n            sessionsCompleted: 0,\n            currentStreak: 0,\n            bestStreak: 0\n          })\n          timeSoFar = await snapshot.val() !== null ? snapshot.val().practiceTime : 0;\n        } else {\n          timeSoFar = await snapshot.val() !== null ? snapshot.val().practiceTime : 0;\n        }\n\n        await progressRef.update({\n          practiceTime: timeSoFar += sessionSecs\n        })\n      })\n\n      setSessionSecs(0);\n    } \n  }\n\n  // // DOES NOT WORK after it's unmounted.\n  // useEffect(() => {\n  //   return () => updateUserTime()\n  // }, [])\n\n  const goBack = () => {\n    updateUserTime();\n    navigation.goBack();\n  }\n  \n  \n  const fromModalGoBack = () => {\n    navigation.goBack();\n    setModalVisible(!modalVisible);\n  }\n\n\n\n  // // AppState attempt for when user leaves app, NOT WORKING\n  // const appState = useRef(AppState.currentState);\n  // const [appStateVisible, setAppStateVisible] = useState(appState.current);\n\n  // useEffect(() => {\n  //   AppState.addEventListener(\"change\", _handleAppStateChange);\n  //   return () => AppState.removeEventListener(\"change\", _handleAppStateChange);\n  // }, []);\n\n  // const _handleAppStateChange = (nextAppState) => {\n  //   if (\n  //     appState.current.match(/inactive|background/) && \n  //     nextAppState === \"active\"\n  //   ) {\n  //     console.log(\"App has come to the foreground!\");\n  //   }\n  //   appState.current = nextAppState;\n  //   setAppStateVisible(appState.current);\n  //   console.log(\"AppState\", appState.current);\n  //   console.log(appStateVisible)\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n  // WITH SAFETY CHECK ADDED - for users with no existing progress data objects\n  // Increment sessions user completed - triggers when that 'finish' popup modal comes out\n  async function incrementSessionsCompleted() {\n    if (currUser) {\n      let sessionsCompletedSoFar;\n      await progressRef.once('value', async snapshot => {\n        if (snapshot.val() === null) {\n          progressRef.set({\n            practiceTime: 0,\n            sessionsCompleted: 0,\n            currentStreak: 0,\n            bestStreak: 0,\n            lastDateExercised: new Date().getDate(),\n            bestStreakDate: new Date().getDate(),\n            bestStreakMonth: new Date().getMonth() + 1,\n            bestStreakYear: new Date().getFullYear()\n          })\n          sessionsCompletedSoFar = await snapshot.val() !== null ? snapshot.val().sessionsCompleted : 0;\n        } else {\n          sessionsCompletedSoFar = await snapshot.val() !== null ? snapshot.val().sessionsCompleted : 0;\n        }\n\n        await progressRef.update({\n          sessionsCompleted: sessionsCompletedSoFar += 1\n        })\n      });\n    }\n  };\n\n\n\n  // WITH SAFETY CHECK ADDED - for users with no existing progress data objects\n  // Increment current and best streaks - triggers when blue 'Start' button is pressed\n  const incrementStreak = async () => {\n    if (currUser ) {\n      let currentStreakSoFar;\n      let lastDateExercised;\n      let bestStreakSoFar;\n\n      await progressRef.once('value', async snapshot => {\n        if (await snapshot.val() === null) {\n          progressRef.set({\n            practiceTime: 0,\n            sessionsCompleted: 0,\n            currentStreak: 1,\n            bestStreak: 1,\n            lastDateExercised: new Date().getDate(),\n            bestStreakDate: new Date().getDate(),\n            bestStreakMonth: new Date().getMonth() + 1,\n            bestStreakYear: new Date().getFullYear()\n          })\n          currentStreakSoFar = await snapshot.val() !== null ? snapshot.val().currentStreak : 0;\n          lastDateExercised = await snapshot.val() !== null ? snapshot.val().lastDateExercised : new Date().getDate();\n          bestStreakSoFar = await snapshot.val() !== null ? snapshot.val().bestStreak : 1;\n        } else {\n          currentStreakSoFar = await snapshot.val() !== null ? snapshot.val().currentStreak : 0;\n          lastDateExercised = await snapshot.val() !== null ? snapshot.val().lastDateExercised : new Date().getDate();\n          bestStreakSoFar = await snapshot.val() !== null ? snapshot.val().bestStreak : 1;\n        }\n\n        let dateNow = new Date().getDate();\n        // let dateNow = 24;\n\n        if (dateNow - lastDateExercised > 1 || currentStreakSoFar == 0) {\n          await progressRef.update({\n            currentStreak: 1,\n            bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n            lastDateExercised: dateNow\n          })\n        } else if (dateNow - lastDateExercised === 1 || dateNow - lastDateExercised <= -26) {\n          await progressRef.update({\n            currentStreak: currentStreakSoFar += 1,\n            bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n            lastDateExercised: dateNow\n          })\n        }\n\n        if (bestStreakSoFar < currentStreakSoFar) {\n          await progressRef.update({\n            lastDateExercised: dateNow,\n            bestStreak: Math.max(bestStreakSoFar, currentStreakSoFar),\n            bestStreakDate: new Date().getDate(),\n            bestStreakMonth: new Date().getMonth() + 1,\n            bestStreakYear: new Date().getFullYear()\n          })\n        }\n\n      });\n    } \n  }\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  // DATE OBJECT for 24 hour attempt\n  // https://stackoverflow.com/questions/51405133/check-if-a-date-is-24-hours-old/51405252\n\n  // let now = Date.now();\n  // console.log(now)\n  // let oneDay = new Date().getTime() + (1 * 24 * 60 * 60 * 1000);\n  // console.log(oneDay)\n\n\n\n\n\n  // const fakeAddProgressData = async () => {\n  //   const progressPushRef = await firebase.database().ref(currUser.uid).child('progress');\n\n  //   progressPushRef.set({\n  //     practiceTime: 2.7,\n  //     sessionsCompleted: 21,\n  //     currentStreak: 5,\n  //     bestStreak: 7\n  //   })\n  // }\n\n\n\n\n\n  const favRef = currUser && fireApp.database().ref(currUser.uid).child('favorites');\n\n  let favIds = [];\n  if (currUser) {\n    favRef.on(\"value\", snapshot => {\n      snapshot.forEach(node => {\n        favIds.push(node.val().id)\n      })\n      // console.log(\"favIds includes the id!\" + favIds.includes(id))\n    })\n  }\n\n  const toggleFavorite = async () => {\n    \n    // get a unique key\n    if (currUser !== null) {\n      const databaseRef = await fireApp.database().ref(currUser.uid).child('favorites').push();\n      const key = databaseRef.key\n      \n      // databaseRef.set({\n      //   \"id\": id,\n      //   // \"videoFile\": videoFile\n      // }).then(() => console.log(`added video ${id}`))\n\n      let favs = [];\n      favRef.on(\"value\", snapshot => {\n        snapshot.forEach(node => {\n          favs.push(node.val().id)\n        })\n        // console.log(favs.includes(id))\n      })\n      \n      favRef.once(\"value\", (snapshot) => {\n        \n        // // // if no favs, add one:\n        // if (snapshot.numChildren() == 0) {\n        //   databaseRef.set({\n        //     \"id\": id,\n        //   }).then(() => console.log(`added video ${id}`))\n        // }\n\n        // if vidID not found in database, add it\n        console.log(favs);\n        if (!favs.includes(id)) {\n          databaseRef.set({\n            \"id\": id,\n          }).then(() => console.log(`favorited video ${id}!`))\n          toggleLike(favs.includes(id))\n        } else {\n        // Remove from favorites\n          snapshot.forEach(child => {\n            let exId = child.val().id\n            let key = child.key;\n  \n            // console.log(key);\n            if (id === exId) {\n              fireApp.database().ref(currUser.uid).child(`favorites/${key}`).remove().then(() => console.log(`Unfavorited video ${exId}!`))\n            }\n          })\n          toggleLike(!favs.includes(id))\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n    console.log(`fav ids: ${favIds} and id: ${id} = ${favIds.includes(id)}`);\n    setLiked(favIds.includes(id));\n\n    // return () => favRef.off()\n  }, [])\n\n\n\n  const [liked, setLiked] = useState(false);\n  const toggleLike = (bool) => {\n    // setLiked(!liked);\n    setLiked(bool);\n  }\n\n\n\n\n\n\n\n  // simple bell mute function\n  const [bellMuted, setBellMuted] = useState(false);\n  const bellMute = () => {\n    setBellMuted(!bellMuted);\n  }\n\n  // // Failed asyncStorage bell pref attempt: \n  // const storePref = async (storageKey, value) => {\n  //   try {\n  //     await AsyncStorage.setItem(storageKey, String(value))\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   setTimeout(async () => {\n  //     try {\n  //       const pref = await AsyncStorage.getItem('bellMuted')\n  //       if (pref !== null) setBellMuted(pref);\n  //       console.log(\"pref:\", pref);\n  //     } catch (error) {\n  //       console.log(error)\n  //     }\n  //   }, 0);\n  // }, []);\n\n  // useEffect(() => {\n  //   setTimeout(async () => {\n  //     storePref('bellMuted', bellMuted);\n  //   }, 0);\n  //   console.log(\"Bell Muted:\", bellMuted)\n  // }, [bellMuted]);\n\n\n\n  const [musicMuted, setMusicMuted] = useState(false);\n  const toggleMusic = () => {\n    setMusicMuted(!musicMuted);\n    // toggleUserAudioPrefs(\"music\", musicMuted, setMusicMuted);\n  }\n\n  const pause = () => {\n    toggleClock();\n    setPaused(!paused);\n  }\n\n\n  // ATTEMPT #1 for user specfic mute preferences\n  const audioPrefRef = currUser && fireApp.database().ref(currUser.uid).child('audioPreferences');\n  async function toggleUserAudioPrefs(audioSource, state, setter) {\n    if (currUser) {\n      // let audioPreference;\n      audioPrefRef.on('value', async snapshot => {\n        if (snapshot.val() === null) {\n          audioPrefRef.set({\n            bellMuted: false,\n            musicMuted: false,\n          })\n          // audioPreference = await snapshot.val() !== null && audioSource == \"bell\" ? snapshot.val().bellMuted : \n          //                   await snapshot.val() !== null && audioSource == \"music\" ? snapshot.val().musicMuted :\n          //                   false\n        } \n\n        audioSource === \"bell\" \n        ? \n        await audioPrefRef.update({\n          bellMuted: !state\n        })\n        :\n        await audioPrefRef.update({\n          musicMuted: !state\n        })\n        \n        console.log(state)\n        await setter(!state)\n      });\n    }\n  };\n\n\n\n  // console.log(\"video file: \" + JSON.stringify(videoFile))\n  // console.log(\"video url from firebase storage: \" + JSON.stringify(videoUrl))\n\n\n\n\n\n  // const _handleVideoRef = component => {\n  //   const playbackObject = component;\n  //   playbackObject.pitchCorrectionQuality.High\n  // }\n  \n  const [videoSpeed, setVideoSpeed] = useState(1.0);\n  const [correctPitch, setCorrectPitch] = useState(true);\n  const speeds = {\n    \"Slow\": 0.75,\n    \"Medium\": 1.0,\n    \"Fast\": 1.25,\n  };\n  const renderSpeedOptions = () => {\n    let options = [];\n    for (const speed in speeds) {\n      options.push(\n      <TouchableOpacity\n        onPress={() => {\n          setVideoSpeed(speeds[speed]);\n          setCorrectPitch(false);\n          setTimeout(() => {\n            setCorrectPitch(true);\n          }, 100);\n        }}\n        key={speed}\n        style={{ padding: 10, paddingRight: 27, paddingLeft: 27 }}\n      >\n        <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: 19, color: \"white\"}}>{speed}</Text>\n      </TouchableOpacity>\n      )\n    }\n    return options;\n  };\n\n  // useEffect(() => {\n  //   setCorrectPitch(true);\n  // }, [videoSpeed, renderSpeedOptions])\n\n\n\n  return (\n    \n    <View style={{ flex: 1, resizeMode: \"cover\", position: \"relative\", zIndex: -10,}} >\n      <Video\n        // source={ videoFile }\n        // source={{ uri: videoUrl }}\n        source={ cachedVideo }\n        volume={customVolume || 0.75}\n        isMuted={bellMuted}\n        // isMuted={true}\n        resizeMode=\"cover\"\n        shouldPlay={!modalVisible && !exerciseFinished && !paused && isFocused}\n        // shouldPlay={false}\n        isLooping\n        style={{ width: width, height: height }}\n        // rate={videoSpeed}\n        // shouldCorrectPitch={correctPitch}\n        // rate={1.5}\n      />\n      {isFocused ? <StatusBar hidden={false} barStyle=\"light-content\"/> : null} \n\n\n      {/* <TouchableWithoutFeedback \n        onPress={touchScreenToggleControls} \n        // onLongPress={pause}\n        onPressIn={() => setPaused(true)}\n        onPressOut={() => setPaused(false)}\n        delayPressIn={5}\n      >\n        <View \n          style={{ height: height * 0.67, width: width, position: \"absolute\", top: height * 0.15, zIndex: 10, }} \n        >\n        </View>\n      </TouchableWithoutFeedback> */}\n\n      {/* <Pressable \n        style={{ height: height * 0.67, width: width, position: \"absolute\", top: height * 0.15, zIndex: 10 }}\n        onPress={touchScreenToggleControls}\n        // onPress={handlePress}\n        // onLongPress={pause}\n        // onPressIn={() => setPaused(true)}\n        // onPressOut={() => setPaused(false)}\n\n        onTouchStart={() => setPaused(true)}\n        onTouchEnd={() => setPaused(false)}\n        // onTouchStart={() => console.log(\"pressed!\")}\n        // onTouchEnd={() => console.log(\"released!\")}\n      >\n      </Pressable> */}\n\n      <View style={{ height: height * 0.67, width: width, position: \"absolute\", top: height * 0.15, zIndex: 10,  }}>\n        <DoubleClick\n          singleTap={touchScreenToggleControls}\n          doubleTap={pause}\n          delay={300}\n        >\n          <View style={{ height: height * 0.67, width: width,  }}>\n          </View>\n        </DoubleClick>\n      </View>\n\n\n      <Animated.View style={{ height: height, width: width, position: \"absolute\", opacity: overlayFade }}>\n        <View style={{ borderColor: \"white\", position: \"absolute\", height: height}}>\n          <View style={{ width: width, flexDirection: \"row\", alignItems: \"center\", marginTop: height * 0.07, zIndex: 100}}>\n            <TouchableOpacity onPress={goBack} style={{ padding: 15, }}>\n              <Image source={require('../assets/screen-icons/back-arrow-white.png')} style={{height: 20, marginLeft: 0}} resizeMode=\"contain\"/>\n            </TouchableOpacity>\n\n            {/* {renderSpeedOptions()} */}\n\n          </View>\n\n          <Animated.View style={[ {position: \"absolute\", bottom: height * 0.18, width: width, } ]}>\n            <View>\n              {displayTimerDuration ? \n              <View>\n                <Text style={{fontFamily: \"Assistant-Regular\", fontSize: 35, color: \"white\", textAlign: \"center\"}}>{`${mins}:${leadingZero(secs)}`}</Text> \n                <Text style={{fontFamily: \"Assistant-Regular\", fontSize: 19, color: \"white\", textAlign: \"center\"}}>Timer</Text> \n              </View>\n              : null}\n            </View>\n          </Animated.View>\n\n          <Animated.View style={[ {position: \"absolute\", bottom: height * 0.12, width: width, opacity: fadeAnim, display: showTimerScroller ? \"none\" : \"flex\"}, ]}>\n            <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: 17, color: \"white\", textAlign: \"center\"}}>Select Timer Duration</Text>\n            <View style={{height: height < 600 ? height * 0.07 : height * 0.06, flexDirection: \"row\", justifyContent: \"space-evenly\", alignItems: \"center\"}}>\n              <ScrollView \n                horizontal={true} \n                showsHorizontalScrollIndicator={false}\n              >\n                {renderTimerOptions()}\n\n              </ScrollView>\n            </View>\n          </Animated.View>\n\n\n          <View style={{...styles.borderControl}, { position: \"absolute\", bottom: 0, flexDirection: \"row\", justifyContent: \"space-evenly\", width: width, height: height * 0.12 }}>\n            <TouchableOpacity style={styles.exerciseControls, {padding: 13, paddingLeft: 11} } onPress={ toggleFavorite }>\n              {liked ? \n              <Image source={require('../assets/screen-icons/1-like-heart-filled.png')} resizeMode=\"contain\" style={{margin: 4, height: 27, width: 27, }}/>\n              : <Image source={require('../assets/screen-icons/1-like-heart.png')} resizeMode=\"contain\" style={{margin: 4, height: 27, width: 27, }}/>\n              }\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.exerciseControls, {padding: 13, }} onPress={ bellMute }>\n              {bellMuted ? \n              <Image source={require('../assets/screen-icons/2-bell-muted.png')} resizeMode=\"contain\" style={{height: 38, width: 38,}}/>\n              :<Image source={require('../assets/screen-icons/2-bell-toggle-2.png')} resizeMode=\"contain\" style={{height: 38, width: 38, }}/>\n              }\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.exerciseControls, {padding: 13, }} onPress={ toggleMusic }>\n              {musicMuted ? \n              <Image source={require('../assets/screen-icons/3-music-muted-2.png')} resizeMode=\"contain\" style={{ marginTop: 3, height: 32, width: 32, }}/>\n              : <Image source={require('../assets/screen-icons/3-music-note.png')} resizeMode=\"contain\" style={{ marginTop: 3, height: 32, width: 32, }}/>\n              }\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.exerciseControls, {padding: 13, }} onPress={ toggleShowTimerScroller }>\n              <Image source={require('../assets/screen-icons/4-breathe-timer.png')} resizeMode=\"contain\" style={{ marginTop: 5, height: 30, width: 30, }}/>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Animated.View>\n      \n\n      \n\n      <View style={{flex: 1, justifyContent: \"center\", alignItems: \"center\", marginTop: 22}}>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => { Alert.alert(\"Modal has been closed.\") }}\n        >\n          \n          <TouchableOpacity onPress={fromModalGoBack} style={{ padding: 15, width: width * 0.2, position: \"absolute\", top: 50, }}>\n            <Image source={require('../assets/screen-icons/back-arrow-white.png')} style={{height: 20, marginLeft: 0}} resizeMode=\"contain\"/>\n          </TouchableOpacity>\n\n          <View style={{backgroundColor: \"white\", height: height * 0.74, borderRadius: 20, justifyContent: \"space-between\", alignItems: \"center\", width: width * 0.9, ...styles.modalView }}>\n            <View style={{width: width < 380 ? width * 0.69 : width * 0.63, height: height * 0.45, justifyContent: \"space-between\", alignItems: \"center\" }}>\n              <Image source={ modalIcon } style={{height: iconHeight || 31, }} resizeMode=\"contain\"/>\n              <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: height < 600 ? 20 : height < 700 ? 23 : 28, textAlign: \"center\", width: 205}}>Inhale, Hold, Exhale, Repeat</Text>\n              {\n                modalText == \"dailyExhale\" ? \n                <>\n                  <Text style={styles.modalTextStyle}>Welcome to your Daily Exhale.</Text>\n                  <Text style={styles.modalTextStyle}>This breathing exercise is designed to bring you stress-relief and inner peace.</Text>\n                  <Text style={styles.modalTextStyle}>We’ll start you off today with a 2-minute timer.</Text>\n                  <Text style={styles.modalTextStyle}>You can adjust the timer and other settings by tapping on the screen.</Text>\n                </>\n                : modalText == \"eveningWindDown\" ? \n                <>\n                  <Text style={styles.modalTextStyle}>Welcome to your Evening Wind-Down.</Text>\n                  <Text style={styles.modalTextStyle}>This breathing exercise is designed to bring you stress-relief and inner peace.</Text>\n                  <Text style={styles.modalTextStyle}>We’ll start you off this evening with a 2-minute timer. </Text>\n                  <Text style={styles.modalTextStyle}>You can adjust the timer and other settings by tapping on the screen.</Text>\n                </>\n                : \n                uniqueImgEvening && uniqueImgEvening !== null ? \n                <>\n                  <Text style={styles.modalTextStyle}>This breathing exercise is will help you wind down for a restful night’s sleep.</Text>\n                  <Text style={styles.modalTextStyle}>You can watch the screen, or simply listen to the bell sound as you take deep breaths.</Text>\n                  <Text style={styles.modalTextStyle}>Tap anywhere on the screen to view controls or return back to home.</Text>\n                </>\n                :\n                <>\n                  <Text style={styles.modalTextStyle}>This breathing exercise is designed to bring you calmness, relaxation, and inner peace.</Text>\n                  <Text style={styles.modalTextStyle}>Repeat the loop at least 6 times for maximum benefit, or set a timer to make it a full session.</Text>\n                  <Text style={styles.modalTextStyle}>Tap anywhere on the screen to view controls or return back to home.</Text>\n                </>\n              }\n            </View>\n            <AppButton \n              title=\"Start\" \n              buttonStyles={{...styles.blueButton, }}\n              buttonTextStyles={styles.buttonText}\n              onPress={startExercise}\n            />\n          </View>\n        </Modal>\n      </View>\n\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 51,\n    width: 234,\n    borderRadius: 17,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowRadius: 7,\n    shadowColor: \"black\",\n    shadowOpacity: 0.2,\n    shadowOffset: {width: 3, height: 3}\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 22,\n    letterSpacing: 1,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  modalView: {\n    margin: 20,\n    marginTop: height * 0.15,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    justifyContent: height < 600 ? \"space-between\" : height < 700 ? \"space-around\" : \"space-evenly\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  exerciseControls: {\n    padding: 10,\n    height: 50,\n    borderWidth: 1, borderColor: \"white\"\n  },\n  borderControl: {\n    borderWidth: 1, borderColor: \"white\"\n  },\n  modalTextStyle: {\n    fontFamily: \"Assistant-Regular\", \n    fontSize: height < 600 ? 14 : 16, \n    textAlign: \"center\",\n    // width: width * 0.51\n  }\n})\n\n\n\n\n\n\n// the callback was countDown() or loadSound()\n// toggle() is called whenever the pause and play button is pressed\n// useRef.current() to store a value that persists between renders. \n\n\n// useINTERVAL ATTEMPT\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  const intervalId = useRef(null);\n  const [currentDelay, setDelay] = useState(delay);\n\n  const toggleRunning = useCallback(\n    () => setDelay(currentDelay => (currentDelay === null ? delay : null)),\n    [delay]\n  );\n\n  const clear = useCallback(() => clearInterval(intervalId.current), []);\n\n  // Remember the latest function. Store it in the useRef().current\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (intervalId.current) clear();\n\n    if (currentDelay !== null) {\n      intervalId.current = setInterval(tick, currentDelay);\n    }\n\n    return clear;\n  }, [currentDelay, clear]);\n\n  return [toggleRunning, !!currentDelay, clear];\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/BreatheScreen.jsx\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { Asset } from 'expo-asset';\nimport { AuthContext } from \"../../components/context\";\nimport Exercise from \"../../components/Exercise\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { Exercises } from \"../../model/exercise-store\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport firebase from 'firebase';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    return Asset.fromModule(image).downloadAsync();\n  });\n}\n\nexport default function BreatheScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useContext = useContext(AuthContext),\n      userToken = _useContext.userToken;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  function _loadAssetsAsync() {\n    var imageAssets;\n    return _regeneratorRuntime.async(function _loadAssetsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            imageAssets = cacheImages([]);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var currentHour = new Date().getHours();\n\n  var _useState3 = useState(currentHour >= 20 || currentHour <= 3 ? \"Sleep\" : \"New\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCategory = _useState4[0],\n      setSelectedCategory = _useState4[1];\n\n  var categoryOptions = {\n    \"Sleep\": \"Sleep\",\n    \"New\": \"New\",\n    \"Popular\": \"Popular\"\n  };\n\n  var renderCategoryOptions = function renderCategoryOptions() {\n    return Object.keys(categoryOptions).map(function (option, i) {\n      return React.createElement(TouchableOpacity, {\n        key: i + \" \" + option,\n        onPress: function onPress() {\n          return handleSelectedOption(option);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.selection,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: toggleSelected(option),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, option), React.createElement(View, {\n        style: toggleUnderline(option),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })));\n    });\n  };\n\n  var handleSelectedOption = function handleSelectedOption(optionName) {\n    setSelectedCategory(optionName);\n  };\n\n  var toggleSelected = function toggleSelected(optionName) {\n    return selectedCategory === optionName ? styles.selected : styles.unSelected;\n  };\n\n  var toggleUnderline = function toggleUnderline(optionName) {\n    return selectedCategory === optionName ? styles.underline : null;\n  };\n\n  var currUser = firebase.auth().currentUser;\n  var favRef = currUser ? firebase.database().ref(currUser.uid).child('favorites') : null;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      favIds = _useState6[0],\n      setFavIds = _useState6[1];\n\n  useEffect(function () {\n    if (currUser) {\n      favRef.on(\"value\", function (snapshot) {\n        setFavIds([]);\n        snapshot.forEach(function (node) {\n          setFavIds(function (arr) {\n            return [].concat(_toConsumableArray(arr), [node.val().id]);\n          });\n        });\n      });\n    }\n  }, []);\n\n  var checkIfLiked = function checkIfLiked(exId) {\n    console.log(\"Breathe Screen favs:\", favIds.includes(exId));\n    return favIds.includes(exId);\n  };\n\n  var _useState7 = useState([1, 2, 3, 4, 5, 7, 20]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dailyExhales = _useState8[0],\n      setDailyExhales = _useState8[1];\n\n  var _useState9 = useState([6, 10, 12, 6, 16, 24, 25]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      eveningWindDowns = _useState10[0],\n      setEveningWindDowns = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      recommendedToday = _useState12[0],\n      setRecommendedToday = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      popular = _useState14[0],\n      setPopular = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sleepExercises = _useState16[0],\n      setSleepExercises = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newExercises = _useState18[0],\n      setNewExercises = _useState18[1];\n\n  useEffect(function () {\n    currentHour >= 20 || currentHour <= 3 ? shuffle([1, 2, 3, 4, 5, 6, 10, 11, 12, 13], setRecommendedToday) : shuffle([1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], setRecommendedToday);\n    shuffle([6, 10, 11, 12, 13, 14, 17, 18, 19], setPopular);\n    shuffle([6, 10, 12, 16, 24, 25], setSleepExercises);\n    shuffle([7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], setNewExercises);\n  }, []);\n\n  var shuffle = function shuffle(arr, setter) {\n    var currIdx = arr.length,\n        tempValue,\n        randomIdx;\n\n    while (currIdx !== 0) {\n      randomIdx = Math.floor(Math.random() * currIdx);\n      currIdx -= 1;\n      tempValue = arr[currIdx];\n      arr[currIdx] = arr[randomIdx];\n      arr[randomIdx] = tempValue;\n    }\n\n    setter(arr);\n  };\n\n  function renderExercises(array) {\n    var _this2 = this;\n\n    for (var i = 0; i < 5; i++) {\n      if (Exercises[array[i]].color == Exercises[array[i + 1]].color || Exercises[array[i]].shape == Exercises[array[i + 1]].shape) {\n        var _array;\n\n        (_array = array).push.apply(_array, _toConsumableArray(array.splice(i + 1, 1)));\n      }\n    }\n\n    ;\n    array = array.slice(0, 5);\n    return array.map(function (x) {\n      return React.createElement(Exercise, {\n        id: Exercises[x].id,\n        key: Exercises[x].id,\n        navigation: navigation,\n        image: Exercises[x].image || null,\n        uniqueImgEvening: Exercises[x].uniqueImgEvening || null,\n        gif: Exercises[x].gif || undefined,\n        title: Exercises[x].title,\n        subTitle: Exercises[x].subTitle,\n        videoFile: Exercises[x].videoFile || null,\n        modalIcon: Exercises[x].modalIcon || null,\n        iconHeight: Exercises[x].iconHeight || null,\n        customVolume: Exercises[x].customVolume || null,\n        isLiked: favIds.includes(x),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n  ;\n\n  function renderDailyExhale(array) {\n    var randIdx = Math.floor(Math.random() * (array.length - 1));\n    var today = new Date().getDay();\n    var chosenExNum = array[today];\n    return React.createElement(Exercise, {\n      id: Exercises[chosenExNum].id,\n      key: Exercises[chosenExNum].id,\n      navigation: navigation,\n      uniqueSize: Exercises[chosenExNum].uniqueImg && \"topBanner\",\n      image: currentHour >= 20 || currentHour <= 3 ? Exercises[chosenExNum].uniqueImgEvening : Exercises[chosenExNum].uniqueImg || null,\n      gif: Exercises[chosenExNum].gif || undefined,\n      title: Exercises[chosenExNum].title,\n      subTitle: Exercises[chosenExNum].subTitle,\n      videoFile: Exercises[chosenExNum].videoFile || null,\n      modalIcon: Exercises[chosenExNum].modalIcon || null,\n      iconHeight: Exercises[chosenExNum].iconHeight || null,\n      customVolume: Exercises[chosenExNum].customVolume || null,\n      isLiked: favIds.includes(chosenExNum),\n      autoCountDown: \"2m\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 12\n      }\n    });\n  }\n\n  ;\n  return React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, isFocused ? React.createElement(StatusBar, {\n    hidden: false,\n    barStyle: \"dark-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 20\n    }\n  }) : null, isReady ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 50,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, currentHour >= 20 || currentHour <= 3 ? renderDailyExhale(eveningWindDowns) : renderDailyExhale(dailyExhales)), React.createElement(View, {\n    style: {\n      marginLeft: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-SemiBold\",\n      fontSize: width < 350 ? 23 : 26\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Recommended For You\")), React.createElement(ScrollView, {\n    horizontal: true,\n    style: {\n      flexDirection: \"row\",\n      marginLeft: 25\n    },\n    showsVerticalScrollIndicator: false,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, renderExercises(recommendedToday)), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, React.createElement(Exercise, {\n    uniqueSize: \"horizontal\",\n    navigation: navigation,\n    image: Exercises[8].uniqueImg,\n    videoFile: Exercises[8].videoFile,\n    modalIcon: Exercises[8].modalIcon,\n    id: Exercises[8].id,\n    autoCountDown: Exercises[8].autoCountDown,\n    customWidth: Exercises[8].customWidth,\n    iconHeight: Exercises[8].iconHeight,\n    noFinishBell: Exercises[8].noFinishBell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, React.createElement(Exercise, {\n    uniqueSize: \"horizontal\",\n    navigation: navigation,\n    image: Exercises[9].uniqueImg,\n    videoFile: Exercises[9].videoFile,\n    modalIcon: Exercises[9].modalIcon,\n    id: Exercises[9].id,\n    autoCountDown: Exercises[9].autoCountDown,\n    customWidth: Exercises[9].customWidth,\n    iconHeight: Exercises[9].iconHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      marginLeft: 25,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, renderCategoryOptions()), React.createElement(ScrollView, {\n    horizontal: true,\n    style: selectedCategory === \"Sleep\" ? styles.showScroll : styles.hideScroll,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }, renderExercises(sleepExercises)), React.createElement(ScrollView, {\n    horizontal: true,\n    style: selectedCategory === \"New\" ? styles.showScroll : styles.hideScroll,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, renderExercises(newExercises)), React.createElement(ScrollView, {\n    horizontal: true,\n    style: selectedCategory === \"Popular\" ? styles.showScroll : styles.hideScroll,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, renderExercises(popular))) : React.createElement(AppLoading, {\n    startAsync: _loadAssetsAsync,\n    onFinish: function onFinish() {\n      return setIsReady(true);\n    },\n    onError: console.warn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }));\n}\n;\nvar styles = StyleSheet.create({\n  selection: {\n    margin: 15,\n    alignItems: \"center\"\n  },\n  selected: {\n    fontFamily: \"Assistant-SemiBold\",\n    fontSize: width < 350 ? 23 : 26,\n    color: \"black\"\n  },\n  unSelected: {\n    fontFamily: \"Assistant-SemiBold\",\n    fontSize: width < 350 ? 23 : 26,\n    color: \"#717171\"\n  },\n  underline: {\n    marginTop: 3,\n    borderTopWidth: 2,\n    width: \"85%\"\n  },\n  showScroll: {\n    flexDirection: \"row\",\n    marginLeft: 25\n  },\n  hideScroll: {\n    flexDirection: \"row\",\n    marginLeft: 25,\n    display: \"none\"\n  }\n});","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/BreatheScreen.jsx"],"names":["React","useEffect","useState","useContext","Dimensions","get","width","height","Asset","AuthContext","Exercise","useIsFocused","Exercises","ScrollView","useFonts","AppLoading","firebase","AsyncStorage","cacheImages","images","map","image","fromModule","downloadAsync","BreatheScreen","navigation","isFocused","userToken","isReady","setIsReady","_loadAssetsAsync","imageAssets","Promise","all","require","fontsLoaded","currentHour","Date","getHours","selectedCategory","setSelectedCategory","categoryOptions","renderCategoryOptions","Object","keys","option","i","handleSelectedOption","styles","selection","toggleSelected","toggleUnderline","optionName","selected","unSelected","underline","currUser","auth","currentUser","favRef","database","ref","uid","child","favIds","setFavIds","on","snapshot","forEach","node","arr","val","id","checkIfLiked","exId","console","log","includes","dailyExhales","setDailyExhales","eveningWindDowns","setEveningWindDowns","recommendedToday","setRecommendedToday","popular","setPopular","sleepExercises","setSleepExercises","newExercises","setNewExercises","shuffle","setter","currIdx","length","tempValue","randomIdx","Math","floor","random","renderExercises","array","color","shape","push","splice","slice","x","uniqueImgEvening","gif","undefined","title","subTitle","videoFile","modalIcon","iconHeight","customVolume","renderDailyExhale","randIdx","today","getDay","chosenExNum","uniqueImg","backgroundColor","marginTop","justifyContent","alignItems","marginLeft","fontFamily","fontSize","flexDirection","autoCountDown","customWidth","noFinishBell","showScroll","hideScroll","warn","StyleSheet","create","margin","borderTopWidth","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Text, View, StatusBar, Image, Dimensions, StyleSheet, TouchableOpacity, RefreshControl } from 'react-native';\nconst { width, height } = Dimensions.get('window');\nimport { Asset } from 'expo-asset';\nimport { AuthContext } from '../../components/context';\n\nimport Exercise from '../../components/Exercise';\nimport { useIsFocused } from '@react-navigation/native';\n\nimport { Exercises } from '../../model/exercise-store';\n\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\n// import { AppLoading } from 'expo';\n\nimport firebase from 'firebase';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// https://docs.expo.io/guides/preloading-and-caching-assets/?redirected#publishing-assets\nfunction cacheImages(images) {\n  return images.map(image => Asset.fromModule(image).downloadAsync());\n}\n\nexport default function BreatheScreen({navigation}) {\n  const isFocused = useIsFocused();\n\n  const { userToken } = useContext(AuthContext);\n\n  const [isReady, setIsReady] = useState(false);\n\n  async function _loadAssetsAsync() {\n    const imageAssets = cacheImages([\n      // require(\"../../assets/exercises-images/flower-of-life.png\"),\n      // require(\"../../assets/exercises-images/circles.png\"),\n      // require(\"../../assets/exercises-images/4-7-9-wheel.png\"),\n      // require(\"../../assets/exercises-images/box-breathing.png\"),\n      // require(\"../../assets/exercises-images/yin-yang.png\"),\n      // require(\"../../assets/exercises-images/horiz-deep-breaths.png\"),\n      // require(\"../../assets/exercises-images/redrock-4x.png\"),\n      // require(\"../../assets/exercises-images/aurora-4x.png\"),\n      // require(\"../../assets/exercises-images/crescent-moon.png\"),\n      // require(\"../../assets/exercises-images/forest-dawn-4x.png\"),\n      // require(\"../../assets/exercises-images/cosmos.png\"),\n    ]);\n    await Promise.all([...imageAssets]);\n  }\n\n\n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n\n  const currentHour = new Date().getHours();\n  // console.log(currentHour)\n\n  const [selectedCategory, setSelectedCategory] = useState(currentHour >= 20 || currentHour <= 3 ? \"Sleep\" : \"New\");\n\n  const categoryOptions = {\n    \"Sleep\": \"Sleep\",\n    \"New\": \"New\",\n    \"Popular\": \"Popular\",\n  }\n\n  const renderCategoryOptions = () => {\n    return Object.keys(categoryOptions).map((option, i) => {\n      return (\n        <TouchableOpacity key={`${i} ${option}`} onPress={() => handleSelectedOption(option)}>\n          <View style={styles.selection}>\n            <Text style={toggleSelected(option)}>{option}</Text>\n            <View style={toggleUnderline(option)}></View>\n          </View>\n        </TouchableOpacity>\n      )\n    })\n  }\n\n  const handleSelectedOption = (optionName) => {\n    setSelectedCategory(optionName)\n  }\n\n  const toggleSelected = (optionName) => {\n    return selectedCategory === optionName ? styles.selected : styles.unSelected;\n  }\n\n  const toggleUnderline = (optionName) => {\n    return selectedCategory === optionName ? styles.underline : null;\n  }\n\n\n\n\n  const currUser = firebase.auth().currentUser;\n  const favRef = currUser ? firebase.database().ref(currUser.uid).child('favorites') : null;\n\n  // let favIds = [];\n  const [favIds, setFavIds] = useState([]);\n\n  useEffect(() => {\n    if (currUser) {\n      favRef.on(\"value\", snapshot => {\n        setFavIds([]);\n        snapshot.forEach(node => {\n          // favIds.push(node.val().id)\n          setFavIds(arr => [...arr, node.val().id])\n          // console.log(favIds)\n          // console.log(favIds.includes(2))\n        })\n      })\n    }\n  }, [])\n\n  const checkIfLiked = (exId) => {\n    console.log(\"Breathe Screen favs:\", favIds.includes(exId))\n    return favIds.includes(exId);\n  }\n\n\n\n  // const [refreshing, setRefreshing] = React.useState(false);\n\n  // const onRefresh = React.useCallback(() => {\n  //   setRefreshing(true);\n\n  //   setTimeout(() => {\n  //     setRefreshing(false)\n  //   }, 0);\n  // }, []);\n\n  // useEffect(() => {\n  //   onRefresh();\n  // }, [])\n\n  /* \n  Daily's\n  1-5, 7, 11-15, 17-24\n\n  Evenings:\n  6, 10, 12, 16, 24, 25\n\n  New: \n  7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, \n  */\n\n  // this way doesn't shuffle it every time you move from tab to tab\n  const [dailyExhales, setDailyExhales] = useState([1, 2, 3, 4, 5, 7, 20]);\n  const [eveningWindDowns, setEveningWindDowns] = useState([6, 10, 12, 6, 16, 24, 25]);\n  const [recommendedToday, setRecommendedToday] = useState();\n  const [popular, setPopular] = useState();\n  const [sleepExercises, setSleepExercises] = useState();\n  const [newExercises, setNewExercises] = useState();\n\n  // currentHour >= 20 || currentHour <= 3 ? \n\n  useEffect(() => {\n    // shuffle([1, 2, 3, 4, 5, 7], setDailyExhales);\n    currentHour >= 20 || currentHour <= 3 ? \n      shuffle([1, 2, 3, 4, 5, 6, 10, 11, 12, 13], setRecommendedToday) : \n      shuffle([1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], setRecommendedToday);\n    shuffle([6, 10, 11, 12, 13, 14, 17, 18, 19], setPopular);\n    shuffle([6, 10, 12, 16, 24, 25], setSleepExercises);\n    shuffle([7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24,], setNewExercises);\n  }, [])\n\n\n  // useEffect(() => {\n  //   setRecommendedToday(arr => recommendedToday)\n  // }, [favRef])\n\n\n  // function shuffle(arr) {\n  //   let currIdx = arr.length, tempValue, randomIdx;\n  //   while (currIdx !== 0) {\n  //     randomIdx = Math.floor(Math.random() * currIdx);\n  //     currIdx -= 1;\n\n  //     tempValue = arr[currIdx];\n  //     arr[currIdx] = arr[randomIdx];\n  //     arr[randomIdx] = tempValue;\n  //   }\n  //   return arr.map(x => \n  //     <Exercise \n  //       id={Exercises[x].id} \n  //       key={Exercises[x].id}\n  //       navigation={navigation} \n  //       image={Exercises[x].image || null} \n  //       gif={Exercises[x].gif || undefined}\n  //       title={Exercises[x].title} \n  //       subTitle={Exercises[x].subTitle} \n  //       videoFile={Exercises[x].videoFile || null} \n  //       modalIcon={Exercises[x].modalIcon || null} \n  //       iconHeight={Exercises[x].iconHeight || null} \n  //       customVolume={Exercises[x].customVolume || null}\n  //     />\n  //   );\n  // }\n\n  \n  const shuffle = (arr, setter) => {\n    let currIdx = arr.length, tempValue, randomIdx;\n    while (currIdx !== 0) {\n      randomIdx = Math.floor(Math.random() * currIdx);\n      currIdx -= 1;\n\n      tempValue = arr[currIdx];\n      arr[currIdx] = arr[randomIdx];\n      arr[randomIdx] = tempValue;\n    }\n    setter(arr);\n  };\n\n\n  function renderExercises(array) {\n    for (let i = 0; i < 5; i++) {\n      if (Exercises[array[i]].color == Exercises[array[i + 1]].color || \n          Exercises[array[i]].shape == Exercises[array[i + 1]].shape) {\n        array.push(...array.splice(i + 1, 1));\n      }\n    };\n\n    array = array.slice(0, 5);\n    // console.log(\"arr length:\", array.length)\n    return array.map(x => \n      <Exercise \n        id={Exercises[x].id} \n        key={Exercises[x].id}\n        navigation={navigation} \n        image={Exercises[x].image || null} \n        uniqueImgEvening={Exercises[x].uniqueImgEvening || null}\n        gif={Exercises[x].gif || undefined}\n        title={Exercises[x].title} \n        subTitle={Exercises[x].subTitle} \n        videoFile={Exercises[x].videoFile || null} \n        modalIcon={Exercises[x].modalIcon || null} \n        iconHeight={Exercises[x].iconHeight || null} \n        customVolume={Exercises[x].customVolume || null}\n        isLiked={favIds.includes(x)}\n      />\n    )\n  };\n\n  \n  // weekly reshuffle and pick solution for now.\n  function renderDailyExhale(array) {\n    const randIdx = Math.floor(Math.random() * (array.length - 1));\n    let today = new Date().getDay();\n    const chosenExNum = array[today];\n    // console.log(\"chosenDailyExNum:\", chosenExNum);\n\n    return <Exercise \n            id={Exercises[chosenExNum].id} \n            key={Exercises[chosenExNum].id}\n            navigation={navigation} \n            uniqueSize={Exercises[chosenExNum].uniqueImg && \"topBanner\"}\n            image={currentHour >= 20 || currentHour <= 3 ? Exercises[chosenExNum].uniqueImgEvening : Exercises[chosenExNum].uniqueImg || null} \n            gif={Exercises[chosenExNum].gif || undefined}\n            title={Exercises[chosenExNum].title} \n            subTitle={Exercises[chosenExNum].subTitle} \n            videoFile={Exercises[chosenExNum].videoFile || null} \n            modalIcon={Exercises[chosenExNum].modalIcon || null} \n            iconHeight={Exercises[chosenExNum].iconHeight || null} \n            customVolume={Exercises[chosenExNum].customVolume || null}\n            isLiked={favIds.includes(chosenExNum)}\n            autoCountDown={\"2m\"}\n          />\n  };\n\n\n\n  return(\n    <ScrollView style={{backgroundColor: \"white\"}}>\n      {isFocused ? <StatusBar hidden={false} barStyle=\"dark-content\"/> : null} \n      {/* <RefreshControl refreshing={refreshing} /> */}\n      {\n        isReady ? \n        <View>\n\n          <View style={{marginTop: 50, justifyContent: \"center\", alignItems: \"center\"}}>\n            {/* <Exercise uniqueSize=\"topBanner\" navigation={navigation} image={Exercises[7].image} videoFile={Exercises[7].videoFile} modalIcon={Exercises[7].modalIcon} id={Exercises[7].id} autoCountDown={\"2m\"}/>  */}\n            { \n            currentHour >= 20 || currentHour <= 3 ? \n            renderDailyExhale(eveningWindDowns)\n            : renderDailyExhale(dailyExhales)\n            }\n          </View>\n          \n          <View style={{marginLeft: 25}}>\n            <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: width < 350 ? 23 : 26 }}>Recommended For You</Text>\n          </View>\n          \n          <ScrollView horizontal={true} style={{flexDirection: \"row\", marginLeft: 25}} showsVerticalScrollIndicator={false} showsHorizontalScrollIndicator={false}>\n            {/* <Exercise id={Exercises[1].id} navigation={navigation} image={Exercises[1].image} title={Exercises[1].title} subTitle={Exercises[1].subTitle} videoFile={Exercises[1].videoFile} modalIcon={Exercises[1].modalIcon} iconHeight={Exercises[1].iconHeight} customVolume={Exercises[1].customVolume}/>\n            <Exercise id={Exercises[2].id} navigation={navigation} image={Exercises[2].image} gif={Exercises[2].gif || null} title={Exercises[2].title} subTitle={Exercises[2].subTitle} videoFile={Exercises[2].videoFile} modalIcon={Exercises[2].modalIcon} iconHeight={Exercises[2].iconHeight} />\n            <Exercise id={Exercises[3].id} navigation={navigation} image={Exercises[3].image} title={Exercises[3].title} subTitle={Exercises[3].subTitle} videoFile={Exercises[3].videoFile} modalIcon={Exercises[3].modalIcon} iconHeight={Exercises[3].iconHeight} />\n            <Exercise id={Exercises[4].id} navigation={navigation} image={Exercises[4].image} title={Exercises[4].title} subTitle={Exercises[4].subTitle} videoFile={Exercises[4].videoFile} modalIcon={Exercises[4].modalIcon} iconHeight={Exercises[4].iconHeight} />\n            <Exercise id={Exercises[5].id} navigation={navigation} image={Exercises[5].image} title={Exercises[5].title} subTitle={Exercises[5].subTitle} videoFile={Exercises[5].videoFile} modalIcon={Exercises[5].modalIcon} iconHeight={Exercises[5].iconHeight} /> */}\n            {/* {recommendedPicker()} */}\n            {/* {recommendedToday} */}\n            {renderExercises(recommendedToday)}\n          </ScrollView>\n        \n          <View style={{alignItems: \"center\", }}>\n            {/* {\n              currentHour >= 20 || currentHour <= 3 ? \n              <Exercise uniqueSize=\"horizontal\" navigation={navigation} image={Exercises[8].uniqueImg} videoFile={Exercises[8].videoFile} modalIcon={Exercises[8].modalIcon} id={Exercises[8].id} autoCountDown={\"30m\"} customWidth={Exercises[8].customWidth} noFinishBell={Exercises[8].noFinishBell}/> \n              : null\n            } */}\n            <Exercise uniqueSize=\"horizontal\" navigation={navigation} image={Exercises[8].uniqueImg} videoFile={Exercises[8].videoFile} modalIcon={Exercises[8].modalIcon} id={Exercises[8].id} autoCountDown={Exercises[8].autoCountDown} customWidth={Exercises[8].customWidth} iconHeight={Exercises[8].iconHeight} noFinishBell={Exercises[8].noFinishBell}/> \n          </View>\n          <View style={{alignItems: \"center\", }}>\n            <Exercise uniqueSize=\"horizontal\" navigation={navigation} image={Exercises[9].uniqueImg} videoFile={Exercises[9].videoFile} modalIcon={Exercises[9].modalIcon} id={Exercises[9].id} autoCountDown={Exercises[9].autoCountDown} customWidth={Exercises[9].customWidth} iconHeight={Exercises[9].iconHeight} /> \n          </View>\n\n          <View style={{marginLeft: 25, flexDirection: \"row\", }}>\n            {renderCategoryOptions()}\n          </View>\n \n          {/* { \n            selectedCategory === \"Sleep\" ? \n            <ScrollView horizontal={true} style={{flexDirection: \"row\", marginLeft: 25}} showsHorizontalScrollIndicator={false}>\n              <Exercise id={Exercises[6].id} navigation={navigation} image={Exercises[6].image} title={Exercises[6].title} subTitle={Exercises[6].subTitle} videoFile={Exercises[6].videoFile} modalIcon={Exercises[6].modalIcon} iconHeight={Exercises[6].iconHeight} noFinishBell={Exercises[6].noFinishBell}/>\n              <Exercise id={Exercises[10].id} navigation={navigation} image={Exercises[10].image} title={Exercises[10].title} subTitle={Exercises[10].subTitle} />\n            </ScrollView>\n            : selectedCategory === \"New\" ? \n            <ScrollView horizontal={true} style={{flexDirection: \"row\", marginLeft: 25}} showsHorizontalScrollIndicator={false}>\n              <Exercise id={Exercises[11].id} navigation={navigation} image={Exercises[11].image} title={Exercises[11].title} subTitle={Exercises[11].subTitle} modalIcon={Exercises[11].modalIcon} iconHeight={Exercises[11].iconHeight}/>\n              <Exercise id={Exercises[13].id} navigation={navigation} image={Exercises[13].image} title={Exercises[13].title} subTitle={Exercises[13].subTitle} />\n              <Exercise id={Exercises[12].id} navigation={navigation} image={Exercises[12].image} title={Exercises[12].title} subTitle={Exercises[12].subTitle} />\n            </ScrollView>\n            : selectedCategory === \"Popular\" ? \n            <ScrollView horizontal={true} style={{flexDirection: \"row\", marginLeft: 25}} showsHorizontalScrollIndicator={false}>\n              {popular}\n            </ScrollView>\n            : null\n          } */}\n\n\n            <ScrollView horizontal={true} style={selectedCategory === \"Sleep\" ? styles.showScroll : styles.hideScroll} showsHorizontalScrollIndicator={false}>\n              {/* <Exercise id={Exercises[6].id} navigation={navigation} image={Exercises[6].image} title={Exercises[6].title} subTitle={Exercises[6].subTitle} videoFile={Exercises[6].videoFile} modalIcon={Exercises[6].modalIcon} iconHeight={Exercises[6].iconHeight} noFinishBell={Exercises[6].noFinishBell}/>\n              <Exercise id={Exercises[10].id} navigation={navigation} image={Exercises[10].image} title={Exercises[10].title} subTitle={Exercises[10].subTitle} videoFile={Exercises[10].videoFile} /> */}\n              {renderExercises(sleepExercises)}\n            </ScrollView>\n            <ScrollView horizontal={true} style={selectedCategory === \"New\" ? styles.showScroll : styles.hideScroll} showsHorizontalScrollIndicator={false}>\n              {/* <Exercise id={Exercises[11].id} navigation={navigation} image={Exercises[11].image} title={Exercises[11].title} subTitle={Exercises[11].subTitle} videoFile={Exercises[11].videoFile} modalIcon={Exercises[11].modalIcon} iconHeight={Exercises[11].iconHeight}/>\n              <Exercise id={Exercises[13].id} navigation={navigation} image={Exercises[13].image} title={Exercises[13].title} subTitle={Exercises[13].subTitle} videoFile={Exercises[13].videoFile} />\n              <Exercise id={Exercises[12].id} navigation={navigation} image={Exercises[12].image} title={Exercises[12].title} subTitle={Exercises[12].subTitle} videoFile={Exercises[12].videoFile} /> */}\n              {renderExercises(newExercises)}\n            </ScrollView>\n            <ScrollView horizontal={true} style={selectedCategory === \"Popular\" ? styles.showScroll : styles.hideScroll} showsHorizontalScrollIndicator={false}>\n              {/* {popular} */}\n              {renderExercises(popular)}\n            </ScrollView>\n         \n            \n          \n            {/* <ScrollView horizontal={true} style={{flexDirection: \"row\", marginLeft: 25}} showsHorizontalScrollIndicator={false}>\n              {\n                selectedCategory === \"Sleep\" ? recommendedToday\n                : selectedCategory === \"New\" ? popular\n                : selectedCategory === \"Popular\" ? popular : null\n              }\n            </ScrollView> */}\n\n          \n        </View>\n  \n        : \n        // null\n        <AppLoading \n          startAsync={_loadAssetsAsync}\n          onFinish={() => setIsReady(true)}\n          onError={console.warn}\n        />\n      }\n\n    </ScrollView>\n  )\n};\n\n\nconst styles = StyleSheet.create({\n  selection: { \n    margin: 15, \n    alignItems: \"center\"\n  },\n  selected: {\n    fontFamily: \"Assistant-SemiBold\", \n    fontSize: width < 350 ? 23 : 26, \n    color: \"black\",\n  },\n  unSelected: {\n    fontFamily: \"Assistant-SemiBold\", \n    fontSize: width < 350 ? 23 : 26, \n    color: \"#717171\"\n  },\n  underline: {\n    marginTop: 3,\n    borderTopWidth: 2,\n    width: \"85%\"\n  },\n  showScroll: {\n    flexDirection: \"row\", \n    marginLeft: 25\n  },\n  hideScroll: {\n    flexDirection: \"row\", \n    marginLeft: 25,\n    display: \"none\"\n  }\n})"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/MeditateScreen.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppButton from \"../../components/AppButton\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar bgImage = require(\"../../assets/splash/memoir-splash-thin-4x.png\");\n\nexport default function MeditateScreen(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  return React.createElement(ImageBackground, {\n    source: bgImage,\n    style: {\n      flex: 1,\n      resizeMode: \"cover\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, isFocused ? React.createElement(StatusBar, {\n    hidden: false,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }\n  }) : null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      top: height * 0.065,\n      zIndex: 100,\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/back-arrow-white.png\"),\n    style: {\n      height: 20\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 23,\n      fontFamily: \"Assistant-SemiBold\",\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Meditate\"), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1,\n      height: height * 0.7,\n      borderRadius: 20,\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 330 ? width * 0.7 : width * 0.68,\n      height: height * 0.45,\n      justifyContent: \"space-around\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/meditate-circles-large.png\"),\n    style: {\n      height: 47\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontFamily: \"Assistant-SemiBold\",\n      fontSize: height < 600 ? 20 : 23,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Sometimes Your Own Inner Voice is Enough\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Our style of meditation doesn\\u2019t feature a voice to guide you through it.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Instead, we use a gentle bell sound to remind you to stay present.\"), React.createElement(Text, {\n    style: styles.modalTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"On the next page you can set how often you\\u2019d like the bell to ring.\")), React.createElement(AppButton, {\n    title: \"Got It\",\n    buttonStyles: styles.blueButton,\n    buttonTextStyles: styles.buttonText,\n    onPress: function onPress() {\n      return navigation.navigate('MeditateTimerSetScreen', {\n        bgImage: bgImage\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })))));\n}\n;\nvar styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 51,\n    width: 234,\n    borderRadius: 17,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowRadius: 7,\n    shadowColor: \"black\",\n    shadowOpacity: 0.2,\n    shadowOffset: {\n      width: 3,\n      height: 3\n    }\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 22,\n    letterSpacing: 1,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  modalTextStyle: {\n    fontFamily: \"Assistant-Regular\",\n    fontSize: height < 600 ? 14 : 16,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/MeditateScreen.jsx"],"names":["React","useState","useEffect","AppButton","useIsFocused","useFonts","Dimensions","get","width","height","bgImage","require","MeditateScreen","navigation","isFocused","fontsLoaded","flex","resizeMode","justifyContent","goBack","position","top","zIndex","padding","marginTop","textAlign","fontSize","fontFamily","color","flexDirection","backgroundColor","borderRadius","alignItems","styles","modalTextStyle","blueButton","buttonText","navigate","StyleSheet","create","shadowRadius","shadowColor","shadowOpacity","shadowOffset","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StatusBar, Image, Dimensions, StyleSheet, ImageBackground, TouchableOpacity } from 'react-native';\nimport AppButton from '../../components/AppButton';\nimport { useIsFocused } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\n\nconst { width, height } = Dimensions.get('window');\nconst bgImage = require('../../assets/splash/memoir-splash-thin-4x.png');\n// const bgImg = 'memoir-splash-thin-4x.png';\n\n// import { cacheAsset } from '../../components/cacheAsset';\n\nexport default function MeditateScreen({navigation}) {\n  const isFocused = useIsFocused();\n\n  // const [cachedImg, setCachedImg] = useState();\n\n  // useEffect(() => {\n  //   cacheAsset(bgImg, setCachedImg, \"splash-screens\");\n  // }, [])\n\n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n\n  return (\n    <ImageBackground source={bgImage} style={{ flex: 1, resizeMode: \"cover\", justifyContent: \"center\" }}>\n      {isFocused ? <StatusBar hidden={false} barStyle=\"light-content\"/> : null} \n      <TouchableOpacity onPress={() => navigation.goBack()} style={{position: \"absolute\", top: height * 0.065, zIndex: 100, padding: 15}}>\n        <Image source={require('../../assets/screen-icons/back-arrow-white.png')} style={{height: 20}} resizeMode=\"contain\"/>\n      </TouchableOpacity>\n      <View style={{marginTop: 20}}>\n        <Text style={{textAlign: \"center\", fontSize: 23, fontFamily: \"Assistant-SemiBold\", color: 'white'}}>Meditate</Text>\n        <View style={{flexDirection: \"row\", padding: 20}}>\n          <View style={{backgroundColor: \"white\", flex: 1, height: height * 0.7, borderRadius: 20, justifyContent: \"space-evenly\", alignItems: \"center\" }}>\n\n            <View style={{width: width < 330 ? width * 0.7 : width * 0.68, height: height * 0.45, justifyContent: \"space-around\", alignItems: \"center\", }}>\n              <Image source={require('../../assets/screen-icons/meditate-circles-large.png')} style={{height: 47, }} resizeMode=\"contain\"/>\n              <Text style={{fontFamily: \"Assistant-SemiBold\", fontSize: height < 600 ? 20 : 23, textAlign: \"center\"}}>Sometimes Your Own Inner Voice is Enough</Text>\n              <Text style={styles.modalTextStyle}>Our style of meditation doesn’t feature a voice to guide you through it.</Text>\n              <Text style={styles.modalTextStyle}>Instead, we use a gentle bell sound to remind you to stay present.</Text>\n              <Text style={styles.modalTextStyle}>On the next page you can set how often you’d like the bell to ring.</Text>\n            </View>\n            <AppButton \n              title=\"Got It\" \n              buttonStyles={styles.blueButton}\n              buttonTextStyles={styles.buttonText}\n              onPress={() => navigation.navigate('MeditateTimerSetScreen', {bgImage: bgImage})}\n            />\n\n          </View>\n        </View>\n      </View>\n    </ImageBackground>\n  )\n};\n\nconst styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: 51,\n    width: 234,\n    borderRadius: 17,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowRadius: 7,\n    shadowColor: \"black\",\n    shadowOpacity: 0.2,\n    shadowOffset: {width: 3, height: 3}\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: 22,\n    letterSpacing: 1,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  modalTextStyle : {\n    fontFamily: \"Assistant-Regular\", \n    fontSize: height < 600 ? 14 : 16,\n    textAlign: \"center\"\n  }\n});"]},"metadata":{},"sourceType":"module"}
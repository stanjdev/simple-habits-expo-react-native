{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/FavoritesScreen.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts } from 'expo-font';\nimport { AuthContext } from \"../../components/context\";\nimport Exercise from \"../../components/Exercise\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport CreateAccountPopup from \"../../components/CreateAccountPopup\";\nimport { Exercises } from \"../../model/exercise-store\";\nimport { fireApp } from \"../../firebase\";\nimport '@firebase/auth';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport default function FavoritesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _React$useContext = React.useContext(AuthContext),\n      userToken = _React$useContext.userToken,\n      userFirstName = _React$useContext.userFirstName;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showPopUp = _React$useState2[0],\n      setShowPopup = _React$useState2[1];\n\n  var currentUser = fireApp.auth().currentUser;\n  useEffect(function () {\n    if (currentUser && currentUser.isAnonymous || !userToken) {\n      setTimeout(function () {\n        isFocused ? setShowPopup(true) : setShowPopup(false);\n      }, 500);\n    } else {\n      setShowPopup(false);\n    }\n  }, [isFocused]);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favs = _useState2[0],\n      setFavs = _useState2[1];\n\n  var favIds = [];\n  var currUser = fireApp.auth().currentUser;\n\n  var getFavorites = function getFavorites() {\n    var favRef;\n    return _regeneratorRuntime.async(function getFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            favRef = currUser && fireApp.database().ref(currUser.uid).child('favorites');\n\n            if (currUser !== null) {\n              favRef.on(\"value\", function (snapshot) {\n                snapshot.forEach(function (node) {\n                  favIds.push(node.val().id);\n                });\n              });\n              favRef.on('value', function (data) {\n                var _this = this;\n\n                setFavs([]);\n                var favsArray = [];\n                data.forEach(function (child) {\n                  var exId = child.val().id;\n                  var key = child.key;\n                  setFavs(function (favs) {\n                    return [].concat(_toConsumableArray(favs), [React.createElement(Exercise, {\n                      key: key,\n                      id: Exercises[exId].id,\n                      notSignedIn: currUser.isAnonymous,\n                      navigation: navigation,\n                      image: Exercises[exId].image,\n                      gif: Exercises[exId].gif || undefined,\n                      title: Exercises[exId].title,\n                      subTitle: Exercises[exId].subTitle,\n                      videoFile: Exercises[exId].videoFile,\n                      modalIcon: Exercises[exId].modalIcon,\n                      iconHeight: Exercises[exId].iconHeight,\n                      autoCountDown: Exercises[exId].autoCountDown,\n                      customVolume: Exercises[exId].customVolume || null,\n                      noFinishBell: Exercises[exId].noFinishBell || null,\n                      __self: _this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 15\n                      }\n                    })]);\n                  });\n                });\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getFavorites();\n  }, [userToken, currUser]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      backgroundColor: \"white\",\n      height: currentUser && !currentUser.isAnonymous ? height : height * 0.92\n    },\n    scrollEnabled: userToken ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      left: width * 0.02,\n      top: height * 0.045,\n      zIndex: 100,\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/back-arrow.png\"),\n    style: {\n      height: 20\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), isFocused ? React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    hidden: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 22\n    }\n  }) : null, fontsLoaded ? React.createElement(View, {\n    style: {\n      marginTop: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 23,\n      fontFamily: \"Assistant-SemiBold\",\n      color: \"#535353\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, userFirstName ? String(userFirstName).charAt(0).toUpperCase() + String(userFirstName).slice(1) + \"'s Favorites\" : \"Favorites\"), React.createElement(View, {\n    style: {\n      marginLeft: Math.min(5, width * 0.05)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      alignContent: \"stretch\",\n      padding: width * 0.05,\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, favs.length ? favs : React.createElement(View, {\n    style: {\n      borderRadius: 7,\n      height: height * 0.9,\n      width: width,\n      marginLeft: -29,\n      justifyContent: \"center\",\n      alignItems: 'center',\n      marginTop: -30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/favorites-none-heart.png\"),\n    resizeMode: \"contain\",\n    style: {\n      height: 56\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 255,\n      height: 126,\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Assistant-Regular\",\n      fontSize: 23,\n      color: \"#535353\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"You have no favorites.\"), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Assistant-Regular\",\n      fontSize: 23,\n      color: \"#535353\",\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Tap the heart when viewing an exercise to add to this list.\")))))) : null), showPopUp ? React.createElement(CreateAccountPopup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 20\n    }\n  }) : null);\n}\n;","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/FavoritesScreen.jsx"],"names":["React","useEffect","useState","useFonts","AuthContext","Exercise","useIsFocused","ScrollView","CreateAccountPopup","Exercises","fireApp","AsyncStorage","Dimensions","get","width","height","FavoritesScreen","navigation","isFocused","require","fontsLoaded","useContext","userToken","userFirstName","showPopUp","setShowPopup","currentUser","auth","isAnonymous","setTimeout","favs","setFavs","favIds","currUser","getFavorites","favRef","database","ref","uid","child","on","snapshot","forEach","node","push","val","id","data","favsArray","exId","key","image","gif","undefined","title","subTitle","videoFile","modalIcon","iconHeight","autoCountDown","customVolume","noFinishBell","backgroundColor","goBack","position","left","top","zIndex","padding","marginTop","textAlign","fontSize","fontFamily","color","String","charAt","toUpperCase","slice","marginLeft","Math","min","flex","flexDirection","justifyContent","alignContent","flexWrap","length","borderRadius","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View, StatusBar, Image, Dimensions, TouchableOpacity } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { AuthContext } from '../../components/context';\nimport Exercise from '../../components/Exercise';\nimport { useIsFocused } from '@react-navigation/native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport CreateAccountPopup from '../../components/CreateAccountPopup';\nimport { Exercises } from '../../model/exercise-store';\nimport { fireApp } from '../../firebase';\nimport '@firebase/auth';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst { width, height } = Dimensions.get('window');\n\nexport default function FavoritesScreen({navigation}) {\n  const isFocused = useIsFocused();\n  \n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n  \n  const { userToken, userFirstName } = React.useContext(AuthContext)\n  \n  const [showPopUp, setShowPopup] = React.useState(false);\n\n  const currentUser = fireApp.auth().currentUser;\n  // console.log(currentUser && currentUser.isAnonymous);\n\n  useEffect(() => {\n    if (currentUser && currentUser.isAnonymous || !userToken) {\n      setTimeout(() => {\n        isFocused ? setShowPopup(true) : setShowPopup(false)\n      }, 500);\n    } else {\n      setShowPopup(false);\n    }\n  }, [isFocused])\n\n\n  const [favs, setFavs] = useState([]);\n  let favIds = [];\n\n  const currUser = fireApp.auth().currentUser;\n  \n  const getFavorites = async() => {\n    const favRef = currUser && fireApp.database().ref(currUser.uid).child('favorites');\n    // logged in check\n    if (currUser !== null) {\n      favRef.on(\"value\", snapshot => {\n        snapshot.forEach(node => {\n          favIds.push(node.val().id)\n        })\n      })\n\n      // if (favs.length > 0) {\n      //   setFavs([]);\n      // }\n\n      favRef.on('value', function(data) {\n        setFavs([]);\n        // data.forEach(child => console.log(child))\n        // data.forEach(child => setFavs([...favs, child.val()]));\n        \n        // console.log(data.toJSON())\n        let favsArray = [];\n          data.forEach(child => {\n            let exId = child.val().id;\n            let key = child.key;\n            // console.log(favIds);\n            // console.log(exId)\n            \n            // favs.push(exId)\n            \n            // if (favIds.length !== favs.length) {\n            setFavs(favs => [...favs, \n              <Exercise \n                key={key} \n                id={Exercises[exId].id}\n                notSignedIn={currUser.isAnonymous}\n                navigation={navigation}\n                image={Exercises[exId].image}\n                gif={Exercises[exId].gif || undefined}\n                title={Exercises[exId].title}\n                subTitle={Exercises[exId].subTitle} \n                videoFile={Exercises[exId].videoFile} \n                modalIcon={Exercises[exId].modalIcon} \n                iconHeight={Exercises[exId].iconHeight} \n                autoCountDown={Exercises[exId].autoCountDown} \n                customVolume={Exercises[exId].customVolume || null} \n                noFinishBell={Exercises[exId].noFinishBell || null} \n              />\n            ])\n\n            // favsArray.push(\n            //   <Exercise \n            //     key={key} \n            //     id={Exercises[exId].id}\n            //     notSignedIn={currUser.isAnonymous}\n            //     navigation={navigation}\n            //     image={Exercises[exId].image}\n            //     gif={Exercises[exId].gif || undefined}\n            //     title={Exercises[exId].title}\n            //     subTitle={Exercises[exId].subTitle} \n            //     videoFile={Exercises[exId].videoFile} \n            //     modalIcon={Exercises[exId].modalIcon} \n            //     iconHeight={Exercises[exId].iconHeight} \n            //     autoCountDown={Exercises[exId].autoCountDown} \n            //     customVolume={Exercises[exId].customVolume || null} \n            //     noFinishBell={Exercises[exId].noFinishBell || null} \n            //   />\n            // )\n            // setFavs(favsArray);\n\n              // favs.push(\n              //   <Exercise key={key} id={Exercises[exId].id} navigation={navigation} image={Exercises[exId].image} title={Exercises[exId].title} subTitle={Exercises[exId].subTitle} videoFile={Exercises[exId].videoFile} modalIcon={Exercises[exId].modalIcon} iconHeight={Exercises[exId].iconHeight} />\n              // )\n            // }\n          })\n      })\n    }\n  }\n\n  useEffect(() => {\n    getFavorites();\n  }, [userToken, currUser])\n\n\n  return (\n    <View>\n      <ScrollView style={{backgroundColor: \"white\", height: currentUser && !currentUser.isAnonymous ? height : height * 0.92}} scrollEnabled={userToken ? true : false}>\n      <TouchableOpacity onPress={() => navigation.goBack()} style={{position: \"absolute\", left: width * 0.02, top: height * 0.045, zIndex: 100, padding: 15}}>\n        <Image source={require('../../assets/screen-icons/back-arrow.png')} style={{height: 20,}} resizeMode=\"contain\"/>\n      </TouchableOpacity>\n        {isFocused ? <StatusBar barStyle=\"dark-content\" hidden={false}/> : null}\n        {fontsLoaded ?\n\n        <View style={{marginTop: 50, }}>\n          <Text style={{textAlign: \"center\", fontSize: 23, fontFamily: \"Assistant-SemiBold\", color: \"#535353\"}}>{userFirstName ? String(userFirstName).charAt(0).toUpperCase() + String(userFirstName).slice(1) + \"'s Favorites\" : \"Favorites\"}</Text>\n          <View style={{ marginLeft: Math.min(5, width * 0.05) }}>\n            <View style={{flex: 1, flexDirection: \"row\", justifyContent: \"flex-start\", alignContent: \"stretch\", padding: width * 0.05, flexWrap: \"wrap\", }}>\n            \n              {favs.length ? favs :\n                <View style={{ borderRadius: 7, height: height * 0.9, width: width, marginLeft: -29, justifyContent: \"center\", alignItems: 'center', marginTop: -30}}>\n                  <Image source={require('../../assets/screen-icons/favorites-none-heart.png')} resizeMode=\"contain\" style={{height: 56}} />\n                  <View style={{width: 255, height: 126, marginTop: 15}}>\n                    <Text style={{textAlign: \"center\", fontFamily: \"Assistant-Regular\", fontSize: 23, color: \"#535353\"}}>You have no favorites.</Text>\n                    <Text style={{textAlign: \"center\", fontFamily: \"Assistant-Regular\", fontSize: 23, color: \"#535353\", marginTop: 20}}>Tap the heart when viewing an exercise to add to this list.</Text>\n                  </View>\n                </View>\n              }\n\n            </View>\n          </View>\n\n          </View>\n\n        : null\n        // <AppLoading />\n        }\n        \n      </ScrollView>\n\n      {showPopUp ? <CreateAccountPopup /> : null}\n\n    </View>\n  )\n};"]},"metadata":{},"sourceType":"module"}
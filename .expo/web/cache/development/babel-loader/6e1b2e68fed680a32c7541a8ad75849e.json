{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport OnboardingStackScreen from \"./OnboardingStackScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AuthContext } from \"../components/context\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { fireApp } from \"../firebase\";\nimport firebase from 'firebase';\nexport default function Navigation(_ref) {\n  var navigation = _ref.navigation;\n  var initialLoginState = {\n    userEmail: null,\n    userToken: null,\n    userFirstName: null,\n    isLoading: true,\n    signInFail: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        });\n\n      case 'SIGNIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: action.email,\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        });\n\n      case 'SIGNOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: null,\n          userToken: null,\n          userFirstName: null,\n          isLoading: false\n        });\n\n      case 'SIGNUP':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: action.email,\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        });\n\n      case 'SIGNINFAIL':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          signInFail: action.fail\n        });\n\n      case 'SIGNINFAILRESET':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          signInFail: null\n        });\n\n      case 'UPDATEUSERNAME':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userFirstName: action.firstName\n        });\n\n      case 'UPDATEUSEREMAIL':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: action.email\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(inputEmail, inputPassword) {\n        var currUser, userFirstName, userEmail, userToken;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(fireApp.auth().signInWithEmailAndPassword(inputEmail, inputPassword));\n\n              case 3:\n                _context.next = 10;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: \"SIGNINFAIL\",\n                  fail: _context.t0\n                });\n                Alert.alert(\"User Not Found\", \"Your Account Info Does Not Match Our Records. Please Enter a Valid Username/Password.\", [{\n                  text: \"Okay\"\n                }, {\n                  style: \"destructive\"\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 10:\n                currUser = fireApp.auth().currentUser;\n\n                if (currUser !== null) {\n                  userFirstName = currUser.displayName;\n                  userEmail = currUser.email;\n                  userToken = currUser.uid;\n                  AsyncStorage.setItem('userToken', userToken);\n                  userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                  dispatch({\n                    type: \"SIGNIN\",\n                    email: userEmail,\n                    token: userToken,\n                    firstName: userFirstName\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signInFail: loginState.signInFail,\n      resetSignInFail: function resetSignInFail() {\n        return _regeneratorRuntime.async(function resetSignInFail$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: \"SIGNINFAILRESET\"\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(fireApp.auth().signOut());\n\n              case 3:\n                _context3.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 5:\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userName'));\n\n              case 7:\n                firebase.auth().signInAnonymously().then(function (user) {\n                  console.log(\"logged out, new anonymous made!\", user.uid);\n                }).catch(function (err) {\n                  return console.log(err.code, err.message);\n                });\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 13:\n                dispatch({\n                  type: \"SIGNOUT\"\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 10]], Promise);\n      },\n      signUp: function signUp(inputEmail, inputPassword, inputFirstName) {\n        var credential;\n        return _regeneratorRuntime.async(function signUp$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                try {\n                  credential = firebase.auth.EmailAuthProvider.credential(inputEmail, inputPassword);\n                  firebase.auth().currentUser.linkWithCredential(credential).then(function _callee2(usercred) {\n                    var user;\n                    return _regeneratorRuntime.async(function _callee2$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            user = usercred.user;\n                            _context5.next = 3;\n                            return _regeneratorRuntime.awrap(user.updateProfile({\n                              displayName: inputFirstName,\n                              email: inputEmail\n                            }).then(function _callee(results) {\n                              var currUser, userFirstName, userEmail, userToken;\n                              return _regeneratorRuntime.async(function _callee$(_context4) {\n                                while (1) {\n                                  switch (_context4.prev = _context4.next) {\n                                    case 0:\n                                      currUser = fireApp.auth().currentUser;\n\n                                      if (currUser !== null) {\n                                        userFirstName = currUser.displayName;\n                                        userToken = currUser.uid;\n                                        userEmail = currUser.email;\n                                        AsyncStorage.setItem('userToken', userToken);\n                                        userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                                        dispatch({\n                                          type: \"SIGNUP\",\n                                          email: userEmail,\n                                          token: userToken,\n                                          firstName: userFirstName\n                                        });\n                                      }\n\n                                    case 2:\n                                    case \"end\":\n                                      return _context4.stop();\n                                  }\n                                }\n                              }, null, null, null, Promise);\n                            }));\n\n                          case 3:\n                            console.log(\"Anonymous account successfully upgraded with Email!\", user);\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  });\n                } catch (error) {\n                  console.log(\"Error upgrading anonymous account with email\", error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      userToken: loginState.userToken,\n      userFirstName: loginState.userFirstName,\n      appleSignUp: function appleSignUp(inputEmail, givenName, familyName, credentialUserID) {\n        var currUser, userFirstName, userEmail, userToken, credential;\n        return _regeneratorRuntime.async(function appleSignUp$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _regeneratorRuntime.awrap(fireApp.auth().fetchSignInMethodsForEmail(credentialUserID + \"@appleid.com\"));\n\n              case 2:\n                _context9.t0 = _context9.sent.length;\n\n                if (!(_context9.t0 > 0)) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                _context9.next = 6;\n                return _regeneratorRuntime.awrap(fireApp.auth().signInWithEmailAndPassword(credentialUserID + \"@appleid.com\", credentialUserID));\n\n              case 6:\n                currUser = fireApp.auth().currentUser;\n\n                if (currUser !== null) {\n                  userFirstName = currUser.displayName;\n                  userEmail = inputEmail;\n                  userToken = currUser.uid;\n                  AsyncStorage.setItem('userToken', userToken);\n                  userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                  dispatch({\n                    type: \"SIGNUP\",\n                    email: userEmail,\n                    token: userToken,\n                    firstName: userFirstName\n                  });\n                }\n\n                _context9.next = 19;\n                break;\n\n              case 10:\n                _context9.prev = 10;\n                credential = firebase.auth.EmailAuthProvider.credential(credentialUserID + \"@appleid.com\", credentialUserID);\n                firebase.auth().currentUser.linkWithCredential(credential).then(function _callee4(usercred) {\n                  var user;\n                  return _regeneratorRuntime.async(function _callee4$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          user = usercred.user;\n                          _context8.next = 3;\n                          return _regeneratorRuntime.awrap(user.updateProfile({\n                            displayName: givenName,\n                            lastName: familyName,\n                            privateRelayEmail: inputEmail\n                          }).then(function _callee3(results) {\n                            var currUser, userFirstName, userEmail, userToken;\n                            return _regeneratorRuntime.async(function _callee3$(_context7) {\n                              while (1) {\n                                switch (_context7.prev = _context7.next) {\n                                  case 0:\n                                    currUser = fireApp.auth().currentUser;\n\n                                    if (currUser !== null) {\n                                      userFirstName = currUser.displayName;\n                                      userEmail = inputEmail;\n                                      userToken = currUser.uid;\n                                      AsyncStorage.setItem('userToken', userToken);\n                                      userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                                      dispatch({\n                                        type: \"SIGNUP\",\n                                        email: userEmail,\n                                        token: userToken,\n                                        firstName: userFirstName\n                                      });\n                                    }\n\n                                  case 2:\n                                  case \"end\":\n                                    return _context7.stop();\n                                }\n                              }\n                            }, null, null, null, Promise);\n                          }));\n\n                        case 3:\n                          console.log(\"Anonymous account successfully upgraded with Apple!\", user);\n\n                        case 4:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n                _context9.next = 19;\n                break;\n\n              case 15:\n                _context9.prev = 15;\n                _context9.t1 = _context9[\"catch\"](10);\n                console.log(\"Error upgrading anonymous account with Apple\", _context9.t1);\n                return _context9.abrupt(\"return\");\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, null, [[10, 15]], Promise);\n      },\n      appleTokenIn: function appleTokenIn(credentialUserID) {\n        var currUser, userFirstName, userToken;\n        return _regeneratorRuntime.async(function appleTokenIn$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return _regeneratorRuntime.awrap(fireApp.auth().signInWithEmailAndPassword(credentialUserID + \"@appleid.com\", credentialUserID));\n\n              case 3:\n                _context10.next = 10;\n                break;\n\n              case 5:\n                _context10.prev = 5;\n                _context10.t0 = _context10[\"catch\"](0);\n                console.log(_context10.t0);\n                Alert.alert(\"User Not Found\", \"Your Account Info Does Not Match Our Records. Please Enter a Valid Username/Password.\", [{\n                  text: \"Okay\"\n                }, {\n                  style: \"destructive\"\n                }]);\n                return _context10.abrupt(\"return\");\n\n              case 10:\n                currUser = fireApp.auth().currentUser;\n\n                if (currUser !== null) {\n                  userFirstName = currUser.displayName;\n                  userToken = currUser.uid;\n                  AsyncStorage.setItem('userToken', userToken);\n                  userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                  dispatch({\n                    type: \"SIGNIN\",\n                    token: userToken,\n                    firstName: userFirstName\n                  });\n                }\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      fbSignUp: function fbSignUp(email, first_name, last_name, userId, token) {\n        var currUser, userFirstName, userEmail, userToken, credential;\n        return _regeneratorRuntime.async(function fbSignUp$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return _regeneratorRuntime.awrap(fireApp.auth().fetchSignInMethodsForEmail(email || userId + \"@fbid.com\"));\n\n              case 2:\n                _context13.t0 = _context13.sent.length;\n\n                if (!(_context13.t0 > 0)) {\n                  _context13.next = 11;\n                  break;\n                }\n\n                _context13.next = 6;\n                return _regeneratorRuntime.awrap(fireApp.auth().signInWithEmailAndPassword(email || userId + \"@fbid.com\", userId));\n\n              case 6:\n                currUser = fireApp.auth().currentUser;\n\n                if (currUser !== null) {\n                  userFirstName = currUser.displayName;\n                  userToken = token;\n                  userEmail = currUser.privateRelayEmail;\n                  AsyncStorage.setItem('userToken', userToken);\n                  userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                  dispatch({\n                    type: \"SIGNUP\",\n                    email: userEmail,\n                    token: userToken,\n                    firstName: userFirstName\n                  });\n                }\n\n                return _context13.abrupt(\"return\");\n\n              case 11:\n                _context13.prev = 11;\n                credential = firebase.auth.EmailAuthProvider.credential(email || userId + \"@fbid.com\", userId);\n                _context13.next = 15;\n                return _regeneratorRuntime.awrap(firebase.auth().currentUser.linkWithCredential(credential).then(function _callee6(usercred) {\n                  var user;\n                  return _regeneratorRuntime.async(function _callee6$(_context12) {\n                    while (1) {\n                      switch (_context12.prev = _context12.next) {\n                        case 0:\n                          user = usercred.user;\n                          _context12.next = 3;\n                          return _regeneratorRuntime.awrap(user.updateProfile({\n                            displayName: first_name,\n                            lastName: last_name,\n                            privateRelayEmail: email || userId + \"@fbid.com\"\n                          }).then(function _callee5(results) {\n                            var currUser, userFirstName, userEmail, userToken;\n                            return _regeneratorRuntime.async(function _callee5$(_context11) {\n                              while (1) {\n                                switch (_context11.prev = _context11.next) {\n                                  case 0:\n                                    currUser = fireApp.auth().currentUser;\n\n                                    if (currUser !== null) {\n                                      userFirstName = currUser.displayName;\n                                      userToken = token;\n                                      userEmail = currUser.privateRelayEmail;\n                                      AsyncStorage.setItem('userToken', userToken);\n                                      userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                                      dispatch({\n                                        type: \"SIGNUP\",\n                                        email: userEmail,\n                                        token: userToken,\n                                        firstName: userFirstName\n                                      });\n                                    }\n\n                                  case 2:\n                                  case \"end\":\n                                    return _context11.stop();\n                                }\n                              }\n                            }, null, null, null, Promise);\n                          }));\n\n                        case 3:\n                          console.log(\"Anonymous account successfully upgraded with Facebook!\", user);\n\n                        case 4:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }));\n\n              case 15:\n                return _context13.abrupt(\"return\");\n\n              case 18:\n                _context13.prev = 18;\n                _context13.t1 = _context13[\"catch\"](11);\n                console.log(\"Error upgrading anonymous account with Facebook\", _context13.t1);\n                return _context13.abrupt(\"return\");\n\n              case 22:\n                ;\n\n              case 23:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, null, null, [[11, 18]], Promise);\n      },\n      updateNameAndEmail: function updateNameAndEmail(inputName, inputEmail, inputPassword) {\n        var currUser, credential;\n        return _regeneratorRuntime.async(function updateNameAndEmail$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                currUser = fireApp.auth().currentUser;\n\n                if (!currUser) {\n                  _context14.next = 12;\n                  break;\n                }\n\n                if (currUser.displayName !== inputName) {\n                  currUser.updateProfile({\n                    displayName: inputName\n                  }).then(function () {\n                    inputName && AsyncStorage.setItem('userName', inputName);\n                    dispatch({\n                      type: \"UPDATEUSERNAME\",\n                      firstName: currUser.displayName\n                    });\n                    console.log(\"First name changed to \" + currUser.displayName + \"!\");\n                    Alert.alert(\"Success!\", \"First name changed to \" + currUser.displayName + \"!\", [{\n                      text: \"Okay\"\n                    }]);\n                  });\n                }\n\n                _context14.prev = 3;\n                credential = firebase.auth.EmailAuthProvider.credential(currUser.email, inputPassword);\n                _context14.next = 11;\n                break;\n\n              case 7:\n                _context14.prev = 7;\n                _context14.t0 = _context14[\"catch\"](3);\n                alert(_context14.t0);\n                return _context14.abrupt(\"return\");\n\n              case 11:\n                if (currUser.email !== inputEmail && credential) {\n                  currUser.reauthenticateWithCredential(credential).then(function () {\n                    console.log(\"reauthenticated user!\");\n                  }).then(function () {\n                    currUser.updateEmail(inputEmail).then(function () {\n                      dispatch({\n                        type: \"UPDATEUSEREMAIL\",\n                        email: currUser.email\n                      });\n                      console.log(\"email changed to \" + inputEmail + \"!\");\n                      Alert.alert(\"Success!\", \"email changed to \" + inputEmail + \"!\", [{\n                        text: \"Okay\"\n                      }]);\n                    }).catch(function (error) {\n                      alert(error);\n                      return;\n                    });\n                  });\n                }\n\n              case 12:\n                ;\n\n              case 13:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, null, null, [[3, 7]], Promise);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function _callee7() {\n      var userFirstName, userEmail, userToken, currUser;\n      return _regeneratorRuntime.async(function _callee7$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              currUser = fireApp.auth().currentUser;\n              _context15.prev = 1;\n              _context15.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context15.sent;\n              _context15.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userName'));\n\n            case 7:\n              userFirstName = _context15.sent;\n\n              if (!(!userToken && !currUser)) {\n                _context15.next = 12;\n                break;\n              }\n\n              firebase.auth().signInAnonymously().then(function (user) {\n                console.log(\"new Anonymous made!\", user.uid);\n              }).catch(function (err) {\n                return console.log(err.code, err.message);\n              });\n              _context15.next = 17;\n              break;\n\n            case 12:\n              console.log(\"existing curr user!\", currUser.uid || \"currUser ID not loaded\");\n              _context15.next = 15;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('userName', currUser.displayName || ''));\n\n            case 15:\n              _context15.next = 17;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', currUser.uid || \"currUser ID not loaded\"));\n\n            case 17:\n              _context15.next = 22;\n              break;\n\n            case 19:\n              _context15.prev = 19;\n              _context15.t0 = _context15[\"catch\"](1);\n              console.log(_context15.t0);\n\n            case 22:\n              dispatch({\n                type: \"RETRIEVE_TOKEN\",\n                token: userToken,\n                firstName: userFirstName\n              });\n              console.log(\"user token:\", userToken);\n              console.log(\"user email:\", currUser && currUser.email);\n              console.log(\"user firstName, logged in as:\", userFirstName);\n\n            case 26:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, [[1, 19]], Promise);\n    }, 0);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 12\n    }\n  })));\n}\n;\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport ProfileScreen from \"./tab-screens/ProfileScreen\";\nimport SplashScreen from \"./SplashScreen\";\nimport SignInScreen from \"./SignInScreen\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport SignUpScreen2 from \"./SignUpScreen2\";\nimport UserWelcomeScreen from \"./UserWelcomeScreen\";\nimport MeditateExerciseScreen from \"../navigation/tab-screens/meditate-screens-more/MeditateExerciseScreen\";\nimport ExerciseVideo from \"../components/ExerciseVideo\";\nvar Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ScaleFromCenterAndroid),\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ScaleFromCenterAndroid),\n    name: \"Memoir\",\n    component: BottomTabNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ScaleFromCenterAndroid),\n    name: \"MeditateExerciseScreen\",\n    component: MeditateExerciseScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.RevealFromBottomAndroid),\n    name: \"ExerciseVideo\",\n    component: ExerciseVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ModalTransition),\n    name: \"SignUpScreen\",\n    component: SignUpScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ModalTransition),\n    name: \"SignUpScreen2\",\n    component: SignUpScreen2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.RevealFromBottomAndroid),\n    name: \"SignInScreen\",\n    component: SignInScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.FadeFromBottomAndroid),\n    name: \"UserWelcomeScreen\",\n    component: UserWelcomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    options: _objectSpread({\n      headerShown: false\n    }, TransitionPresets.ScaleFromCenterAndroid),\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }\n  }));\n}\n\n;","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/index.jsx"],"names":["NavigationContainer","createStackNavigator","TransitionPresets","React","useEffect","useState","useMemo","OnboardingStackScreen","AuthContext","AsyncStorage","fireApp","firebase","Navigation","navigation","initialLoginState","userEmail","userToken","userFirstName","isLoading","signInFail","loginReducer","prevState","action","type","token","firstName","email","fail","useReducer","loginState","dispatch","authContext","signIn","inputEmail","inputPassword","auth","signInWithEmailAndPassword","Alert","alert","text","style","currUser","currentUser","displayName","uid","setItem","resetSignInFail","signOut","removeItem","signInAnonymously","then","user","console","log","catch","err","code","message","signUp","inputFirstName","credential","EmailAuthProvider","linkWithCredential","usercred","updateProfile","results","error","appleSignUp","givenName","familyName","credentialUserID","fetchSignInMethodsForEmail","length","lastName","privateRelayEmail","appleTokenIn","fbSignUp","first_name","last_name","userId","updateNameAndEmail","inputName","reauthenticateWithCredential","updateEmail","setTimeout","getItem","flex","justifyContent","alignItems","BottomTabNavigator","ProfileScreen","SplashScreen","SignInScreen","SignUpScreen","SignUpScreen2","UserWelcomeScreen","MeditateExerciseScreen","ExerciseVideo","Stack","RootNavigator","headerShown","ScaleFromCenterAndroid","RevealFromBottomAndroid","ModalTransition","FadeFromBottomAndroid"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport OnboardingStackScreen from './OnboardingStackScreen';\nimport { View, ActivityIndicator, Alert } from 'react-native';\n\nimport { AuthContext } from '../components/context';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { fireApp } from '../firebase';\nimport firebase from 'firebase';\n\n\nexport default function Navigation({navigation}) {\n  // Going with useReducer global state instead, this was just simple demonstration.\n  // const [userToken, setUserToken] = React.useState(null);\n  // const [isLoading, setIsLoading] = React.useState(true);\n  \n\n  const initialLoginState = {\n    userEmail: null,\n    userToken: null,\n    userFirstName: null,\n    isLoading: true,\n    signInFail: null\n  }\n\n\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        }\n      case 'SIGNIN':\n        return {\n          ...prevState,\n          userEmail: action.email,\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        }\n      case 'SIGNOUT':\n        return {\n          ...prevState,\n          userEmail: null,\n          userToken: null,\n          userFirstName: null,\n          isLoading: false\n        }\n      case 'SIGNUP':\n        return {\n          ...prevState,\n          userEmail: action.email,\n          userToken: action.token,\n          userFirstName: action.firstName,\n          isLoading: false\n        }\n      case 'SIGNINFAIL':\n        return {\n          ...prevState,\n          signInFail: action.fail\n        }\n      case 'SIGNINFAILRESET':\n        return {\n          ...prevState,\n          signInFail: null\n        }\n      case 'UPDATEUSERNAME':\n        return {\n          ...prevState,\n          userFirstName: action.firstName,\n        }\n      case 'UPDATEUSEREMAIL':\n        return {\n          ...prevState,\n          userEmail: action.email\n        }\n    }\n  }\n\n\n\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n\n\n\n\n  const authContext = React.useMemo(() => ({\n    /* OLD WAY, for direct login demo purposes */\n    // signIn: async (userEmail, password) => {\n    //   // setUserToken('asdf');\n    //   // setIsLoading(false);\n    //   let userToken;\n    //   userToken = null;\n    //   if (userEmail === \"stan@email.com\" && password === \"password\") {\n    //     try {\n    //       userToken = \"asdf\"\n    //       await AsyncStorage.setItem('userToken', userToken);\n    //     } catch(e) {\n    //       console.log(e);\n    //     }\n    //   }\n    //   dispatch({ type: \"SIGNIN\", email: userEmail, token: userToken })\n    // },\n\n    /* 2nd version with async local storage: */\n    // signIn: async (foundUser) => {\n    //   // setUserToken('asdf');\n    //   // setIsLoading(false);\n\n    //   const userToken = String(foundUser[0].userToken);\n    //   const userEmail = foundUser[0].email;\n    //   const userFirstName = foundUser[0].firstName;\n\n    //   try {\n    //     await AsyncStorage.setItem('userToken', userToken);\n    //   } catch(e) {\n    //     console.log(e);\n    //   }\n    //   dispatch({ type: \"SIGNIN\", email: userEmail, token: userToken, firstName: userFirstName })\n    // },\n\n    signIn: async (inputEmail, inputPassword) => {\n      try {\n        await fireApp\n          .auth()\n          .signInWithEmailAndPassword(inputEmail, inputPassword);\n      } catch(e) {\n        // console.log(e);\n        dispatch({ type: \"SIGNINFAIL\", fail: e })\n        Alert.alert(\"User Not Found\", \"Your Account Info Does Not Match Our Records. Please Enter a Valid Username/Password.\", [\n          {text: \"Okay\"}, {style: \"destructive\"}\n        ]);\n        return;\n      }\n\n      const currUser = fireApp.auth().currentUser;\n      let userFirstName, userEmail, userToken;\n      if (currUser !== null) {\n        // console.log(currUser);\n        userFirstName = currUser.displayName;\n        userEmail = currUser.email;\n        userToken = currUser.uid\n        AsyncStorage.setItem('userToken', userToken);\n        userFirstName && AsyncStorage.setItem('userName', userFirstName);\n        dispatch({ type: \"SIGNIN\", email: userEmail, token: userToken, firstName: userFirstName })\n      }\n    },\n    signInFail: loginState.signInFail,\n    resetSignInFail: async () => {\n      dispatch({ type: \"SIGNINFAILRESET\" })\n    },\n\n    signOut: async () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await fireApp.auth().signOut()\n        await AsyncStorage.removeItem('userToken');\n        await AsyncStorage.removeItem('userName');\n        \n        // sign in anonymously whenever user signs out\n        firebase.auth().signInAnonymously()\n          .then(user => {\n            console.log(\"logged out, new anonymous made!\", user.uid)\n          })\n          .catch(err => console.log(err.code, err.message));\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: \"SIGNOUT\" })\n    },\n\n    signUp: async (inputEmail, inputPassword, inputFirstName) => {\n      // try {\n      //   const result = await fireApp\n      //     .auth()\n      //     .createUserWithEmailAndPassword(inputEmail, inputPassword)\n      //   await result.user.updateProfile({\n      //     displayName: inputFirstName\n      //   });\n      //   // console.log(result)\n      //   fireApp.auth().currentUser.linkWithCredential(result)\n      //   .then(usercred => {\n      //     const user = usercred.user;\n      //     console.log(\"Anonymous account successfully upgraded\", user);\n      //   })\n      // } catch (error) {\n      //   console.log(error);\n      // }\n      \n      try {\n        const credential = firebase.auth.EmailAuthProvider.credential(inputEmail, inputPassword);\n        firebase.auth().currentUser.linkWithCredential(credential)\n          .then(async usercred => {\n            const user = usercred.user;\n            await user.updateProfile({\n              displayName: inputFirstName,\n              email: inputEmail\n            }).then(async results => {\n              const currUser = fireApp.auth().currentUser;\n              let userFirstName, userEmail, userToken;\n              if (currUser !== null) {\n                userFirstName = currUser.displayName;\n                userToken = currUser.uid;\n                userEmail = currUser.email;\n                AsyncStorage.setItem('userToken', userToken);\n                userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                dispatch({ type: \"SIGNUP\", email: userEmail, token: userToken, firstName: userFirstName })\n              }\n            })\n            console.log(\"Anonymous account successfully upgraded with Email!\", user);\n          })\n      } catch (error) {\n        console.log(\"Error upgrading anonymous account with email\", error);\n      }\n    },\n\n    userToken: loginState.userToken,\n    userFirstName: loginState.userFirstName,\n\n    appleSignUp: async (inputEmail, givenName, familyName, credentialUserID) => {\n      // try {\n      //   const result = await fireApp\n      //     .auth()\n      //     .createUserWithEmailAndPassword(`${credentialUserID}@appleid.com`, credentialUserID)\n      //   await result.user.updateProfile({\n      //     displayName: givenName,\n      //     lastName: familyName,\n      //     privateRelayEmail: inputEmail\n      //   });\n      // } catch (error) {\n      //   console.log(error);\n      // }\n      if ((await fireApp.auth().fetchSignInMethodsForEmail(`${credentialUserID}@appleid.com`)).length > 0) {\n        await fireApp\n          .auth()\n          .signInWithEmailAndPassword(`${credentialUserID}@appleid.com`, credentialUserID);\n\n          const currUser = fireApp.auth().currentUser;\n          let userFirstName, userEmail, userToken;\n          if (currUser !== null) {\n            userFirstName = currUser.displayName;\n            userEmail = inputEmail;\n            userToken = currUser.uid;\n            AsyncStorage.setItem('userToken', userToken);\n            userFirstName && AsyncStorage.setItem('userName', userFirstName);\n            dispatch({ type: \"SIGNUP\", email: userEmail, token: userToken, firstName: userFirstName })\n          }\n\n      } else {\n        try {\n          const credential = firebase.auth.EmailAuthProvider.credential(`${credentialUserID}@appleid.com`, credentialUserID);\n          firebase.auth().currentUser.linkWithCredential(credential)\n            .then(async usercred => {\n              const user = usercred.user;\n              await user.updateProfile({\n                displayName: givenName,\n                lastName: familyName,\n                privateRelayEmail: inputEmail // just to hold onto just in case\n              }).then(async results => {\n                const currUser = fireApp.auth().currentUser;\n                let userFirstName, userEmail, userToken;\n                if (currUser !== null) {\n                  userFirstName = currUser.displayName;\n                  userEmail = inputEmail;\n                  userToken = currUser.uid;\n                  AsyncStorage.setItem('userToken', userToken);\n                  userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                  dispatch({ type: \"SIGNUP\", email: userEmail, token: userToken, firstName: userFirstName })\n                }\n              })\n              console.log(\"Anonymous account successfully upgraded with Apple!\", user);\n            })\n        } catch (error) {\n          console.log(\"Error upgrading anonymous account with Apple\", error);\n          return;\n        }\n      }\n\n    },\n\n    appleTokenIn: async (credentialUserID) => {\n      try {\n        await fireApp\n          .auth()\n          .signInWithEmailAndPassword(`${credentialUserID}@appleid.com`, credentialUserID);\n      } catch(e) {\n        console.log(e);\n        // alert(\"Your Account Info Does Not Match Our Records. Please Enter a Valid Username/Password.\");\n        Alert.alert(\"User Not Found\", \"Your Account Info Does Not Match Our Records. Please Enter a Valid Username/Password.\", [\n          {text: \"Okay\"}, {style: \"destructive\"}\n        ]);\n        return;\n      }\n\n      const currUser = fireApp.auth().currentUser;\n      let userFirstName, userToken;\n      if (currUser !== null) {\n        userFirstName = currUser.displayName;\n        // userEmail = currUser.email;\n        userToken = currUser.uid;\n        AsyncStorage.setItem('userToken', userToken);\n        userFirstName && AsyncStorage.setItem('userName', userFirstName);\n        dispatch({ type: \"SIGNIN\", token: userToken, firstName: userFirstName })\n      }\n    },\n\n    fbSignUp: async (email, first_name, last_name, userId, token) => {\n      // console.log(\"fetchSignInMethodsForEmail: \" + JSON.stringify(await fireApp.auth().fetchSignInMethodsForEmail(email)))\n      // console.log(userId);\n\n      if ((await fireApp.auth().fetchSignInMethodsForEmail(email || `${userId}@fbid.com`)).length > 0) {\n        await fireApp\n          .auth()\n          .signInWithEmailAndPassword(email || `${userId}@fbid.com`, userId);\n          \n        const currUser = fireApp.auth().currentUser;\n        let userFirstName, userEmail, userToken;\n        if (currUser !== null) {\n          userFirstName = currUser.displayName;\n          userToken = token;\n          userEmail = currUser.privateRelayEmail;\n          AsyncStorage.setItem('userToken', userToken);\n          userFirstName && AsyncStorage.setItem('userName', userFirstName);\n          dispatch({ type: \"SIGNUP\", email: userEmail, token: userToken, firstName: userFirstName })\n        }\n        return;\n\n      } else {\n        // do link with credential here instead since they will start as anonymous, then link.\n          // const result = await fireApp\n          //   .auth()\n          //   .createUserWithEmailAndPassword(email || `${userId}@fbid.com`, userId);\n          //   await result.user.updateProfile({\n          //     displayName: first_name,\n          //     lastName: last_name,\n          //     privateRelayEmail: email || `${userId}@fbid.com` // just to hold to onto just in case\n          // });\n\n          try {\n            const credential = firebase.auth.EmailAuthProvider.credential(email || `${userId}@fbid.com`, userId);\n            await firebase.auth().currentUser.linkWithCredential(credential)\n              .then(async usercred => {\n                const user = usercred.user;\n                await user.updateProfile({\n                  displayName: first_name,\n                  lastName: last_name,\n                  privateRelayEmail: email || `${userId}@fbid.com` // just to hold to onto just in case\n                }).then(async results => {\n                  const currUser = fireApp.auth().currentUser;\n                  let userFirstName, userEmail, userToken;\n                  if (currUser !== null) {\n                    userFirstName = currUser.displayName;\n                    userToken = token;\n                    userEmail = currUser.privateRelayEmail;\n                    AsyncStorage.setItem('userToken', userToken);\n                    userFirstName && AsyncStorage.setItem('userName', userFirstName);\n                    dispatch({ type: \"SIGNUP\", email: userEmail, token: userToken, firstName: userFirstName })\n                  }\n                })\n                console.log(\"Anonymous account successfully upgraded with Facebook!\", user);\n              })\n              return;\n          } catch (error) {\n            console.log(\"Error upgrading anonymous account with Facebook\", error);\n            return;\n          }\n      };\n    },\n\n    updateNameAndEmail: async (inputName, inputEmail, inputPassword) => {\n      const currUser = fireApp.auth().currentUser;\n      if (currUser) {\n        \n        // Updating first name\n        if (currUser.displayName !== inputName) {\n          currUser.updateProfile({\n            displayName: inputName,\n          }).then(() => {\n            inputName && AsyncStorage.setItem('userName', inputName);\n            dispatch({ type: \"UPDATEUSERNAME\", firstName: currUser.displayName })\n            console.log(`First name changed to ${currUser.displayName}!`)\n            Alert.alert(\"Success!\", `First name changed to ${currUser.displayName}!`, [\n              {text: \"Okay\"}\n            ]);\n          })\n        }\n        \n        // updating email\n        let credential;\n        try {\n          credential = firebase.auth.EmailAuthProvider.credential(currUser.email, inputPassword)\n          // console.log(\"credential:\", credential)\n        } catch (error) {\n          alert(error);\n          return;\n        }\n  \n        if (currUser.email !== inputEmail && credential) {\n          currUser.reauthenticateWithCredential(credential).then(() => {\n            console.log(\"reauthenticated user!\")\n          }).then(() => {\n            currUser.updateEmail(inputEmail).then(function() {\n              dispatch({ type: \"UPDATEUSEREMAIL\", email: currUser.email })\n              console.log(`email changed to ${inputEmail}!`)\n              Alert.alert(\"Success!\", `email changed to ${inputEmail}!`, [\n                {text: \"Okay\"}\n              ]);\n            }).catch(function(error) {\n              alert(error);\n              return;\n            })\n          })\n        }\n        // dispatch({ type: \"UPDATEUSERINFO\", email: currUser.email, firstName: currUser.displayName })\n      };\n    }\n  }));\n\n\n\n\n\n\n\n\n\n\n\n\n  // WHEN FIRST OPENING THE APP\n  // LOADING WHEEL INTRO - if user was already previously logged in\n  useEffect(() => {\n    setTimeout( async () => {\n      // setIsLoading(false);\n      \n      let userFirstName, userEmail, userToken;\n      const currUser = fireApp.auth().currentUser;\n\n      // if (currUser) {\n      //   console.log(\"existing curr user!\", currUser.uid);\n      // //   userEmail = currUser.email;\n      // //   userToken = currUser.uid;\n      //   AsyncStorage.setItem('userName', currUser.displayName || '');\n      //   AsyncStorage.setItem('userToken', currUser.uid);\n      // //   dispatch({ type: \"SIGNIN\", email: userEmail, token: userToken, firstName: userFirstName })\n      // }\n\n    \n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n        userFirstName = await AsyncStorage.getItem('userName');\n        // userToken = currUser ? currUser.uid : null;\n        // if (currUser !== null) userFirstName = currUser.displayName;\n        \n        if (!userToken && !currUser) {\n          // WHEN USER TRIES APP FOR FIRST TIME\n          firebase.auth().signInAnonymously()\n            .then(user => {\n              console.log(\"new Anonymous made!\", user.uid)\n            })\n            .catch(err => console.log(err.code, err.message));\n        } else {\n            console.log(\"existing curr user!\", currUser.uid || \"currUser ID not loaded\");\n            await AsyncStorage.setItem('userName', currUser.displayName || '');\n            await AsyncStorage.setItem('userToken', currUser.uid || \"currUser ID not loaded\");\n        }\n\n      } catch(e) {\n        console.log(e);\n      }\n\n      dispatch({ type: \"RETRIEVE_TOKEN\", token: userToken, firstName: userFirstName })\n      console.log(\"user token:\", userToken)\n      console.log(\"user email:\", currUser && currUser.email)\n      console.log(\"user firstName, logged in as:\", userFirstName)\n    }, 0)\n  }, [])\n  \n\n\n  if (loginState.isLoading) {\n    return (\n      <View style={{flex: 1, justifyContent: \"center\", alignItems: \"center\"}}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    )\n  }\n\n\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n          {/* {loginState.userToken ? <RootNavigator /> : <OnboardingStackScreen />} */}\n           <RootNavigator />\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n};\n\n\n\n\nimport BottomTabNavigator from './BottomTabNavigator';\nimport ProfileScreen from './tab-screens/ProfileScreen';\nimport SplashScreen from './SplashScreen';\nimport SignInScreen from './SignInScreen';\nimport SignUpScreen from './SignUpScreen';\nimport SignUpScreen2 from './SignUpScreen2';\nimport UserWelcomeScreen from './UserWelcomeScreen';\nimport MeditateExerciseScreen from '../navigation/tab-screens/meditate-screens-more/MeditateExerciseScreen';\nimport ExerciseVideo from '../components/ExerciseVideo';\n\nconst Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ScaleFromCenterAndroid }} name=\"SplashScreen\" component={SplashScreen} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ScaleFromCenterAndroid }} name=\"Memoir\" component={BottomTabNavigator} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ScaleFromCenterAndroid }} name=\"MeditateExerciseScreen\" component={MeditateExerciseScreen} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.RevealFromBottomAndroid }} name=\"ExerciseVideo\" component={ExerciseVideo} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ModalTransition }} name=\"SignUpScreen\" component={SignUpScreen} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ModalTransition }} name=\"SignUpScreen2\" component={SignUpScreen2} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.RevealFromBottomAndroid }} name=\"SignInScreen\" component={SignInScreen} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.FadeFromBottomAndroid }} name=\"UserWelcomeScreen\" component={UserWelcomeScreen} />\n      <Stack.Screen options={{headerShown:false, ...TransitionPresets.ScaleFromCenterAndroid }} name=\"Profile\" component={ProfileScreen} />\n    </Stack.Navigator>\n  )\n};"]},"metadata":{},"sourceType":"module"}
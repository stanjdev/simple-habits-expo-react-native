{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport OnboardingStackScreen from \"./OnboardingStackScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AuthContext } from \"../components/context\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Navigation() {\n  var initialLoginState = {\n    isLoading: true,\n    userEmail: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGNIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: action.email,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGNOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'SIGNUP':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userEmail: action.email,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(userEmail, password) {\n        var userToken;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = null;\n\n                if (!(userEmail === \"stan@email.com\" && password === \"pass\")) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.prev = 2;\n                userToken = \"asdf\";\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 11:\n                dispatch({\n                  type: \"SIGNIN\",\n                  email: userEmail,\n                  token: userToken\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 8]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: \"SIGNOUT\"\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {\n        setUserToken('asdf');\n        setIsLoading(false);\n      }\n    };\n  });\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: \"RETRIEVE_TOKEN\",\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, loginState.userToken ? React.createElement(RootNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 35\n    }\n  }) : React.createElement(OnboardingStackScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 55\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Memoir\",\n    component: BottomTabNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/index.jsx"],"names":["NavigationContainer","createStackNavigator","BottomTabNavigator","React","useEffect","useState","useMemo","OnboardingStackScreen","AuthContext","AsyncStorage","Navigation","initialLoginState","isLoading","userEmail","userToken","loginReducer","prevState","action","type","token","email","useReducer","loginState","dispatch","authContext","signIn","password","setItem","console","log","signOut","removeItem","signUp","setUserToken","setIsLoading","setTimeout","getItem","flex","justifyContent","alignItems","Stack","RootNavigator"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport OnboardingStackScreen from './OnboardingStackScreen';\nimport { View, ActivityIndicator } from 'react-native';\n\nimport { AuthContext } from '../components/context';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function Navigation() {\n  // Going with useReducer global state instead, this was just simple demonstration.\n  // const [userToken, setUserToken] = React.useState(null);\n  // const [isLoading, setIsLoading] = React.useState(true);\n  \n  const initialLoginState = {\n    isLoading: true,\n    userEmail: null,\n    userToken: null\n  }\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false\n        }\n      case 'SIGNIN':\n        return {\n          ...prevState,\n          userEmail: action.email,\n          userToken: action.token,\n          isLoading: false\n        }\n      case 'SIGNOUT':\n        return {\n          ...prevState,\n          userEmail: null,\n          userToken: null,\n          isLoading: false\n        }\n      case 'SIGNUP':\n        return {\n          ...prevState,\n          userEmail: action.email,\n          userToken: action.token,\n          isLoading: false\n        }\n    }\n  }\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n\n\n  const authContext = React.useMemo(() => ({\n    signIn: async (userEmail, password) => {\n      // setUserToken('asdf');\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      if (userEmail === \"stan@email.com\" && password === \"pass\") {\n        try {\n          userToken = \"asdf\"\n          await AsyncStorage.setItem('userToken', userToken);\n        } catch(e) {\n          console.log(e);\n        }\n      }\n      dispatch({ type: \"SIGNIN\", email: userEmail, token: userToken })\n    },\n    signOut: async () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: \"SIGNOUT\" })\n    },\n    signUp: () => {\n      setUserToken('asdf');\n      setIsLoading(false);\n    }\n  }));\n\n  // LOADING WHEEL INTRO - if user was already previously logged in\n  useEffect(() => {\n    setTimeout( async () => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: \"RETRIEVE_TOKEN\", token: userToken })\n    }, 1000)\n  }, [])\n  if (loginState.isLoading) {\n    return (\n      <View style={{flex: 1, justifyContent: \"center\", alignItems: \"center\"}}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    )\n  }\n\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n          {loginState.userToken ? <RootNavigator /> : <OnboardingStackScreen />}\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Memoir\" component={BottomTabNavigator} />\n    </Stack.Navigator>\n  )\n}"]},"metadata":{},"sourceType":"module"}
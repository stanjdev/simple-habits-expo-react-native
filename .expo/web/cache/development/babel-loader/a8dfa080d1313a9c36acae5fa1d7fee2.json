{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/ProfileScreen.jsx\";\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts } from 'expo-font';\nimport { AuthContext } from \"../../components/context\";\nimport { useIsFocused } from '@react-navigation/native';\nimport ProfileStatsBlock from \"../../components/ProfileStatsBlock\";\nimport CreateAccountPopup from \"../../components/CreateAccountPopup\";\nimport AppButton from \"../../components/AppButton\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport Modal from 'react-native-modal';\nimport * as WebBrowser from 'expo-web-browser';\nimport firebase from 'firebase';\nexport default function ProfileScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useContext = useContext(AuthContext),\n      signOut = _useContext.signOut,\n      userToken = _useContext.userToken,\n      userFirstName = _useContext.userFirstName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPopUp = _useState2[0],\n      setShowPopup = _useState2[1];\n\n  useEffect(function () {\n    if (currUser && currUser.isAnonymous || !userToken) {\n      setTimeout(function () {\n        isFocused ? setShowPopup(true) : setShowPopup(false);\n      }, 500);\n    } else {\n      setShowPopup(false);\n    }\n  }, [isFocused]);\n\n  var _useFonts = useFonts({\n    'Assistant': require(\"../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf\"),\n    'Assistant-Regular': require(\"../../assets/fonts/Assistant/static/Assistant-Regular.ttf\"),\n    'Assistant-SemiBold': require(\"../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState3 = useState({\n    practiceTime: 0,\n    sessionsCompleted: 0,\n    currentStreak: 0,\n    bestStreak: 0,\n    lastDateExercised: 0,\n    bestStreakDate: 0,\n    bestStreakMonth: 0,\n    bestStreakYear: 2021\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userProgress = _useState4[0],\n      setUserProgress = _useState4[1];\n\n  var practiceTime = userProgress.practiceTime,\n      sessionsCompleted = userProgress.sessionsCompleted,\n      currentStreak = userProgress.currentStreak,\n      bestStreak = userProgress.bestStreak,\n      lastDateExercised = userProgress.lastDateExercised,\n      bestStreakDate = userProgress.bestStreakDate,\n      bestStreakMonth = userProgress.bestStreakMonth,\n      bestStreakYear = userProgress.bestStreakYear;\n  var currUser = firebase.auth().currentUser;\n  var progressRef = currUser ? firebase.database().ref(currUser.uid).child('progress') : null;\n\n  var getProgress = function getProgress() {\n    progressRef.on('value', function (snapshot) {\n      if (snapshot.val()) {\n        setUserProgress({\n          practiceTime: snapshot.val().practiceTime || 0,\n          sessionsCompleted: snapshot.val().sessionsCompleted || 0,\n          currentStreak: snapshot.val().currentStreak || 0,\n          bestStreak: snapshot.val().bestStreak || 0,\n          lastDateExercised: snapshot.val().lastDateExercised || 0,\n          bestStreakDate: snapshot.val().bestStreakDate || 0,\n          bestStreakMonth: snapshot.val().bestStreakMonth || 0,\n          bestStreakYear: snapshot.val().bestStreakYear || 0\n        });\n      }\n    });\n  };\n\n  useEffect(function () {\n    if (currUser) {\n      getProgress();\n    }\n  }, [userToken, currUser]);\n  var fiveHrGoal = useRef();\n\n  var renderPracticeTime = function renderPracticeTime() {\n    var past5Hours = practiceTime;\n    var fiveHours = 18000;\n    var count = 1;\n\n    while (past5Hours > fiveHours) {\n      past5Hours -= fiveHours;\n      count++;\n    }\n\n    var ceil = count * fiveHours / 60 / 60;\n    var totalSeconds = count * fiveHours;\n    fiveHrGoal.current = totalSeconds;\n    return practiceTime < 1800 ? React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-timer.png\"),\n      title: \"Total Practice Time\",\n      seconds: practiceTime,\n      number: (practiceTime / 60).toFixed(1),\n      subtitle: \"Minutes\",\n      subText: \"30 min Goal\",\n      progress: Math.max(practiceTime, 0.01) / 60 / 60 / 0.5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 34\n      }\n    }) : practiceTime >= 1800 && practiceTime < 7200 ? React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-timer.png\"),\n      title: \"Total Practice Time\",\n      number: (practiceTime / 60 / 60).toFixed(1),\n      subtitle: \"Hours\",\n      subText: \"2hr Goal\",\n      progress: practiceTime / 60 / 60 / 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 53\n      }\n    }) : practiceTime >= 7200 && practiceTime < 18000 ? React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-timer.png\"),\n      title: \"Total Practice Time\",\n      number: (practiceTime / 60 / 60).toFixed(1),\n      subtitle: \"Hours\",\n      subText: \"5hr Goal\",\n      progress: practiceTime / 60 / 60 / 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 54\n      }\n    }) : practiceTime >= fiveHours ? React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-timer.png\"),\n      title: \"Total Practice Time\",\n      number: (practiceTime / 60 / 60).toFixed(1),\n      subtitle: \"Hours\",\n      subText: ceil + \"hr Goal\",\n      progress: practiceTime / 60 / 60 / ceil,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 35\n      }\n    }) : React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-timer.png\"),\n      title: \"Total Practice Time\",\n      number: \"0\",\n      subtitle: \"Hours\",\n      subText: \"5hr Goal\",\n      progress: 0.01,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dismissedTimeGoal = _useState6[0],\n      setDismissedTimeGoal = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dismissedSessions = _useState8[0],\n      setDismissedSessions = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dismissedCurrStreak = _useState10[0],\n      setDismissedCurrStreak = _useState10[1];\n\n  var bestStreakSoFar = useRef();\n  var timeConditions = practiceTime < 1800 ? 1800 : practiceTime >= 1800 && practiceTime < 7200 ? 7200 : practiceTime >= 7200 && practiceTime < 18000 ? 18000 : practiceTime >= 18000 ? fiveHrGoal.current : null;\n  var timeGoal = useRef();\n  useEffect(function () {\n    timeGoal.current = timeConditions;\n  }, []);\n  useEffect(function () {\n    if (sessionsCompleted == 0 || currentStreak == 0) return;\n    if (sessionsCompleted % 10 !== 0) setDismissedSessions(false);\n    if (currentStreak % 10 !== 0) setDismissedCurrStreak(false);\n\n    if (isFocused && practiceTime >= timeGoal.current && !dismissedTimeGoal && Math.trunc(timeGoal.current) !== 0) {\n      setTimeout(function () {\n        setTimeGoalVisible(true);\n      }, 1500);\n    }\n\n    console.log(practiceTime, fiveHrGoal.current, timeGoal.current);\n\n    if (isFocused && sessionsCompleted % 10 == 0 && !dismissedSessions) {\n      setTimeout(function () {\n        setSessionsGoalVisible(true);\n      }, 1500);\n    }\n\n    if (isFocused && currentStreak % 10 == 0 && !dismissedCurrStreak) {\n      setTimeout(function () {\n        setCurrStreakGoalVisible(true);\n      }, 1500);\n    }\n\n    if (isFocused && bestStreakSoFar.current && bestStreak !== bestStreakSoFar.current) {\n      setTimeout(function () {\n        setBestStreakGoalVisible(true);\n      }, 1500);\n    }\n\n    bestStreakSoFar.current = bestStreak;\n  }, [isFocused]);\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      timeGoalVisible = _useState12[0],\n      setTimeGoalVisible = _useState12[1];\n\n  var dismissTimeGoalAlert = function dismissTimeGoalAlert() {\n    setTimeGoalVisible(false);\n    setDismissedTimeGoal(true);\n    setTimeout(function () {\n      timeGoal.current = timeConditions;\n      setDismissedTimeGoal(false);\n    }, 1000);\n  };\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sessionsGoalVisible = _useState14[0],\n      setSessionsGoalVisible = _useState14[1];\n\n  var dismissSessionsGoalAlert = function dismissSessionsGoalAlert() {\n    setSessionsGoalVisible(false);\n    setDismissedSessions(true);\n  };\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currStreakGoalVisible = _useState16[0],\n      setCurrStreakGoalVisible = _useState16[1];\n\n  var dismissCurrStreakGoalVisible = function dismissCurrStreakGoalVisible() {\n    setCurrStreakGoalVisible(false);\n    setDismissedCurrStreak(true);\n  };\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      bestStreakGoalVisible = _useState18[0],\n      setBestStreakGoalVisible = _useState18[1];\n\n  var dismissBestStreakGoalVisible = function dismissBestStreakGoalVisible() {\n    setBestStreakGoalVisible(false);\n  };\n\n  var renderMovingSessionsGoal = function renderMovingSessionsGoal(sessionsCompleted) {\n    var rightMostNum = sessionsCompleted % 10;\n    var remainder = 10 - rightMostNum;\n    var ceil = sessionsCompleted + remainder;\n    return React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-hash.png\"),\n      title: \"Sessions Completed\",\n      number: sessionsCompleted,\n      subtitle: sessionsCompleted === 1 ? \"Session\" : \"Sessions\",\n      subText: ceil + \" Session Goal\",\n      progress: Math.max(sessionsCompleted, 0.01) / ceil,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderMovingStreakGoal = function renderMovingStreakGoal(currentStreak) {\n    var rightMostNum = currentStreak % 10;\n    var remainder = 10 - rightMostNum;\n    var ceil = currentStreak + remainder;\n    return React.createElement(ProfileStatsBlock, {\n      icon: require(\"../../assets/screen-icons/profile-arrow.png\"),\n      title: \"Current Streak\",\n      number: currentStreak,\n      subtitle: currentStreak === 1 ? \"Day\" : \"Days\",\n      subText: ceil + \" Day Streak Goal\",\n      progress: Math.max(currentStreak, 0.01) / ceil,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1,\n      resizeMode: \"cover\",\n      justifyContent: \"flex-start\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, isFocused ? React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    hidden: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 20\n    }\n  }) : null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: {\n      position: \"absolute\",\n      left: width * 0.02,\n      top: height * 0.045,\n      zIndex: 100,\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/back-arrow.png\"),\n    style: {\n      height: 20\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SettingsScreen');\n    },\n    style: {\n      position: \"absolute\",\n      right: width * 0.05,\n      top: height * 0.045,\n      zIndex: 100,\n      paddingBottom: 10,\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/screen-icons/gear-grey.png\"),\n    style: {\n      height: 32,\n      width: 60\n    },\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: height < 600 ? 20 : 23,\n      fontFamily: \"Assistant-SemiBold\",\n      position: \"absolute\",\n      width: width,\n      top: height * 0.057,\n      color: '#535353'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, userFirstName ? String(userFirstName).charAt(0).toUpperCase() + String(userFirstName).slice(1) + \"'s Progress\" : \"Your Progress\"), React.createElement(View, {\n    style: {\n      height: height,\n      marginTop: Math.min(height * 0.05, 20)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: height,\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, React.createElement(CustomAlert, {\n    header: \"Great Job!\",\n    message: (practiceTime < 3600 ? Math.trunc(practiceTime / 60) : Math.trunc(practiceTime / 60 / 60)) + \" Minutes of Practice Time\",\n    isVisible: timeGoalVisible,\n    onPress: dismissTimeGoalAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }), React.createElement(CustomAlert, {\n    header: \"Well Done!\",\n    message: sessionsCompleted + \" Total Sessions\",\n    isVisible: sessionsGoalVisible,\n    onPress: dismissSessionsGoalAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }), React.createElement(CustomAlert, {\n    header: \"Nice Streak!\",\n    message: \"a \" + currentStreak + \"-Day Streak\",\n    isVisible: currStreakGoalVisible,\n    onPress: dismissCurrStreakGoalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), React.createElement(CustomAlert, {\n    header: \"New Best Streak! \",\n    message: bestStreak + \" Days!\",\n    isVisible: bestStreakGoalVisible,\n    onPress: dismissBestStreakGoalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, renderPracticeTime(), renderMovingSessionsGoal(sessionsCompleted), renderMovingStreakGoal(currentStreak), React.createElement(ProfileStatsBlock, {\n    icon: require(\"../../assets/screen-icons/profile-rocket.png\"),\n    title: \"Best Streak\",\n    number: bestStreak,\n    subtitle: bestStreak === 1 ? \"Day\" : \"Days\",\n    subText: bestStreakDate === 0 ? \"\" : \"Achieved \" + bestStreakMonth + \"/\" + bestStreakDate + \"/\" + bestStreakYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      height: 150,\n      justifyContent: \"space-evenly\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, React.createElement(FeedbackCard, {\n    text: \"We're currently in beta. Send us a suggestion or report a bug.\",\n    callToActionText: \"Send Us Feedback\",\n    url: \"https://memoirapp.squarespace.com/contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  })))), showPopUp ? React.createElement(CreateAccountPopup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }) : null);\n}\n;\nvar styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: width < 330 ? 35 : Math.min(height * 0.07, 44),\n    width: 225,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: width < 330 ? 19 : 21,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  buttonCard: {\n    backgroundColor: \"white\",\n    height: width < 330 ? 90 : Math.min(height * 0.2, 134),\n    width: 293,\n    borderRadius: 15,\n    shadowRadius: 4,\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 2,\n      height: 3\n    },\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    marginTop: -20\n  },\n  cardText: {\n    width: 230,\n    textAlign: \"center\",\n    fontFamily: \"Assistant-Regular\",\n    fontSize: width < 330 ? 15 : 17,\n    lineHeight: width < 330 ? 17 : 19.96\n  }\n});\nexport function FeedbackCard(_ref2) {\n  var text = _ref2.text,\n      callToActionText = _ref2.callToActionText,\n      url = _ref2.url;\n  return React.createElement(View, {\n    style: styles.buttonCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.cardText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }\n  }, text), React.createElement(AppButton, {\n    title: callToActionText,\n    buttonStyles: styles.blueButton,\n    buttonTextStyles: styles.buttonText,\n    onPress: function onPress() {\n      return WebBrowser.openBrowserAsync(url);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }\n  }));\n}\n;\nexport function CustomAlert(_ref3) {\n  var header = _ref3.header,\n      message = _ref3.message,\n      isVisible = _ref3.isVisible,\n      onPress = _ref3.onPress;\n  return React.createElement(Modal, {\n    isVisible: isVisible,\n    deviceHeight: width,\n    deviceHeight: height,\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    backdropOpacity: 0.6,\n    animationInTiming: 600,\n    animationOutTiming: 600,\n    animationIn: \"fadeInUp\",\n    animationOut: \"fadeOutDown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 208,\n      width: 317,\n      borderRadius: 15,\n      backgroundColor: \"white\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#3681C7\",\n      fontSize: 26,\n      fontFamily: \"Assistant-SemiBold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, header), React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      textAlign: \"center\",\n      fontFamily: \"Assistant-Regular\",\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 11\n    }\n  }, \"You've accomplished\", \"\\n\", message)), React.createElement(AppButton, {\n    title: \"Continue\",\n    buttonStyles: styles.blueButton,\n    buttonTextStyles: styles.buttonText,\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  })));\n}\n;","map":{"version":3,"sources":["/Users/stanleyjeong/Desktop/_CODING/_PROJECTS 25 projects/z_SJ_Portfolio 2020/MEMOIR/Memoir/navigation/tab-screens/ProfileScreen.jsx"],"names":["React","useEffect","useState","useContext","useRef","useFonts","AuthContext","useIsFocused","ProfileStatsBlock","CreateAccountPopup","AppButton","Dimensions","get","width","height","Modal","WebBrowser","firebase","ProfileScreen","navigation","isFocused","signOut","userToken","userFirstName","showPopUp","setShowPopup","currUser","isAnonymous","setTimeout","require","fontsLoaded","practiceTime","sessionsCompleted","currentStreak","bestStreak","lastDateExercised","bestStreakDate","bestStreakMonth","bestStreakYear","userProgress","setUserProgress","auth","currentUser","progressRef","database","ref","uid","child","getProgress","on","snapshot","val","fiveHrGoal","renderPracticeTime","past5Hours","fiveHours","count","ceil","totalSeconds","current","toFixed","Math","max","dismissedTimeGoal","setDismissedTimeGoal","dismissedSessions","setDismissedSessions","dismissedCurrStreak","setDismissedCurrStreak","bestStreakSoFar","timeConditions","timeGoal","trunc","setTimeGoalVisible","console","log","setSessionsGoalVisible","setCurrStreakGoalVisible","setBestStreakGoalVisible","timeGoalVisible","dismissTimeGoalAlert","sessionsGoalVisible","dismissSessionsGoalAlert","currStreakGoalVisible","dismissCurrStreakGoalVisible","bestStreakGoalVisible","dismissBestStreakGoalVisible","renderMovingSessionsGoal","rightMostNum","remainder","renderMovingStreakGoal","backgroundColor","flex","resizeMode","justifyContent","goBack","position","left","top","zIndex","padding","navigate","right","paddingBottom","paddingTop","textAlign","fontSize","fontFamily","color","String","charAt","toUpperCase","slice","marginTop","min","flexDirection","alignItems","flexWrap","styles","StyleSheet","create","blueButton","borderRadius","buttonText","buttonCard","shadowRadius","shadowColor","shadowOpacity","shadowOffset","cardText","lineHeight","FeedbackCard","text","callToActionText","url","openBrowserAsync","CustomAlert","header","message","isVisible","onPress"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;;;;;;;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,WAAT;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,iBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,SAAP;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AAEf,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAGA,eAAe,SAASC,aAAT,OAAqC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAClD,MAAMC,SAAS,GAAGb,YAAY,EAA9B;;AADkD,oBAEJJ,UAAU,CAACG,WAAD,CAFN;AAAA,MAE1Ce,OAF0C,eAE1CA,OAF0C;AAAA,MAEjCC,SAFiC,eAEjCA,SAFiC;AAAA,MAEtBC,aAFsB,eAEtBA,aAFsB;;AAAA,kBAIhBrB,QAAQ,CAAC,KAAD,CAJQ;AAAA;AAAA,MAI3CsB,SAJ2C;AAAA,MAIhCC,YAJgC;;AAMlDxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,QAAQ,IAAIA,QAAQ,CAACC,WAArB,IAAoC,CAACL,SAAzC,EAAoD;AAClDM,MAAAA,UAAU,CAAC,YAAM;AACfR,QAAAA,SAAS,GAAGK,YAAY,CAAC,IAAD,CAAf,GAAwBA,YAAY,CAAC,KAAD,CAA7C;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAJD,MAIO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GARQ,EAQN,CAACL,SAAD,CARM,CAAT;;AANkD,kBAgB9Bf,QAAQ,CAAC;AAC3B,iBAAawB,OAAO,gEADO;AAE3B,yBAAqBA,OAAO,6DAFD;AAG3B,0BAAsBA,OAAO;AAHF,GAAD,CAhBsB;AAAA;AAAA,MAgB7CC,WAhB6C;;AAAA,mBAsBV5B,QAAQ,CAAC;AAC/C6B,IAAAA,YAAY,EAAE,CADiC;AAE/CC,IAAAA,iBAAiB,EAAE,CAF4B;AAG/CC,IAAAA,aAAa,EAAE,CAHgC;AAI/CC,IAAAA,UAAU,EAAE,CAJmC;AAK/CC,IAAAA,iBAAiB,EAAE,CAL4B;AAM/CC,IAAAA,cAAc,EAAE,CAN+B;AAO/CC,IAAAA,eAAe,EAAE,CAP8B;AAQ/CC,IAAAA,cAAc,EAAE;AAR+B,GAAD,CAtBE;AAAA;AAAA,MAsB3CC,YAtB2C;AAAA,MAsB7BC,eAtB6B;;AAAA,MAiC1CT,YAjC0C,GAiCyFQ,YAjCzF,CAiC1CR,YAjC0C;AAAA,MAiC5BC,iBAjC4B,GAiCyFO,YAjCzF,CAiC5BP,iBAjC4B;AAAA,MAiCTC,aAjCS,GAiCyFM,YAjCzF,CAiCTN,aAjCS;AAAA,MAiCMC,UAjCN,GAiCyFK,YAjCzF,CAiCML,UAjCN;AAAA,MAiCkBC,iBAjClB,GAiCyFI,YAjCzF,CAiCkBJ,iBAjClB;AAAA,MAiCqCC,cAjCrC,GAiCyFG,YAjCzF,CAiCqCH,cAjCrC;AAAA,MAiCqDC,eAjCrD,GAiCyFE,YAjCzF,CAiCqDF,eAjCrD;AAAA,MAiCsEC,cAjCtE,GAiCyFC,YAjCzF,CAiCsED,cAjCtE;AAmClD,MAAMZ,QAAQ,GAAGT,QAAQ,CAACwB,IAAT,GAAgBC,WAAjC;AACA,MAAMC,WAAW,GAAGjB,QAAQ,GAAGT,QAAQ,CAAC2B,QAAT,GAAoBC,GAApB,CAAwBnB,QAAQ,CAACoB,GAAjC,EAAsCC,KAAtC,CAA4C,UAA5C,CAAH,GAA6D,IAAzF;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,WAAW,CAACM,EAAZ,CAAe,OAAf,EAAwB,UAAAC,QAAQ,EAAI;AAClC,UAAIA,QAAQ,CAACC,GAAT,EAAJ,EAAoB;AAClBX,QAAAA,eAAe,CAAC;AACdT,UAAAA,YAAY,EAAEmB,QAAQ,CAACC,GAAT,GAAepB,YAAf,IAA+B,CAD/B;AAEdC,UAAAA,iBAAiB,EAAEkB,QAAQ,CAACC,GAAT,GAAenB,iBAAf,IAAoC,CAFzC;AAGdC,UAAAA,aAAa,EAAEiB,QAAQ,CAACC,GAAT,GAAelB,aAAf,IAAgC,CAHjC;AAIdC,UAAAA,UAAU,EAAEgB,QAAQ,CAACC,GAAT,GAAejB,UAAf,IAA6B,CAJ3B;AAKdC,UAAAA,iBAAiB,EAAEe,QAAQ,CAACC,GAAT,GAAehB,iBAAf,IAAoC,CALzC;AAMdC,UAAAA,cAAc,EAAEc,QAAQ,CAACC,GAAT,GAAef,cAAf,IAAiC,CANnC;AAOdC,UAAAA,eAAe,EAAEa,QAAQ,CAACC,GAAT,GAAed,eAAf,IAAkC,CAPrC;AAQdC,UAAAA,cAAc,EAAEY,QAAQ,CAACC,GAAT,GAAeb,cAAf,IAAiC;AARnC,SAAD,CAAf;AAUD;AACF,KAbD;AAcD,GAfD;;AAiBArC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,QAAJ,EAAc;AACZsB,MAAAA,WAAW;AACZ;AAEF,GALQ,EAKN,CAAC1B,SAAD,EAAYI,QAAZ,CALM,CAAT;AA0BA,MAAM0B,UAAU,GAAGhD,MAAM,EAAzB;;AAEA,MAAMiD,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAIC,UAAU,GAAGvB,YAAjB;AACA,QAAIwB,SAAS,GAAG,KAAhB;AAEA,QAAIC,KAAK,GAAG,CAAZ;;AACA,WAAOF,UAAU,GAAGC,SAApB,EAA+B;AAC7BD,MAAAA,UAAU,IAAIC,SAAd;AACAC,MAAAA,KAAK;AACN;;AACD,QAAIC,IAAI,GAAID,KAAK,GAAGD,SAAR,GAAoB,EAApB,GAAyB,EAArC;AACA,QAAIG,YAAY,GAAGF,KAAK,GAAGD,SAA3B;AACAH,IAAAA,UAAU,CAACO,OAAX,GAAqBD,YAArB;AAEA,WAAO3B,YAAY,GAAG,IAAf,GAAsB,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEF,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,qBAAvF;AAA6G,MAAA,OAAO,EAAEE,YAAtH;AAAoI,MAAA,MAAM,EAAE,CAACA,YAAY,GAAG,EAAhB,EAAqB6B,OAArB,CAA6B,CAA7B,CAA5I;AAA6K,MAAA,QAAQ,EAAC,SAAtL;AAAgM,MAAA,OAAO,EAAC,aAAxM;AAAsN,MAAA,QAAQ,EAAGC,IAAI,CAACC,GAAL,CAAS/B,YAAT,EAAuB,IAAvB,IAA+B,EAA/B,GAAoC,EAArC,GAA2C,GAA3Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GACLA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,IAAvC,GAA8C,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEF,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,qBAAvF;AAA6G,MAAA,MAAM,EAAE,CAACE,YAAY,GAAG,EAAf,GAAoB,EAArB,EAAyB6B,OAAzB,CAAiC,CAAjC,CAArH;AAA0J,MAAA,QAAQ,EAAC,OAAnK;AAA2K,MAAA,OAAO,EAAC,UAAnL;AAA8L,MAAA,QAAQ,EAAG7B,YAAY,GAAG,EAAf,GAAoB,EAArB,GAA2B,CAAnO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,GACAA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,KAAvC,GAA+C,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEF,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,qBAAvF;AAA6G,MAAA,MAAM,EAAE,CAACE,YAAY,GAAG,EAAf,GAAoB,EAArB,EAAyB6B,OAAzB,CAAiC,CAAjC,CAArH;AAA0J,MAAA,QAAQ,EAAC,OAAnK;AAA2K,MAAA,OAAO,EAAC,UAAnL;AAA8L,MAAA,QAAQ,EAAG7B,YAAY,GAAG,EAAf,GAAoB,EAArB,GAA2B,CAAnO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/C,GACAA,YAAY,IAAIwB,SAAhB,GAA4B,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE1B,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,qBAAvF;AAA6G,MAAA,MAAM,EAAE,CAACE,YAAY,GAAG,EAAf,GAAoB,EAArB,EAAyB6B,OAAzB,CAAiC,CAAjC,CAArH;AAA0J,MAAA,QAAQ,EAAC,OAAnK;AAA2K,MAAA,OAAO,EAAKH,IAAL,YAAlL;AAAsM,MAAA,QAAQ,EAAG1B,YAAY,GAAG,EAAf,GAAoB,EAArB,GAA2B0B,IAA3O;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,GACA,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE5B,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,qBAAvF;AAA6G,MAAA,MAAM,EAAC,GAApH;AAAwH,MAAA,QAAQ,EAAC,OAAjI;AAAyI,MAAA,OAAO,EAAC,UAAjJ;AAA4J,MAAA,QAAQ,EAAE,IAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AAKD,GAlBD;;AAnFkD,mBAyGA3B,QAAQ,CAAC,KAAD,CAzGR;AAAA;AAAA,MAyG3C6D,iBAzG2C;AAAA,MAyGxBC,oBAzGwB;;AAAA,mBA0GA9D,QAAQ,CAAC,KAAD,CA1GR;AAAA;AAAA,MA0G3C+D,iBA1G2C;AAAA,MA0GxBC,oBA1GwB;;AAAA,mBA2GIhE,QAAQ,CAAC,KAAD,CA3GZ;AAAA;AAAA,MA2G3CiE,mBA3G2C;AAAA,MA2GtBC,sBA3GsB;;AA4GlD,MAAMC,eAAe,GAAGjE,MAAM,EAA9B;AAEA,MAAMkE,cAAc,GAAGvC,YAAY,GAAG,IAAf,GAAsB,IAAtB,GACvBA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,IAAvC,GAA8C,IAA9C,GACAA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,KAAvC,GAA+C,KAA/C,GACAA,YAAY,IAAI,KAAhB,GAAwBqB,UAAU,CAACO,OAAnC,GAA6C,IAH7C;AAKA,MAAMY,QAAQ,GAAGnE,MAAM,EAAvB;AACAH,EAAAA,SAAS,CAAC,YAAM;AACdsE,IAAAA,QAAQ,CAACZ,OAAT,GAAmBW,cAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAKArE,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI+B,iBAAiB,IAAI,CAArB,IAA0BC,aAAa,IAAI,CAA/C,EAAkD;AAClD,QAAID,iBAAiB,GAAG,EAApB,KAA2B,CAA/B,EAAkCkC,oBAAoB,CAAC,KAAD,CAApB;AAClC,QAAIjC,aAAa,GAAG,EAAhB,KAAuB,CAA3B,EAA8BmC,sBAAsB,CAAC,KAAD,CAAtB;;AAE9B,QAAIhD,SAAS,IAAIW,YAAY,IAAIwC,QAAQ,CAACZ,OAAtC,IAAiD,CAACI,iBAAlD,IAAuEF,IAAI,CAACW,KAAL,CAAWD,QAAQ,CAACZ,OAApB,MAAiC,CAA5G,EAA+G;AAC7G/B,MAAAA,UAAU,CAAC,YAAM;AACf6C,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAFS,EAEP,IAFO,CAAV;AAYD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY5C,YAAZ,EAA0BqB,UAAU,CAACO,OAArC,EAA8CY,QAAQ,CAACZ,OAAvD;;AAEA,QAAIvC,SAAS,IAAIY,iBAAiB,GAAG,EAApB,IAA0B,CAAvC,IAA4C,CAACiC,iBAAjD,EAAoE;AAClErC,MAAAA,UAAU,CAAC,YAAM;AACfgD,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,OAFS,EAEP,IAFO,CAAV;AAMD;;AAED,QAAIxD,SAAS,IAAIa,aAAa,GAAG,EAAhB,IAAsB,CAAnC,IAAwC,CAACkC,mBAA7C,EAAkE;AAChEvC,MAAAA,UAAU,CAAC,YAAM;AACfiD,QAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,OAFS,EAEP,IAFO,CAAV;AAMD;;AAED,QAAIzD,SAAS,IAAIiD,eAAe,CAACV,OAA7B,IAAwCzB,UAAU,KAAKmC,eAAe,CAACV,OAA3E,EAAoF;AAClF/B,MAAAA,UAAU,CAAC,YAAM;AACfkD,QAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,OAFS,EAEP,IAFO,CAAV;AAMD;;AACDT,IAAAA,eAAe,CAACV,OAAhB,GAA0BzB,UAA1B;AAED,GAjDQ,EAiDN,CAACd,SAAD,CAjDM,CAAT;;AAzHkD,oBA8KJlB,QAAQ,CAAC,KAAD,CA9KJ;AAAA;AAAA,MA8K3C6E,eA9K2C;AAAA,MA8K1BN,kBA9K0B;;AA+KlD,MAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCP,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAT,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACApC,IAAAA,UAAU,CAAC,YAAM;AACf2C,MAAAA,QAAQ,CAACZ,OAAT,GAAmBW,cAAnB;AACAN,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAPD;;AA/KkD,oBAwLI9D,QAAQ,CAAC,KAAD,CAxLZ;AAAA;AAAA,MAwL3C+E,mBAxL2C;AAAA,MAwLtBL,sBAxLsB;;AAyLlD,MAAMM,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCN,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAV,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAHD;;AAzLkD,oBA8LQhE,QAAQ,CAAC,KAAD,CA9LhB;AAAA;AAAA,MA8L3CiF,qBA9L2C;AAAA,MA8LpBN,wBA9LoB;;AA+LlD,MAAMO,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzCP,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAT,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAHD;;AA/LkD,oBAoMQlE,QAAQ,CAAC,KAAD,CApMhB;AAAA;AAAA,MAoM3CmF,qBApM2C;AAAA,MAoMpBP,wBApMoB;;AAqMlD,MAAMQ,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AACzCR,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,GAFD;;AAMA,MAAMS,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACvD,iBAAD,EAAuB;AACtD,QAAIwD,YAAY,GAAGxD,iBAAiB,GAAG,EAAvC;AACA,QAAIyD,SAAS,GAAG,KAAKD,YAArB;AACA,QAAI/B,IAAI,GAAGzB,iBAAiB,GAAGyD,SAA/B;AACA,WAAO,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE5D,OAAO,8CAAhC;AAAgF,MAAA,KAAK,EAAC,oBAAtF;AAA2G,MAAA,MAAM,EAAEG,iBAAnH;AAAsI,MAAA,QAAQ,EAAEA,iBAAiB,KAAK,CAAtB,GAA0B,SAA1B,GAAsC,UAAtL;AAAkM,MAAA,OAAO,EAAKyB,IAAL,kBAAzM;AAAmO,MAAA,QAAQ,EAAGI,IAAI,CAACC,GAAL,CAAS9B,iBAAT,EAA4B,IAA5B,IAAoCyB,IAAlR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAOA,MAAMiC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACzD,aAAD,EAAmB;AAChD,QAAIuD,YAAY,GAAGvD,aAAa,GAAG,EAAnC;AACA,QAAIwD,SAAS,GAAG,KAAKD,YAArB;AACA,QAAI/B,IAAI,GAAGxB,aAAa,GAAGwD,SAA3B;AACA,WAAO,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE5D,OAAO,+CAAhC;AAAiF,MAAA,KAAK,EAAC,gBAAvF;AAAwG,MAAA,MAAM,EAAEI,aAAhH;AAA+H,MAAA,QAAQ,EAAEA,aAAa,KAAK,CAAlB,GAAsB,KAAtB,GAA8B,MAAvK;AAA+K,MAAA,OAAO,EAAKwB,IAAL,qBAAtL;AAAmN,MAAA,QAAQ,EAAGI,IAAI,CAACC,GAAL,CAAS7B,aAAT,EAAwB,IAAxB,IAAgCwB,IAA9P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkC,MAAAA,eAAe,EAAC,OAAlB;AAA2BC,MAAAA,IAAI,EAAE,CAAjC;AAAoCC,MAAAA,UAAU,EAAE,OAAhD;AAAyDC,MAAAA,cAAc,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1E,SAAS,GAAG,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,cAApB;AAAmC,IAAA,MAAM,EAAE,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyD,IADrE,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMD,UAAU,CAAC4E,MAAX,EAAN;AAAA,KAA3B;AAAsD,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,IAAI,EAAEpF,KAAK,GAAG,IAArC;AAA2CqF,MAAAA,GAAG,EAAEpF,MAAM,GAAG,KAAzD;AAAgEqF,MAAAA,MAAM,EAAE,GAAxE;AAA6EC,MAAAA,OAAO,EAAE;AAAtF,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEvE,OAAO,4CAAtB;AAAoE,IAAA,KAAK,EAAE;AAACf,MAAAA,MAAM,EAAE;AAAT,KAA3E;AAA0F,IAAA,UAAU,EAAC,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMK,UAAU,CAACkF,QAAX,CAAoB,gBAApB,CAAN;AAAA,KAA3B;AAAwE,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAQ,EAAE,UAAZ;AAAwBM,MAAAA,KAAK,EAAEzF,KAAK,GAAG,IAAvC;AAA6CqF,MAAAA,GAAG,EAAEpF,MAAM,GAAG,KAA3D;AAAkEqF,MAAAA,MAAM,EAAE,GAA1E;AAA+EI,MAAAA,aAAa,EAAE,EAA9F;AAAkGC,MAAAA,UAAU,EAAE;AAA9G,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE3E,OAAO,2CAAtB;AAAmE,IAAA,KAAK,EAAE;AAACf,MAAAA,MAAM,EAAE,EAAT;AAAaD,MAAAA,KAAK,EAAE;AAApB,KAA1E;AAAmG,IAAA,UAAU,EAAC,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC4F,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,QAAQ,EAAE5F,MAAM,GAAG,GAAT,GAAe,EAAf,GAAoB,EAApD;AAAwD6F,MAAAA,UAAU,EAAE,oBAApE;AAA0FX,MAAAA,QAAQ,EAAE,UAApG;AAAgHnF,MAAAA,KAAK,EAAEA,KAAvH;AAA8HqF,MAAAA,GAAG,EAAEpF,MAAM,GAAG,KAA5I;AAAmJ8F,MAAAA,KAAK,EAAE;AAA1J,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoLrF,aAAa,GAAGsF,MAAM,CAACtF,aAAD,CAAN,CAAsBuF,MAAtB,CAA6B,CAA7B,EAAgCC,WAAhC,KAAgDF,MAAM,CAACtF,aAAD,CAAN,CAAsByF,KAAtB,CAA4B,CAA5B,CAAhD,GAAiF,aAApF,GAAoG,eAArS,CATF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAClG,MAAAA,MAAM,EAAEA,MAAT;AAAiBmG,MAAAA,SAAS,EAAEpD,IAAI,CAACqD,GAAL,CAASpG,MAAM,GAAG,IAAlB,EAAwB,EAAxB;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAM,EAAEA,MAAV;AAAkBgF,MAAAA,cAAc,EAAE,QAAlC;AAA4CqB,MAAAA,aAAa,EAAC,QAA1D;AAAoEC,MAAAA,UAAU,EAAE;AAAhF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,OAAO,GAAKrF,YAAY,GAAG,IAAf,GAAsB8B,IAAI,CAACW,KAAL,CAAWzC,YAAY,GAAG,EAA1B,CAAtB,GAAsD8B,IAAI,CAACW,KAAL,CAAWzC,YAAY,GAAG,EAAf,GAAoB,EAA/B,CAA3D,+BAFT;AAGE,IAAA,SAAS,EAAEgD,eAHb;AAIE,IAAA,OAAO,EAAEC,oBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,YADT;AAEE,IAAA,OAAO,EAAKhD,iBAAL,oBAFT;AAGE,IAAA,SAAS,EAAEiD,mBAHb;AAIE,IAAA,OAAO,EAAEC,wBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EAgCE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,cADT;AAEE,IAAA,OAAO,SAAOjD,aAAP,gBAFT;AAGE,IAAA,SAAS,EAAEkD,qBAHb;AAIE,IAAA,OAAO,EAAEC,4BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,EAuCE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAC,mBADT;AAEE,IAAA,OAAO,EAAKlD,UAAL,WAFT;AAGE,IAAA,SAAS,EAAEmD,qBAHb;AAIE,IAAA,OAAO,EAAEC,4BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EA+CE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC6B,MAAAA,aAAa,EAAC,KAAf;AAAsBE,MAAAA,QAAQ,EAAE,MAAhC;AAAwCvB,MAAAA,cAAc,EAAE;AAAxD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzC,kBAAkB,EADrB,EAEGkC,wBAAwB,CAACvD,iBAAD,CAF3B,EAGG0D,sBAAsB,CAACzD,aAAD,CAHzB,EAIE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEJ,OAAO,gDAAhC;AAAkF,IAAA,KAAK,EAAC,aAAxF;AAAsG,IAAA,MAAM,EAAEK,UAA9G;AAA0H,IAAA,QAAQ,EAAEA,UAAU,KAAK,CAAf,GAAmB,KAAnB,GAA2B,MAA/J;AAAuK,IAAA,OAAO,EAAEE,cAAc,KAAK,CAAnB,GAAuB,EAAvB,iBAAwCC,eAAxC,SAA2DD,cAA3D,SAA6EE,cAA7P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CA/CF,EA6DE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8E,MAAAA,UAAU,EAAE,QAAd;AAAwBtG,MAAAA,MAAM,EAAE,GAAhC;AAAqCgF,MAAAA,cAAc,EAAE;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,gEADP;AAEE,IAAA,gBAAgB,EAAC,kBAFnB;AAGE,IAAA,GAAG,EAAC,2CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CA7DF,CAFJ,CAXF,EA+GItE,SAAS,GAAG,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4B,IA/GzC,CADF;AAsHD;AAAA;AAGD,IAAM8F,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACV9B,IAAAA,eAAe,EAAE,SADP;AAEV7E,IAAAA,MAAM,EAAED,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmBgD,IAAI,CAACqD,GAAL,CAASpG,MAAM,GAAG,IAAlB,EAAwB,EAAxB,CAFjB;AAGVD,IAAAA,KAAK,EAAE,GAHG;AAIV6G,IAAAA,YAAY,EAAE,EAJJ;AAKVN,IAAAA,UAAU,EAAE,QALF;AAMVtB,IAAAA,cAAc,EAAE;AANN,GADmB;AAS/B6B,EAAAA,UAAU,EAAE;AACVf,IAAAA,KAAK,EAAE,MADG;AAEVhB,IAAAA,IAAI,EAAE,CAFI;AAGVa,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,QAAQ,EAAE7F,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmB,EAJnB;AAKV8F,IAAAA,UAAU,EAAE;AALF,GATmB;AAgB/BiB,EAAAA,UAAU,EAAE;AACVjC,IAAAA,eAAe,EAAE,OADP;AAEV7E,IAAAA,MAAM,EAAED,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmBgD,IAAI,CAACqD,GAAL,CAASpG,MAAM,GAAG,GAAlB,EAAuB,GAAvB,CAFjB;AAGVD,IAAAA,KAAK,EAAE,GAHG;AAIV6G,IAAAA,YAAY,EAAE,EAJJ;AAKVG,IAAAA,YAAY,EAAE,CALJ;AAMVC,IAAAA,WAAW,EAAE,OANH;AAOVC,IAAAA,aAAa,EAAE,GAPL;AAQVC,IAAAA,YAAY,EAAE;AAACnH,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KARJ;AASVgF,IAAAA,cAAc,EAAE,cATN;AAUVsB,IAAAA,UAAU,EAAE,QAVF;AAWVH,IAAAA,SAAS,EAAE,CAAC;AAXF,GAhBmB;AA6B/BgB,EAAAA,QAAQ,EAAE;AACRpH,IAAAA,KAAK,EAAE,GADC;AAER4F,IAAAA,SAAS,EAAE,QAFH;AAGRE,IAAAA,UAAU,EAAE,mBAHJ;AAIRD,IAAAA,QAAQ,EAAE7F,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmB,EAJrB;AAKRqH,IAAAA,UAAU,EAAErH,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmB;AALvB;AA7BqB,CAAlB,CAAf;AAuCA,OAAO,SAASsH,YAAT,QAAqD;AAAA,MAA9BC,IAA8B,SAA9BA,IAA8B;AAAA,MAAxBC,gBAAwB,SAAxBA,gBAAwB;AAAA,MAANC,GAAM,SAANA,GAAM;AAC1D,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACW,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BG,IAA/B,CADF,EAEE,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEC,gBADX;AAEI,IAAA,YAAY,EAAEf,MAAM,CAACG,UAFzB;AAGI,IAAA,gBAAgB,EAAEH,MAAM,CAACK,UAH7B;AAII,IAAA,OAAO,EAAE;AAAA,aAAM3G,UAAU,CAACuH,gBAAX,CAA4BD,GAA5B,CAAN;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;AAAA;AAED,OAAO,SAASE,WAAT,QAA4D;AAAA,MAAtCC,MAAsC,SAAtCA,MAAsC;AAAA,MAA9BC,OAA8B,SAA9BA,OAA8B;AAAA,MAArBC,SAAqB,SAArBA,SAAqB;AAAA,MAAVC,OAAU,SAAVA,OAAU;AACjE,SACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAED,SADb;AAEE,IAAA,YAAY,EAAE9H,KAFhB;AAGE,IAAA,YAAY,EAAEC,MAHhB;AAIE,IAAA,KAAK,EAAE;AAACgF,MAAAA,cAAc,EAAE,QAAjB;AAA2BsB,MAAAA,UAAU,EAAE;AAAvC,KAJT;AAKE,IAAA,eAAe,EAAE,GALnB;AAME,IAAA,iBAAiB,EAAE,GANrB;AAOE,IAAA,kBAAkB,EAAE,GAPtB;AAQE,IAAA,WAAW,EAAE,UARf;AASE,IAAA,YAAY,EAAE,aAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACtG,MAAAA,MAAM,EAAE,GAAT;AAAcD,MAAAA,KAAK,EAAE,GAArB;AAA0B6G,MAAAA,YAAY,EAAE,EAAxC;AAA4C/B,MAAAA,eAAe,EAAE,OAA7D;AAAsEG,MAAAA,cAAc,EAAC,cAArF;AAAqGsB,MAAAA,UAAU,EAAE;AAAjH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACtB,MAAAA,cAAc,EAAC,QAAhB;AAA0BsB,MAAAA,UAAU,EAAE;AAAtC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACR,MAAAA,KAAK,EAAE,SAAR;AAAmBF,MAAAA,QAAQ,EAAE,EAA7B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkF8B,MAAlF,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC/B,MAAAA,QAAQ,EAAE,EAAX;AAAeD,MAAAA,SAAS,EAAE,QAA1B;AAAoCE,MAAAA,UAAU,EAAE,mBAAhD;AAAqE9F,MAAAA,KAAK,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqH,IAArH,EAA2H6H,OAA3H,CAFF,CADF,EAKE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,YAAY,EAAEpB,MAAM,CAACG,UAFvB;AAGE,IAAA,gBAAgB,EAAEH,MAAM,CAACK,UAH3B;AAIE,IAAA,OAAO,EAAEiB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAXF,CADF;AA0BD;AAAA","sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\nimport { Text, View, StatusBar, Image, Dimensions, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { AuthContext } from '../../components/context';\nimport { useIsFocused } from '@react-navigation/native';\nimport ProfileStatsBlock from '../../components/ProfileStatsBlock';\nimport CreateAccountPopup from '../../components/CreateAccountPopup';\nimport AppButton from '../../components/AppButton';\n\nconst { width, height } = Dimensions.get('window');\n\nimport Modal from 'react-native-modal';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport firebase from 'firebase';\n\n\nexport default function ProfileScreen({navigation}) {\n  const isFocused = useIsFocused();\n  const { signOut, userToken, userFirstName } = useContext(AuthContext);\n\n  const [showPopUp, setShowPopup] = useState(false);\n  \n  useEffect(() => {\n    if (currUser && currUser.isAnonymous || !userToken) {\n      setTimeout(() => {\n        isFocused ? setShowPopup(true) : setShowPopup(false)\n      }, 500);\n    } else {\n      setShowPopup(false);\n    }\n  }, [isFocused])\n\n  let [fontsLoaded] = useFonts({\n    'Assistant': require('../../assets/fonts/Assistant/Assistant-VariableFont_wght.ttf'),\n    'Assistant-Regular': require('../../assets/fonts/Assistant/static/Assistant-Regular.ttf'),\n    'Assistant-SemiBold': require('../../assets/fonts/Assistant/static/Assistant-SemiBold.ttf'),\n  });\n\n  const [userProgress, setUserProgress] = useState({\n    practiceTime: 0,\n    sessionsCompleted: 0,\n    currentStreak: 0,\n    bestStreak: 0,\n    lastDateExercised: 0,\n    bestStreakDate: 0,\n    bestStreakMonth: 0,\n    bestStreakYear: 2021\n  });\n\n  const { practiceTime, sessionsCompleted, currentStreak, bestStreak, lastDateExercised, bestStreakDate, bestStreakMonth, bestStreakYear } = userProgress;\n\n  const currUser = firebase.auth().currentUser;\n  const progressRef = currUser ? firebase.database().ref(currUser.uid).child('progress') : null;\n\n  const getProgress = () => {\n    progressRef.on('value', snapshot => {\n      if (snapshot.val()) {\n        setUserProgress({\n          practiceTime: snapshot.val().practiceTime || 0,\n          sessionsCompleted: snapshot.val().sessionsCompleted || 0,\n          currentStreak: snapshot.val().currentStreak || 0,\n          bestStreak: snapshot.val().bestStreak || 0,\n          lastDateExercised: snapshot.val().lastDateExercised || 0,\n          bestStreakDate: snapshot.val().bestStreakDate || 0,\n          bestStreakMonth: snapshot.val().bestStreakMonth || 0,\n          bestStreakYear: snapshot.val().bestStreakYear || 0\n        })\n      }\n    })\n  };\n\n  useEffect(() => {\n    if (currUser) {\n      getProgress();\n    }\n\n  }, [userToken, currUser])\n\n\n  // useEffect(() => {\n  //   // console.log(userProgress)\n\n  //   // fakeAddProgressData();\n  // }, [])\n\n  // const fakeAddProgressData = async () => {\n  //   const progressPushRef = await firebase.database().ref(currUser.uid).child('progress');\n\n  //   progressPushRef.set({\n  //     practiceTime: 2.7,\n  //     sessionsCompleted: 21,\n  //     currentStreak: 5,\n  //     bestStreak: 7\n  //   })\n  // }\n\n\n  const fiveHrGoal = useRef();\n\n  const renderPracticeTime = () => {\n    let past5Hours = practiceTime;\n    let fiveHours = 18000;\n\n    let count = 1;\n    while (past5Hours > fiveHours) {\n      past5Hours -= fiveHours;\n      count++;\n    }\n    let ceil = (count * fiveHours / 60 / 60);\n    let totalSeconds = count * fiveHours;\n    fiveHrGoal.current = totalSeconds;\n    \n    return practiceTime < 1800 ? <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" seconds={practiceTime} number={(practiceTime / 60 ).toFixed(1)} subtitle=\"Minutes\" subText=\"30 min Goal\" progress={(Math.max(practiceTime, 0.01) / 60 / 60) / 0.5}/> \n    : practiceTime >= 1800 && practiceTime < 7200 ? <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" number={(practiceTime / 60 / 60).toFixed(1)} subtitle=\"Hours\" subText=\"2hr Goal\" progress={(practiceTime / 60 / 60) / 2}/> \n    : practiceTime >= 7200 && practiceTime < 18000 ? <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" number={(practiceTime / 60 / 60).toFixed(1)} subtitle=\"Hours\" subText=\"5hr Goal\" progress={(practiceTime / 60 / 60) / 5}/> \n    : practiceTime >= fiveHours ? <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" number={(practiceTime / 60 / 60).toFixed(1)} subtitle=\"Hours\" subText={`${ceil}hr Goal`} progress={(practiceTime / 60 / 60) / ceil}/> \n    : <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" number=\"0\" subtitle=\"Hours\" subText=\"5hr Goal\" progress={0.01}/>\n  }\n\n\n  // Congratulation Alerts 1\n  const [dismissedTimeGoal, setDismissedTimeGoal] = useState(false);\n  const [dismissedSessions, setDismissedSessions] = useState(false);\n  const [dismissedCurrStreak, setDismissedCurrStreak] = useState(false);\n  const bestStreakSoFar = useRef();\n  \n  const timeConditions = practiceTime < 1800 ? 1800 : \n  practiceTime >= 1800 && practiceTime < 7200 ? 7200 :\n  practiceTime >= 7200 && practiceTime < 18000 ? 18000 :\n  practiceTime >= 18000 ? fiveHrGoal.current : null;\n  \n  const timeGoal = useRef();\n  useEffect(() => {\n    timeGoal.current = timeConditions\n  }, [])\n\n\n  useEffect(() => {\n    if (sessionsCompleted == 0 || currentStreak == 0) return;\n    if (sessionsCompleted % 10 !== 0) setDismissedSessions(false);\n    if (currentStreak % 10 !== 0) setDismissedCurrStreak(false);\n\n    if (isFocused && practiceTime >= timeGoal.current && !dismissedTimeGoal && Math.trunc(timeGoal.current) !== 0) {\n      setTimeout(() => {\n        setTimeGoalVisible(true);\n      }, 1500);\n      // Alert.alert(\"Congrats!\", `You've practiced for ${practiceTime < 3600 ? Math.trunc(practiceTime / 60) : Math.trunc(practiceTime / 60 / 60)} ${practiceTime < 3600 ? \"minutes\" : \"hours\"}!`, [\n      //   {text: \"Awesome!\", onPress: () => {\n      //     setDismissedTimeGoal(true);\n      //     setTimeout(() => {\n      //       timeGoal.current = timeConditions;\n      //       setDismissedTimeGoal(false);\n      //     }, 1000);\n      //   }}\n      // ]);\n    }\n    console.log(practiceTime, fiveHrGoal.current, timeGoal.current);\n\n    if (isFocused && sessionsCompleted % 10 == 0 && !dismissedSessions) {\n      setTimeout(() => {\n        setSessionsGoalVisible(true);\n      }, 1500);\n      // Alert.alert(\"Congrats!\", `You've completed ${sessionsCompleted} sessions!`, [\n      //   {text: \"Awesome!\", onPress: () => setDismissedSessions(true)}\n      // ]);\n    } \n\n    if (isFocused && currentStreak % 10 == 0 && !dismissedCurrStreak) {\n      setTimeout(() => {\n        setCurrStreakGoalVisible(true);\n      }, 1500);\n      // Alert.alert(\"Congrats!\", `You've hit a ${currentStreak} day streak!`, [\n      //   {text: \"Awesome!\", onPress: () => setDismissedCurrStreak(true)}\n      // ]);\n    }\n\n    if (isFocused && bestStreakSoFar.current && bestStreak !== bestStreakSoFar.current) {\n      setTimeout(() => {\n        setBestStreakGoalVisible(true);\n      }, 1500);\n      // Alert.alert(\"Congrats!\", `New Best Streak! ${bestStreak} days!`, [\n      //   {text: \"Awesome!\"}\n      // ]);\n    }\n    bestStreakSoFar.current = bestStreak;\n\n  }, [isFocused])\n\n\n  // Congratulations Alerts 2 - CustomAlerts\n  const [timeGoalVisible, setTimeGoalVisible] = useState(false);\n  const dismissTimeGoalAlert = () => {\n    setTimeGoalVisible(false);\n    setDismissedTimeGoal(true);\n    setTimeout(() => {\n      timeGoal.current = timeConditions;\n      setDismissedTimeGoal(false);\n    }, 1000);\n  };\n\n  const [sessionsGoalVisible, setSessionsGoalVisible] = useState(false);\n  const dismissSessionsGoalAlert = () => {\n    setSessionsGoalVisible(false);\n    setDismissedSessions(true);\n  };\n\n  const [currStreakGoalVisible, setCurrStreakGoalVisible] = useState(false);\n  const dismissCurrStreakGoalVisible = () => {\n    setCurrStreakGoalVisible(false);\n    setDismissedCurrStreak(true);\n  };\n\n  const [bestStreakGoalVisible, setBestStreakGoalVisible] = useState(false);\n  const dismissBestStreakGoalVisible = () => {\n    setBestStreakGoalVisible(false);\n  };\n\n\n\n  const renderMovingSessionsGoal = (sessionsCompleted) => {\n    let rightMostNum = sessionsCompleted % 10;\n    let remainder = 10 - rightMostNum;\n    let ceil = sessionsCompleted + remainder;\n    return <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-hash.png')} title=\"Sessions Completed\" number={sessionsCompleted} subtitle={sessionsCompleted === 1 ? \"Session\" : \"Sessions\"} subText={`${ceil} Session Goal`} progress={ Math.max(sessionsCompleted, 0.01) / ceil }/>\n  }\n\n  const renderMovingStreakGoal = (currentStreak) => {\n    let rightMostNum = currentStreak % 10;\n    let remainder = 10 - rightMostNum;\n    let ceil = currentStreak + remainder;\n    return <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-arrow.png')} title=\"Current Streak\" number={currentStreak} subtitle={currentStreak === 1 ? \"Day\" : \"Days\"} subText={`${ceil} Day Streak Goal`} progress={ Math.max(currentStreak, 0.01) / ceil}/>\n  }\n\n\n  return (\n    <View style={{ backgroundColor:\"white\", flex: 1, resizeMode: \"cover\", justifyContent: \"flex-start\",}}>\n      {isFocused ? <StatusBar barStyle=\"dark-content\" hidden={false}/> : null}\n      <TouchableOpacity onPress={() => navigation.goBack()} style={{position: \"absolute\", left: width * 0.02, top: height * 0.045, zIndex: 100, padding: 15}}>\n        <Image source={require('../../assets/screen-icons/back-arrow.png')} style={{height: 20,}} resizeMode=\"contain\"/>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('SettingsScreen')} style={{ position: \"absolute\", right: width * 0.05, top: height * 0.045, zIndex: 100, paddingBottom: 10, paddingTop: 10 }}>\n        <Image source={require('../../assets/screen-icons/gear-grey.png')} style={{height: 32, width: 60}} resizeMode=\"contain\"/>\n      </TouchableOpacity>\n\n      <Text style={{textAlign: \"center\", fontSize: height < 600 ? 20 : 23, fontFamily: \"Assistant-SemiBold\", position: \"absolute\", width: width, top: height * 0.057, color: '#535353'}}>{userFirstName ? String(userFirstName).charAt(0).toUpperCase() + String(userFirstName).slice(1) + \"'s Progress\" : \"Your Progress\"}</Text>\n    \n      <View style={{height: height, marginTop: Math.min(height * 0.05, 20)}}>\n        {/* <ScrollView> */}\n          <View style={{ height: height, justifyContent: \"center\", flexDirection:\"column\", alignItems: \"center\", }}>\n            {/* { userToken ? \n            <View style={{flexDirection:\"row\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\n              {renderPracticeTime()}\n              {renderMovingSessionsGoal(sessionsCompleted)}\n              {renderMovingStreakGoal(currentStreak)}\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-rocket.png')} title=\"Best Streak\" number={bestStreak} subtitle={bestStreak === 1 ? \"Day\" : \"Days\"} subText={bestStreakDate === 0 ? \"\" : `Achieved ${bestStreakMonth}/${bestStreakDate}/${bestStreakYear}`} />\n            </View>\n                :\n            <View style={{flexDirection:\"row\", flexWrap: \"wrap\", justifyContent: \"center\",}}>\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-timer.png')} title=\"Total Practice Time\" number=\"0\" subtitle=\"Hours\" subText=\"5hr Goal\" progress={0.01}/>\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-hash.png')} title=\"Sessions Completed\" number=\"0\" subtitle=\"Sessions\" subText=\"30 Session Goal\" progress={0.01}/>\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-arrow.png')} title=\"Current Streak\" number=\"0\" subtitle=\"Days\" subText=\"10 Day Streak Goal\" progress={0.01}/>\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-rocket.png')} title=\"Best Streak\" number=\"0\" subtitle=\"Days\" subText=\"No Streak\" />\n            </View>\n            } */}\n\n\n            <CustomAlert \n              header=\"Great Job!\"\n              message={`${practiceTime < 3600 ? Math.trunc(practiceTime / 60) : Math.trunc(practiceTime / 60 / 60)} Minutes of Practice Time`}\n              isVisible={timeGoalVisible}\n              onPress={dismissTimeGoalAlert}\n              />\n\n            <CustomAlert \n              header=\"Well Done!\"\n              message={`${sessionsCompleted} Total Sessions`}\n              isVisible={sessionsGoalVisible}\n              onPress={dismissSessionsGoalAlert}\n            />\n\n            <CustomAlert \n              header=\"Nice Streak!\"\n              message={`a ${currentStreak}-Day Streak`}\n              isVisible={currStreakGoalVisible}\n              onPress={dismissCurrStreakGoalVisible}\n            />\n\n            <CustomAlert \n              header=\"New Best Streak! \"\n              message={`${bestStreak} Days!`}\n              isVisible={bestStreakGoalVisible}\n              onPress={dismissBestStreakGoalVisible}\n            />\n\n\n            <View style={{flexDirection:\"row\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\n              {renderPracticeTime()}\n              {renderMovingSessionsGoal(sessionsCompleted)}\n              {renderMovingStreakGoal(currentStreak)}\n              <ProfileStatsBlock icon={require('../../assets/screen-icons/profile-rocket.png')} title=\"Best Streak\" number={bestStreak} subtitle={bestStreak === 1 ? \"Day\" : \"Days\"} subText={bestStreakDate === 0 ? \"\" : `Achieved ${bestStreakMonth}/${bestStreakDate}/${bestStreakYear}`} />\n            </View>\n  \n            {/* <TouchableOpacity style={{ width: 80, justifyContent: \"center\", alignItems: \"center\", padding: 5}} onPress={() => \"\"}>\n              <View style={{flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <Image source={require('../../assets/screen-icons/share.png')} resizeMode=\"contain\" style={{height: 17, width: 17, margin: 7}}/>\n                <Text style={{fontFamily: \"Assistant-SemiBold\", color: \"#535353\", fontSize: 19}}>Share</Text>\n              </View>\n            </TouchableOpacity> */}\n\n            <View style={{ alignItems: \"center\", height: 150, justifyContent: \"space-evenly\"}}> \n              {/* <Text style={{color: \"#535353\", fontFamily: \"Assistant-SemiBold\", fontSize: 17.5, lineHeight: 22, width: 220, textAlign: \"center\", }}>\n              Upgrade to Unlimited and\n              gain access to the full library.\n              </Text>\n              <AppButton \n                  title=\"Get Memoir Unlimited\" \n                  buttonStyles={styles.blueButton}\n                  buttonTextStyles={styles.buttonText}\n                  onPress={() => navigation.navigate('ProMemberScreen')}\n                /> */}\n\n              <FeedbackCard \n                text=\"We're currently in beta. Send us a suggestion or report a bug.\"\n                callToActionText=\"Send Us Feedback\"\n                url=\"https://memoirapp.squarespace.com/contact\"\n              />\n\n              {/* <FeedbackCard \n                text=\"Are you enjoying Memoir? Leave us a review in the App Store.\"\n                callToActionText=\"Write a Review\"\n                url=\"https://memoirapp.squarespace.com/contact\"\n              />\n              <FeedbackCard \n                text=\"Enjoying Memoir? Leave us a review in the Google Play Store.\"\n                callToActionText=\"Write a Review\"\n                url=\"https://memoirapp.squarespace.com/contact\"\n              /> */}\n\n            </View>\n            \n          </View>\n\n        {/* </ScrollView> */}\n\n      </View>\n\n      { showPopUp ? <CreateAccountPopup /> : null }\n      {/* { !userToken ? <CreateAccountPopup /> : null } */}\n\n    </View>\n    \n  )\n};\n\n\nconst styles = StyleSheet.create({\n  blueButton: {\n    backgroundColor: \"#3681C7\",\n    height: width < 330 ? 35 : Math.min(height * 0.07, 44),\n    width: 225,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {    \n    color: \"#fff\",\n    flex: 1,\n    textAlign: \"center\",\n    fontSize: width < 330 ? 19 : 21,\n    fontFamily: \"Assistant-SemiBold\"\n  },\n  buttonCard: {\n    backgroundColor: \"white\",\n    height: width < 330 ? 90 : Math.min(height * 0.2, 134),\n    width: 293,\n    borderRadius: 15,\n    shadowRadius: 4,\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: {width: 2, height: 3},\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    marginTop: -20\n  },\n  cardText: {\n    width: 230, \n    textAlign: \"center\", \n    fontFamily: \"Assistant-Regular\", \n    fontSize: width < 330 ? 15 : 17, \n    lineHeight: width < 330 ? 17 : 19.96\n  }\n});\n\n\nexport function FeedbackCard({text, callToActionText, url}) {\n  return (\n    <View style={styles.buttonCard}>\n      <Text style={styles.cardText}>{text}</Text>\n      <AppButton \n          title={callToActionText} \n          buttonStyles={styles.blueButton}\n          buttonTextStyles={styles.buttonText}\n          onPress={() => WebBrowser.openBrowserAsync(url)}\n        />\n    </View>\n  )\n};\n\nexport function CustomAlert({header, message, isVisible, onPress}) {\n  return(\n    <Modal \n      isVisible={isVisible}\n      deviceHeight={width}\n      deviceHeight={height}\n      style={{justifyContent: \"center\", alignItems: \"center\"}}\n      backdropOpacity={0.6}\n      animationInTiming={600}\n      animationOutTiming={600}\n      animationIn={\"fadeInUp\"}\n      animationOut={\"fadeOutDown\"}\n    >\n      <View style={{height: 208, width: 317, borderRadius: 15, backgroundColor: \"white\", justifyContent:\"space-evenly\", alignItems: \"center\"}}>\n        <View style={{justifyContent:\"center\", alignItems: \"center\"}}>\n          <Text style={{color: \"#3681C7\", fontSize: 26, fontFamily: \"Assistant-SemiBold\"}}>{header}</Text>\n          <Text style={{fontSize: 17, textAlign: \"center\", fontFamily: \"Assistant-Regular\", width: \"70%\"}}>You've accomplished{\"\\n\"}{message}</Text>\n        </View>\n        <AppButton \n          title=\"Continue\" \n          buttonStyles={styles.blueButton}\n          buttonTextStyles={styles.buttonText}\n          onPress={onPress}\n        />\n      </View>\n    </Modal>\n  )\n};"]},"metadata":{},"sourceType":"module"}